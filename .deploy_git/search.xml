<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2025/05/13/nova%E5%BC%80%E5%8F%91usb%E8%BF%9B%E7%A8%8B/"/>
      <url>/2025/05/13/nova%E5%BC%80%E5%8F%91usb%E8%BF%9B%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="nova目录分析"><a href="#nova目录分析" class="headerlink" title="nova目录分析"></a>nova目录分析</h1><h2 id="nova组件："><a href="#nova组件：" class="headerlink" title="nova组件："></a>nova组件：</h2><ul><li>nova-api: nova-api主要接受外部nova外部api调用。</li><li>nova-conductor:nova-conductor主要操作数据库。</li><li>nova-comoute：主要通过libvirt等下层组件操作实例。</li></ul><h2 id="nova目录详情："><a href="#nova目录详情：" class="headerlink" title="nova目录详情："></a>nova目录详情：</h2><p><img src="https://cdn.nlark.com/yuque/0/2023/jpeg/26098815/1697079908226-8056d8e6-9aa7-4765-a7a3-44364d039db6.jpeg"></p><h1 id="WSGI"><a href="#WSGI" class="headerlink" title="WSGI"></a>WSGI</h1><h1 id="sqlalchemy"><a href="#sqlalchemy" class="headerlink" title="sqlalchemy"></a>sqlalchemy</h1><h1 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h1><ul><li>nova 早期的OpenStack只有nova一个数据库，里面存放了所有的关于虚拟机的表。如instance表：存放每一个主机主机信息（后面会介绍到）；quotas表：项目配额信息 ；fixed_ips表；块存储设备表等。</li><li>nova_api 从nova数据库中移除的一部分全局数据表组成的数据库，如flavors、key_pairs、quotas等。noav_api的出现是为了解决大规模时消息队列和数据库瓶颈问题。</li><li>nova_cell0 nova_cell0数据中存放了所有创建失败的instance。虚拟机创建失败后不属于任何一个cell，那么就记录在nova_cell0中。</li></ul><p>参考：<a href="https://hellowac.github.io/technology/python/sqlalchemy/">https://hellowac.github.io/technology/python/sqlalchemy/</a></p><h2 id="nova-manager-："><a href="#nova-manager-：" class="headerlink" title="nova-manager ："></a>nova-manager ：</h2><p>查看当前数据库版本：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/26098815/1694767694502-66030176-97af-4937-a435-c5cf10c24c4c.png#averageHue=%23242424&clientId=u2abe46d4-9561-4&from=paste&height=48&id=uc1d572e7&originHeight=60&originWidth=597&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=10895&status=done&style=none&taskId=uf0ad4f28-44e0-4bda-a19a-1f139f01310&title=&width=477.6" alt="image.png"><br>注：当前数据库版本对应：nova&#x2F;db&#x2F;sqlalchemy&#x2F;migrate_repo&#x2F;versions&#x2F;中文件版本<br><img src="https://cdn.nlark.com/yuque/0/2023/png/26098815/1694767901297-19b51841-3ed4-42d7-bf3e-f40a35adac8b.png#averageHue=%23e1e4d9&clientId=u2abe46d4-9561-4&from=paste&height=57&id=u8c277543&originHeight=71&originWidth=626&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=13762&status=done&style=none&taskId=ud0c0f397-4ba8-46af-908c-535569b2c09&title=&width=500.8" alt="image.png"><br>可以使用：nova-manage db sync 同步数据库<br><img src="https://cdn.nlark.com/yuque/0/2023/png/26098815/1694768037496-897dff96-cbf0-456b-8b07-add31b402d3a.png#averageHue=%23242424&clientId=u2abe46d4-9561-4&from=paste&height=220&id=uc0d53f1f&originHeight=275&originWidth=1870&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=70814&status=done&style=none&taskId=ud35e5ad4-0cfe-48eb-8962-9718c0d3b4c&title=&width=1496" alt="image.png"><br>同步失败，报错信息：<br>ERROR: Could not access cell0.<br>Has the nova_api database been created?<br>Has the nova_cell0 database been created?<br>Has “nova-manage api_db sync” been run?<br>Has “nova-manage cell_v2 map_cell0” been run?<br>Is [api_database]&#x2F;connection set in nova.conf?<br>Is the cell0 database connection URL correct?<br>Error: Foreign key associated with column ‘instance_actions.instance_uuid’ could not find table ‘instances’ with which to generate a foreign key to target column ‘uuid。<br>参考：<a href="https://docs.openstack.org/nova/rocky/cli/nova-manage.html">https://docs.openstack.org/nova/rocky/cli/nova-manage.html</a><br>分析问题：其他环境运行正常，删除新增的实体类文件之后，运行正常。<br>解决问题：学习nova创建实体类并同步创建数据库。<br>参考：<a href="https://blog.csdn.net/chengqiuming/article/details/79672973">https://blog.csdn.net/chengqiuming/article/details/79672973</a><br>参考：<a href="https://stackoverflow.com/questions/28047027/sqlalchemy-not-find-table-for-creating-foreign-key">https://stackoverflow.com/questions/28047027/sqlalchemy-not-find-table-for-creating-foreign-key</a><br>在实体类文件中添加meta.reflect()函数之后，执行nova-manage db sync ${version}成功。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nova-manage db sync 413</span><br></pre></td></tr></table></figure><p><img src="https://cdn.nlark.com/yuque/0/2023/png/26098815/1695020664736-595464c3-6758-4c32-88c0-58eab95b44e7.png#averageHue=%23e6dba7&clientId=u4b9cd771-95ab-4&from=paste&height=864&id=ueca8c230&originHeight=1080&originWidth=1870&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=337902&status=done&style=none&taskId=uffc198c6-a123-471b-b581-a2d8af1a65a&title=&width=1496" alt="image.png"><br>在nova_cell0数据库创建devices数据表成功。<br><img src="https://cdn.nlark.com/yuque/0/2023/png/26098815/1695020575978-1a79ae14-767e-4f63-8afb-3f27f7548208.png#averageHue=%23f9f9f8&clientId=u4b9cd771-95ab-4&from=paste&height=864&id=uf2b38cc2&originHeight=1080&originWidth=1920&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=146635&status=done&style=none&taskId=u1c3ea37e-3f4f-4b42-b526-5204d17ef58&title=&width=1536" alt="image.png"><br>注：nova_cell0 是不适用，用于保存失败数据。<br>分析原因：nova_api和nova_conductorl中的&#x2F;etc&#x2F;nova&#x2F;nova.conf地址不一样。为什么不一样？下回分析。<br>解决方案：操作数据库的时候单独配置数据库链接数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nova-manage db sync \</span><br><span class="line">   --database_connection mysql+pymysql://root:secretmysql@dbserver/nova_cell0?charset=utf8</span><br></pre></td></tr></table></figure><h1 id="开发查询接口"><a href="#开发查询接口" class="headerlink" title="开发查询接口"></a>开发查询接口</h1><p>报错如下：<br><img src="https://cdn.nlark.com/yuque/0/2023/png/26098815/1696926488107-53fe9b2f-b46c-478d-a67b-a900224e5c45.png#averageHue=%232c2e20&clientId=ube672ce4-aec2-4&from=paste&height=864&id=u8892f3a1&originHeight=1080&originWidth=1920&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=501052&status=done&style=none&taskId=u70a770cd-2815-4b1e-a73b-d80da7b7951&title=&width=1536" alt="image.png"><br>引入定义装饰器的类</p><h1 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h1><p>重启nova-compute立即执行定时任务。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2025/05/13/kolla%E6%9E%84%E5%BB%BA%E9%95%9C%E5%83%8F/"/>
      <url>/2025/05/13/kolla%E6%9E%84%E5%BB%BA%E9%95%9C%E5%83%8F/</url>
      
        <content type="html"><![CDATA[<pre><code>kolla提供编译镜像的功能，kolla-ansible具有部署openstack的功能。</code></pre><h3 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h3><h4 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">disable</span> --now firewalld</span><br></pre></td></tr></table></figure><h4 id="配置域名"><a href="#配置域名" class="headerlink" title="配置域名"></a>配置域名</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#增加域名解析</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;10.30.38.116 harbor.chinauos.com&quot;</span> &gt;&gt; /etc/hosts</span><br></pre></td></tr></table></figure><p>注：<br>“registry.uniontech.com”和“harbor.chinauos.com” 是两个容器镜像仓库。<br>其中“harbor.chinauos.com”是对外仓库，“registry.uniontech.com”是研发仓库。</p><h3 id="搭建编译环境"><a href="#搭建编译环境" class="headerlink" title="搭建编译环境"></a>搭建编译环境</h3><h4 id="安装配置docker"><a href="#安装配置docker" class="headerlink" title="安装配置docker"></a>安装配置docker</h4><p>安装docker和openstack-kolla包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install moby-engine  git -y python3-devel</span><br></pre></td></tr></table></figure><p>配置docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> --now  docker.service</span><br></pre></td></tr></table></figure><p>修改docker配置文件:&#x2F;etc&#x2F;docker&#x2F;daemon.json</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;insecure-registries&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;registry.uniontech.com&quot;</span>, <span class="string">&quot;harbor.chinauos.com&quot;</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注：配置docker拉取容器镜像的仓库，配置此域名之后要配置相应的域名。<br>“registry.uniontech.com”账户和密码：<br>“harbor.chinauos.com”账户和密码：<br>为docker配置不安全仓库之后重新启动docker服务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload </span><br><span class="line">systemctl restart docker.service </span><br></pre></td></tr></table></figure><h4 id="安装openstack-kolla"><a href="#安装openstack-kolla" class="headerlink" title="安装openstack-kolla"></a>安装openstack-kolla</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#拉起openstack-kolla源码</span></span><br><span class="line">git <span class="built_in">clone</span> -b victoria-source \</span><br><span class="line"><span class="string">&quot;http://gerrit-dev.uniontech.com/openstack/openstack-kolla&quot;</span></span><br><span class="line"><span class="comment">#切换到响应的分支安装</span></span><br><span class="line"><span class="comment">#使用pip3安装/卸载源码</span></span><br><span class="line">pip3 install openstack-kolla/</span><br><span class="line">pip3 uninstall openstack-kolla/</span><br></pre></td></tr></table></figure><p>注：</p><ol><li>安装后所有容器镜像的Dockerfile都在&#x2F;usr&#x2F;local&#x2F;share&#x2F;kolla&#x2F;docker对应名称目录下。</li><li>若需要修改容器镜像找到对应的目录，更改模板文件即可。</li><li>更新sql文件，请将sql文件重新命名为ustack.sql.j2。</li></ol><h4 id="登录harbor仓库"><a href="#登录harbor仓库" class="headerlink" title="登录harbor仓库"></a>登录harbor仓库</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker login harbor.chinauos.com</span><br></pre></td></tr></table></figure><p>Username: ustack<br>Password: Ustack12#$<br>参考：<a href="https://ivanzz1001.github.io/records/post/docker/2018/04/11/docker-harbor-uage">https://ivanzz1001.github.io/records/post/docker/2018/04/11/docker-harbor-uage</a><br>harbor是镜像管理平台，登录用户之后，则可根据用户角色权限操作镜像。</p><h3 id="编译镜像"><a href="#编译镜像" class="headerlink" title="编译镜像"></a>编译镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">kolla-build \</span><br><span class="line">--base-image harbor.chinauos.com/ren-test/uniontechos-server-20-1060a-x86  \</span><br><span class="line">--config-file kolla-build.conf \</span><br><span class="line">-t <span class="built_in">source</span> \</span><br><span class="line">--base uniontechos \</span><br><span class="line">--tag victoria \</span><br><span class="line">nova</span><br></pre></td></tr></table></figure><p>参数说明:<br>–base-image 使用指定的基础镜像<br>–base 构建uniontechos镜像<br>–tag 构建镜像生成镜像的tag<br>–base-image 根据不架构修改-x86&#x2F;-arm<br>–config-file 指定特定的源码地址构建镜像。<br>–template-only 不制作镜像，仅仅生成 Dockerfile文件。<br>注：openstack上搭建环境时，建议采用外部网络直连的方式配置虚拟机网络，采用xlan网络配置浮动ip时，在构建容器镜像时会导致安装依赖失败，拉取不到容器里的依赖，亲测有效。<br>注：部分参数可以使用kolla-build –help查询，image和tag等变量信息可以登录harbor进行查看。例如当前镜像在harbor.chinauos.com域名下的ren-test项目下的uniontechos-server-20-1060a-x86镜像。点击镜像即可查询tag名称。<br>kolla-build.conf 格式参考如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[nova-base]</span><br><span class="line"><span class="built_in">type</span> = git</span><br><span class="line">location = http://gerrit-dev.uniontech.com/openstack/openstack-nova</span><br><span class="line">reference = victoria-source</span><br><span class="line"></span><br><span class="line">[cinder-base]</span><br><span class="line"><span class="built_in">type</span> = git</span><br><span class="line">location = http://gerrit-dev.uniontech.com/openstack/openstack-cinder</span><br><span class="line">reference = victoria-source</span><br></pre></td></tr></table></figure><p>容器镜像仓库配置。可根据自身想要的安装包，配置源地址，此处的源地址是指构建容器镜像时安装依赖的rpm包的仓库地址。<br>构建镜像 x86的源为:&#x2F;usr&#x2F;local&#x2F;share&#x2F;kolla&#x2F;docker&#x2F;base&#x2F;UniontechOS.repo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">[UniontechOS-<span class="variable">$releasever</span>-AppStream]</span><br><span class="line">name = UniontechOS <span class="variable">$releasever</span> AppStream</span><br><span class="line"><span class="comment">#baseurl = https://cdimage.uniontech.com/server-dev/1060/a/release/compose/AppStream/x86_64/os/</span></span><br><span class="line">baseurl = https://cdimage.uniontech.com/server-dev/1060/a/RC/RC3/compose/AppStream/x86_64/os/</span><br><span class="line">enabled = 1</span><br><span class="line">gpgcheck = 0</span><br><span class="line">module_hotfixes=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[UniontechOS-<span class="variable">$releasever</span>-BaseOS]</span><br><span class="line">name = UniontechOS <span class="variable">$releasever</span> BaseOS</span><br><span class="line"><span class="comment">#baseurl = http://10.30.38.131/kojifiles/repos/kongzi-build/latest/x86_64/</span></span><br><span class="line">baseurl = https://cdimage.uniontech.com/server-dev/1060/a/RC/RC3/compose/BaseOS/x86_64/os/</span><br><span class="line"><span class="comment">#baseurl = https://cdimage.uniontech.com/server-dev/1060/a/release/compose/BaseOS/x86_64/os/</span></span><br><span class="line">enabled = 1</span><br><span class="line">gpgcheck = 0</span><br><span class="line">module_hotfixes=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[UnionTechOS-<span class="variable">$releasever</span>-openstack]</span><br><span class="line">name = UnionTechOS <span class="variable">$releasever</span> openstack</span><br><span class="line">baseurl = https://cdimage.uniontech.com/server-dev/1060/a/RC/RC3/compose/OpenStack-Victoria/x86_64/os/</span><br><span class="line"><span class="comment">#baseurl = http://10.30.38.131/kojifiles/repos/kongzi-openstack-victoria-build/latest/x86_64/</span></span><br><span class="line">enabled = 1</span><br><span class="line">gpgcheck = 0</span><br><span class="line"></span><br><span class="line">[ceph]</span><br><span class="line">name=ceph</span><br><span class="line">baseurl=https://cdimage.uniontech.com/server-dev/1060/a/RC/RC3/compose/Storage/x86_64/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=0</span><br><span class="line">module_hotfixes=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[Tools]</span><br><span class="line">name = Tools</span><br><span class="line">baseurl = https://cdimage.uniontech.com/server-dev/1060/a/RC/RC3/compose/PowerTools/x86_64/os/</span><br><span class="line">enabled = 0</span><br><span class="line">gpgcheck = 0</span><br><span class="line"></span><br><span class="line">[PLUS]</span><br><span class="line">name = plus</span><br><span class="line">baseurl = https://cdimage.uniontech.com/server-dev/1060/a/RC/RC3/compose/Plus/x86_64/os/</span><br><span class="line">enabled = 0</span><br><span class="line">gpgcheck = 0</span><br></pre></td></tr></table></figure><p>构建镜像 arm的源为:&#x2F;usr&#x2F;local&#x2F;share&#x2F;kolla&#x2F;docker&#x2F;base&#x2F;Ustack_aarch64.repo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">[UniontechOS-<span class="variable">$releasever</span>-AppStream]</span><br><span class="line">name = UniontechOS <span class="variable">$releasever</span> AppStream</span><br><span class="line"><span class="comment">#https://cdimage.uniontech.com/server-dev/1060/e/release-0606/arm64/OS/</span></span><br><span class="line">baseurl = https://cdimage.uniontech.com/server-dev/1060/a/RC/RC3/compose/AppStream/aarch64/os/</span><br><span class="line"><span class="comment">#baseurl = http://pools.uniontech.com/server-enterprise-c/kongzi/1020/AppStream/x86_64/</span></span><br><span class="line">enabled = 1</span><br><span class="line">gpgcheck = 0</span><br><span class="line"><span class="comment">#module_hotfixes=true</span></span><br><span class="line"></span><br><span class="line">[UniontechOS-<span class="variable">$releasever</span>-BaseOS]</span><br><span class="line">name = UniontechOS <span class="variable">$releasever</span> BaseOS</span><br><span class="line"><span class="comment">#baseurl = https://cdimage.uniontech.com/server-dev/1060/e/release-0606/arm64/everything/</span></span><br><span class="line">baserurl = http://10.30.38.131/kojifiles/repos/kongzi-build/latest/aarch64/</span><br><span class="line"><span class="comment">#baseurl = https://cdimage.uniontech.com/server-dev/1060/a/RC/RC3/compose/BaseOS/aarch64/os/</span></span><br><span class="line">enabled = 1</span><br><span class="line">gpgcheck = 0</span><br><span class="line"><span class="comment">#module_hotfixes=true</span></span><br><span class="line"></span><br><span class="line">[UnionTechOS-<span class="variable">$releasever</span>-openstack]</span><br><span class="line">name = UnionTechOS <span class="variable">$releasever</span> openstack</span><br><span class="line"><span class="comment">#baseurl = https://cdimage.uniontech.com/server-dev/1060/e/release-0606/arm64/OpenStack-V/</span></span><br><span class="line">baseurl = https://cdimage.uniontech.com/server-dev/1060/a/RC/RC3/compose/OpenStack-Victoria/aarch64/os/</span><br><span class="line">enabled = 1</span><br><span class="line">gpgcheck = 0</span><br><span class="line"></span><br><span class="line">[ceph]</span><br><span class="line">name=ceph</span><br><span class="line">baseurl=https://cdimage.uniontech.com/server-dev/1060/a/RC/RC3/compose/Storage/aarch64/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">module_hotfixes=<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">[Tools]</span><br><span class="line">name = Tools</span><br><span class="line">baseurl = https://cdimage.uniontech.com/server-dev/1060/a/RC/RC3/compose/PowerTools/aarch64/os/</span><br><span class="line">enabled = 1</span><br><span class="line">gpgcheck = 0</span><br><span class="line"></span><br><span class="line">[PLUS]</span><br><span class="line">name = plus</span><br><span class="line">baseurl = https://cdimage.uniontech.com/server-dev/1060/a/RC/RC3/compose/Plus/aarch64/os/</span><br><span class="line">enabled = 1</span><br><span class="line">gpgcheck = 0</span><br></pre></td></tr></table></figure><p>注：制作ustack-web需要修改start.sh 如下:&#x2F;usr&#x2F;local&#x2F;share&#x2F;kolla&#x2F;docker&#x2F;base&#x2F;start.sh<br><img src="https://cdn.nlark.com/yuque/0/2023/png/26098815/1695277271879-efa44824-2de4-48af-86b1-8d348c42d10c.png#averageHue=%2314172a&clientId=u4d0409ea-d20d-4&from=paste&height=74&id=u8dd3bc39&originHeight=93&originWidth=591&originalType=binary&ratio=1.25&rotation=0&showTitle=false&size=9779&status=done&style=none&taskId=u8ca6c926-8137-456f-acc7-eeef95147c0&title=&width=472.8" alt="image.png"></p><h3 id="推送镜像到harbor"><a href="#推送镜像到harbor" class="headerlink" title="推送镜像到harbor"></a>推送镜像到harbor</h3><p>执行如下脚本前请先根据操作环境修改变量。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> -o errexit</span><br><span class="line"></span><br><span class="line">TAG=victoria</span><br><span class="line">KOLLA_NAMESPECE=kolla</span><br><span class="line">UOS_REGISTRY=harbor.chinauos.com</span><br><span class="line">UOS_NAMESPACE=kolla-ustack-v-x86</span><br><span class="line"><span class="comment">#ren-test项目中的镜像为基础镜像，kolla-ustack-v-x86项目中的镜像为持续更新的研发镜像。</span></span><br><span class="line"></span><br><span class="line">KOLLA_SOURCE=$(docker images | awk /kolla/<span class="string">&#x27;&#123;print $1&#125;&#x27;</span>| xargs -I &#123;&#125; <span class="built_in">echo</span> -e &#123;&#125;<span class="string">&#x27;:&#x27;</span><span class="variable">$&#123;TAG&#125;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="variable">$&#123;KOLLA_SOURCE&#125;</span>; <span class="keyword">do</span></span><br><span class="line">        DOCKER_IMAGE_LINE=$(<span class="built_in">echo</span> <span class="variable">$i</span> | <span class="built_in">tr</span> <span class="string">&#x27; &#x27;</span> <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        UOS_TEST=<span class="variable">$&#123;DOCKER_IMAGE_LINE#<span class="variable">$&#123;KOLLA_NAMESPECE&#125;</span>&#125;</span></span><br><span class="line">        UOS_TAG=<span class="variable">$&#123;UOS_REGISTRY&#125;</span>/<span class="variable">$&#123;UOS_NAMESPACE&#125;</span><span class="variable">$&#123;UOS_TEST&#125;</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$&#123;UOS_TAG&#125;</span></span><br><span class="line">        docker tag <span class="variable">$&#123;DOCKER_IMAGE_LINE&#125;</span> <span class="variable">$&#123;UOS_TAG&#125;</span></span><br><span class="line">        docker push <span class="variable">$&#123;UOS_TAG&#125;</span></span><br><span class="line">        docker rmi -f <span class="variable">$&#123;UOS_TAG&#125;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2025/05/13/OpenEuler-24.03-LTS-SP1-Antelope/"/>
      <url>/2025/05/13/OpenEuler-24.03-LTS-SP1-Antelope/</url>
      
        <content type="html"><![CDATA[<h1 id="OpenStack-Antelope-部署指南"><a href="#OpenStack-Antelope-部署指南" class="headerlink" title="OpenStack Antelope 部署指南"></a>OpenStack Antelope 部署指南</h1><p>[TOC]</p><p>本文档是 openEuler OpenStack SIG 编写的基于 |openEuler 24.03 LTS SP1 的 OpenStack 部署指南，内容由 SIG 贡献者提供。在阅读过程中，如果您有任何疑问或者发现任何问题，请<a href="https://gitee.com/openeuler/openstack#%E8%81%94%E7%B3%BB%E6%96%B9%E5%BC%8F">联系</a>SIG维护人员，或者直接<a href="https://gitee.com/openeuler/openstack/issues">提交issue</a></p><p><strong>约定</strong></p><p>本章节描述文档中的一些通用约定。</p><table><thead><tr><th align="center">名称</th><th align="center">定义</th></tr></thead><tbody><tr><td align="center">RABBIT_PASS</td><td align="center">rabbitmq的密码，由用户设置，在OpenStack各个服务配置中使用</td></tr><tr><td align="center">CINDER_PASS</td><td align="center">cinder服务keystone用户的密码，在cinder配置中使用</td></tr><tr><td align="center">CINDER_DBPASS</td><td align="center">cinder服务数据库密码，在cinder配置中使用</td></tr><tr><td align="center">KEYSTONE_DBPASS</td><td align="center">keystone服务数据库密码，在keystone配置中使用</td></tr><tr><td align="center">GLANCE_PASS</td><td align="center">glance服务keystone用户的密码，在glance配置中使用</td></tr><tr><td align="center">GLANCE_DBPASS</td><td align="center">glance服务数据库密码，在glance配置中使用</td></tr><tr><td align="center">HEAT_PASS</td><td align="center">在keystone注册的heat用户密码，在heat配置中使用</td></tr><tr><td align="center">HEAT_DBPASS</td><td align="center">heat服务数据库密码，在heat配置中使用</td></tr><tr><td align="center">CYBORG_PASS</td><td align="center">在keystone注册的cyborg用户密码，在cyborg配置中使用</td></tr><tr><td align="center">CYBORG_DBPASS</td><td align="center">cyborg服务数据库密码，在cyborg配置中使用</td></tr><tr><td align="center">NEUTRON_PASS</td><td align="center">在keystone注册的neutron用户密码，在neutron配置中使用</td></tr><tr><td align="center">NEUTRON_DBPASS</td><td align="center">neutron服务数据库密码，在neutron配置中使用</td></tr><tr><td align="center">PROVIDER_INTERFACE_NAME</td><td align="center">物理网络接口的名称，在neutron配置中使用</td></tr><tr><td align="center">OVERLAY_INTERFACE_IP_ADDRESS</td><td align="center">Controller控制节点的管理ip地址，在neutron配置中使用</td></tr><tr><td align="center">METADATA_SECRET</td><td align="center">metadata proxy的secret密码，在nova和neutron配置中使用</td></tr><tr><td align="center">PLACEMENT_DBPASS</td><td align="center">placement服务数据库密码，在placement配置中使用</td></tr><tr><td align="center">PLACEMENT_PASS</td><td align="center">在keystone注册的placement用户密码，在placement配置中使用</td></tr><tr><td align="center">NOVA_DBPASS</td><td align="center">nova服务数据库密码，在nova配置中使用</td></tr><tr><td align="center">NOVA_PASS</td><td align="center">在keystone注册的nova用户密码，在nova,cyborg,neutron等配置中使用</td></tr><tr><td align="center">IRONIC_DBPASS</td><td align="center">ironic服务数据库密码，在ironic配置中使用</td></tr><tr><td align="center">IRONIC_PASS</td><td align="center">在keystone注册的ironic用户密码，在ironic配置中使用</td></tr><tr><td align="center">IRONIC_INSPECTOR_DBPASS</td><td align="center">ironic-inspector服务数据库密码，在ironic-inspector配置中使用</td></tr><tr><td align="center">IRONIC_INSPECTOR_PASS</td><td align="center">在keystone注册的ironic-inspector用户密码，在ironic-inspector配置中使用</td></tr></tbody></table><p>OpenStack SIG 提供了多种基于 openEuler 部署 OpenStack 的方法，以满足不同的用户场景，请按需选择。</p><h2 id="基于RPM部署"><a href="#基于RPM部署" class="headerlink" title="基于RPM部署"></a>基于RPM部署</h2><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><p>本文档基于OpenStack经典的三节点环境进行部署，三个节点分别是控制节点(Controller)、计算节点(Compute)、存储节点(Storage)，其中存储节点一般只部署存储服务，在资源有限的情况下，可以不单独部署该节点，把存储节点上的服务部署到计算节点即可。</p><p>首先准备三个|openEuler 24.03 LTS SP1环境，根据您的环境，下载对应的镜像并安装即可：<a href="https://repo.openeuler.org/openEuler-24.03-LTS-SP1/ISO/">ISO镜像</a>、<a href="https://repo.openeuler.org/openEuler-24.03-LTS-SP1/virtual_machine_img/">qcow2镜像</a>。</p><p>下面的安装按照如下拓扑进行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">controller：192.168.0.2</span><br><span class="line">compute：   192.168.0.3</span><br><span class="line">storage：   192.168.0.4</span><br></pre></td></tr></table></figure><p>如果您的环境IP不同，请按照您的环境IP修改相应的配置文件。</p><p>本文档的三节点服务拓扑如下图所示(只包含Keystone、Glance、Nova、Cinder、Neutron这几个核心服务，其他服务请参考具体部署章节)：</p><p><img src="/../img/install/topology1.PNG" alt="topology1"><br><img src="/../img/install/topology2.PNG" alt="topology2"><br><img src="/../img/install/topology3.PNG" alt="topology3"></p><p>在正式部署之前，需要对每个节点做如下配置和检查：</p><ol><li><p>配置 |openEuler 24.03 LTS SP1 官方 yum 源，需要启用 EPOL 软件仓以支持 OpenStack</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum update</span><br><span class="line">yum install openstack-release-antelope</span><br><span class="line">yum clean all &amp;&amp; yum makecache</span><br></pre></td></tr></table></figure><p> <strong>注意</strong>：如果你的环境的YUM源没有启用EPOL，需要同时配置EPOL，确保EPOL已配置，如下所示。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/yum.repos.d/openEuler.repo</span><br><span class="line"></span><br><span class="line">[EPOL]</span><br><span class="line">name=EPOL</span><br><span class="line">baseurl=http://repo.openeuler.org/openEuler-24.03-LTS-SP1/EPOL/main/$basearch/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br><span class="line">gpgkey=http://repo.openeuler.org/openEuler-24.03-LTS-SP1/OS/$basearch/RPM-GPG-KEY-openEuler</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>修改主机名以及映射</p><p> 每个节点分别修改主机名，以controller为例：</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname controller</span><br><span class="line"></span><br><span class="line">vi /etc/hostname</span><br><span class="line">内容修改为controller</span><br></pre></td></tr></table></figure><p> 然后修改每个节点的<code>/etc/hosts</code>文件，新增如下内容:</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.168.0.2   controller</span><br><span class="line">192.168.0.3   compute</span><br><span class="line">192.168.0.4   storage</span><br></pre></td></tr></table></figure></li></ol><h4 id="时钟同步"><a href="#时钟同步" class="headerlink" title="时钟同步"></a>时钟同步</h4><p>集群环境时刻要求每个节点的时间一致，一般由时钟同步软件保证。本文使用<code>chrony</code>软件。步骤如下：</p><p><strong>Controller节点</strong>：</p><ol><li><p>安装服务</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install chrony</span><br></pre></td></tr></table></figure></li><li><p>修改<code>/etc/chrony.conf</code>配置文件，新增一行</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">表示允许哪些IP从本节点同步时钟</span></span><br><span class="line">allow 192.168.0.0/24</span><br></pre></td></tr></table></figure></li><li><p>重启服务</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart chronyd</span><br></pre></td></tr></table></figure></li></ol><p><strong>其他节点</strong></p><ol><li><p>安装服务</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install chrony</span><br></pre></td></tr></table></figure></li><li><p>修改<code>/etc/chrony.conf</code>配置文件，新增一行</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">NTP_SERVER是controller IP，表示从这个机器获取时间，这里我们填192.168.0.2，或者在`/etc/hosts`里配置好的controller名字即可。</span></span><br><span class="line">server NTP_SERVER iburst</span><br></pre></td></tr></table></figure><p> 同时，要把<code>pool pool.ntp.org iburst</code>这一行注释掉，表示不从公网同步时钟。</p></li><li><p>重启服务</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart chronyd</span><br></pre></td></tr></table></figure></li></ol><p>配置完成后，检查一下结果，在其他非controller节点执行<code>chronyc sources</code>，返回结果类似如下内容，表示成功从controller同步时钟。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MS Name/IP address         Stratum Poll Reach LastRx Last <span class="attr">sample</span></span><br><span class="line">===============================================================================</span><br><span class="line">^* 192.168.0.2                 4   6     7     0  -1406ns<span class="section">[  +55us]</span> +/-   16ms</span><br></pre></td></tr></table></figure><h4 id="安装数据库"><a href="#安装数据库" class="headerlink" title="安装数据库"></a>安装数据库</h4><p>数据库安装在控制节点，这里推荐使用mariadb。</p><ol><li><p>安装软件包</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install mysql-config mariadb mariadb-server python3-PyMySQL</span><br></pre></td></tr></table></figure></li><li><p>新增配置文件<code>/etc/my.cnf.d/openstack.cnf</code>，内容如下</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">bind-address = 192.168.0.2</span><br><span class="line">default-storage-engine = innodb</span><br><span class="line">innodb_file_per_table = on</span><br><span class="line">max_connections = 4096</span><br><span class="line">collation-server = utf8_general_ci</span><br><span class="line">character-set-server = utf8</span><br></pre></td></tr></table></figure></li><li><p>启动服务器</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mariadb</span><br></pre></td></tr></table></figure></li><li><p>初始化数据库，根据提示进行即可</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_secure_installation</span><br></pre></td></tr></table></figure><p> 示例如下：</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB</span><br><span class="line">    SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!</span><br><span class="line"></span><br><span class="line">In order to log into MariaDB to secure it, we&#x27;ll need the current</span><br><span class="line">password for the root user. If you&#x27;ve just installed MariaDB, and</span><br><span class="line">haven&#x27;t set the root password yet, you should just press enter here.</span><br><span class="line"></span><br><span class="line">Enter current password for root (enter for none): </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">这里输入密码，由于我们是初始化DB，直接回车就行</span></span><br><span class="line"></span><br><span class="line">OK, successfully used password, moving on...</span><br><span class="line"></span><br><span class="line">Setting the root password or using the unix_socket ensures that nobody</span><br><span class="line">can log into the MariaDB root user without the proper authorisation.</span><br><span class="line"></span><br><span class="line">You already have your root account protected, so you can safely answer &#x27;n&#x27;.</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">这里根据提示输入N</span></span><br><span class="line"></span><br><span class="line">Switch to unix_socket authentication [Y/n] N</span><br><span class="line"></span><br><span class="line">Enabled successfully!</span><br><span class="line">Reloading privilege tables..</span><br><span class="line">... Success!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">You already have your root account protected, so you can safely answer &#x27;n&#x27;.</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">输入Y，修改密码</span></span><br><span class="line"></span><br><span class="line">Change the root password? [Y/n] Y</span><br><span class="line"></span><br><span class="line">New password: </span><br><span class="line">Re-enter new password: </span><br><span class="line">Password updated successfully!</span><br><span class="line">Reloading privilege tables..</span><br><span class="line">... Success!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">By default, a MariaDB installation has an anonymous user, allowing anyone</span><br><span class="line">to log into MariaDB without having to have a user account created for</span><br><span class="line">them.  This is intended only for testing, and to make the installation</span><br><span class="line">go a bit smoother.  You should remove them before moving into a</span><br><span class="line">production environment.</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">输入Y，删除匿名用户</span></span><br><span class="line"></span><br><span class="line">Remove anonymous users? [Y/n] Y</span><br><span class="line">... Success!</span><br><span class="line"></span><br><span class="line">Normally, root should only be allowed to connect from &#x27;localhost&#x27;.  This</span><br><span class="line">ensures that someone cannot guess at the root password from the network.</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">输入Y，关闭root远程登录权限</span></span><br><span class="line"></span><br><span class="line">Disallow root login remotely? [Y/n] Y</span><br><span class="line">... Success!</span><br><span class="line"></span><br><span class="line">By default, MariaDB comes with a database named &#x27;test&#x27; that anyone can</span><br><span class="line">access.  This is also intended only for testing, and should be removed</span><br><span class="line">before moving into a production environment.</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">输入Y，删除<span class="built_in">test</span>数据库</span></span><br><span class="line"></span><br><span class="line">Remove test database and access to it? [Y/n] Y</span><br><span class="line">- Dropping test database...</span><br><span class="line">... Success!</span><br><span class="line">- Removing privileges on test database...</span><br><span class="line">... Success!</span><br><span class="line"></span><br><span class="line">Reloading the privilege tables will ensure that all changes made so far</span><br><span class="line">will take effect immediately.</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">输入Y，重载配置</span></span><br><span class="line"></span><br><span class="line">Reload privilege tables now? [Y/n] Y</span><br><span class="line">... Success!</span><br><span class="line"></span><br><span class="line">Cleaning up...</span><br><span class="line"></span><br><span class="line">All done!  If you&#x27;ve completed all of the above steps, your MariaDB</span><br><span class="line">installation should now be secure.</span><br></pre></td></tr></table></figure></li><li><p>验证，根据第四步设置的密码，检查是否能登录mariadb</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure></li></ol><h4 id="安装消息队列"><a href="#安装消息队列" class="headerlink" title="安装消息队列"></a>安装消息队列</h4><p>消息队列安装在控制节点，这里推荐使用rabbitmq。</p><ol><li><p>安装软件包</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install rabbitmq-server</span><br></pre></td></tr></table></figure></li><li><p>启动服务</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start rabbitmq-server</span><br></pre></td></tr></table></figure></li><li><p>配置openstack用户，<code>RABBIT_PASS</code>是openstack服务登录消息队里的密码，需要和后面各个服务的配置保持一致。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rabbitmqctl add_user openstack RABBIT_PASS</span><br><span class="line">rabbitmqctl set_permissions openstack &quot;.*&quot; &quot;.*&quot; &quot;.*&quot;</span><br></pre></td></tr></table></figure></li></ol><h4 id="安装缓存服务"><a href="#安装缓存服务" class="headerlink" title="安装缓存服务"></a>安装缓存服务</h4><p>消息队列安装在控制节点，这里推荐使用Memcached。</p><ol><li><p>安装软件包</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install memcached python3-memcached</span><br></pre></td></tr></table></figure></li><li><p>修改配置文件<code>/etc/sysconfig/memcached</code></p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">OPTIONS=&quot;-l 127.0.0.1,::1,controller&quot;</span><br></pre></td></tr></table></figure></li><li><p>启动服务</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start memcached</span><br></pre></td></tr></table></figure></li></ol><h3 id="部署服务"><a href="#部署服务" class="headerlink" title="部署服务"></a>部署服务</h3><h4 id="Keystone"><a href="#Keystone" class="headerlink" title="Keystone"></a>Keystone</h4><p>Keystone是OpenStack提供的鉴权服务，是整个OpenStack的入口，提供了租户隔离、用户认证、服务发现等功能，必须安装。</p><ol><li><p>创建 keystone 数据库并授权</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql <span class="operator">-</span>u root <span class="operator">-</span>p</span><br><span class="line"></span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">CREATE</span> DATABASE keystone;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> keystone.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;keystone&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> \</span><br><span class="line">IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;KEYSTONE_DBPASS&#x27;</span>;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> keystone.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;keystone&#x27;</span>@<span class="string">&#x27;%&#x27;</span> \</span><br><span class="line">IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;KEYSTONE_DBPASS&#x27;</span>;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> exit</span><br></pre></td></tr></table></figure><p> <em><strong>注意</strong></em></p><p> <strong>替换 <code>KEYSTONE_DBPASS</code>，为 Keystone 数据库设置密码</strong></p></li><li><p>安装软件包</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install openstack-keystone httpd mod_wsgi</span><br></pre></td></tr></table></figure></li><li><p>配置keystone相关配置</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/keystone/keystone.conf</span><br><span class="line"></span><br><span class="line">[database]</span><br><span class="line">connection = mysql+pymysql://keystone:KEYSTONE_DBPASS@controller/keystone</span><br><span class="line"></span><br><span class="line">[token]</span><br><span class="line">provider = fernet</span><br></pre></td></tr></table></figure><p> <em><strong>解释</strong></em></p><p> [database]部分，配置数据库入口</p><p> [token]部分，配置token provider</p></li><li><p>同步数据库</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su -s /bin/sh -c &quot;keystone-manage db_sync&quot; keystone</span><br></pre></td></tr></table></figure></li><li><p>初始化Fernet密钥仓库</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone</span><br><span class="line">keystone-manage credential_setup --keystone-user keystone --keystone-group keystone</span><br></pre></td></tr></table></figure></li><li><p>启动服务</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">keystone-manage bootstrap --bootstrap-password ADMIN_PASS \</span><br><span class="line">--bootstrap-admin-url http://controller:5000/v3/ \</span><br><span class="line">--bootstrap-internal-url http://controller:5000/v3/ \</span><br><span class="line">--bootstrap-public-url http://controller:5000/v3/ \</span><br><span class="line">--bootstrap-region-id RegionOne</span><br></pre></td></tr></table></figure><p> <em><strong>注意</strong></em></p><p> <strong>替换 <code>ADMIN_PASS</code>，为 admin 用户设置密码</strong></p></li><li><p>配置Apache HTTP server</p><ul><li>打开httpd.conf并配置</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">需要修改的配置文件路径</span></span><br><span class="line">vim /etc/httpd/conf/httpd.conf</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">修改以下项，如果没有则新添加</span></span><br><span class="line">ServerName controller</span><br></pre></td></tr></table></figure><ul><li>创建软链接</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/share/keystone/wsgi-keystone.conf /etc/httpd/conf.d/</span><br></pre></td></tr></table></figure><p> <em><strong>解释</strong></em></p><p> 配置 <code>ServerName</code> 项引用控制节点</p><p> <em><strong>注意</strong></em><br> <strong>如果 <code>ServerName</code> 项不存在则需要创建</strong></p></li><li><p>启动Apache HTTP服务</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable httpd.service</span><br><span class="line">systemctl start httpd.service</span><br></pre></td></tr></table></figure></li><li><p>创建环境变量配置</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cat &lt;&lt; EOF &gt;&gt; ~/.admin-openrc</span><br><span class="line">export OS_PROJECT_DOMAIN_NAME=Default</span><br><span class="line">export OS_USER_DOMAIN_NAME=Default</span><br><span class="line">export OS_PROJECT_NAME=admin</span><br><span class="line">export OS_USERNAME=admin</span><br><span class="line">export OS_PASSWORD=ADMIN_PASS</span><br><span class="line">export OS_AUTH_URL=http://controller:5000/v3</span><br><span class="line">export OS_IDENTITY_API_VERSION=3</span><br><span class="line">export OS_IMAGE_API_VERSION=2</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p> <em><strong>注意</strong></em></p><p> <strong>替换 <code>ADMIN_PASS</code> 为 admin 用户的密码</strong></p></li><li><p>依次创建domain, projects, users, roles</p><ul><li>需要先安装python3-openstackclient</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install python3-openstackclient</span><br></pre></td></tr></table></figure><ul><li>导入环境变量</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.admin-openrc</span><br></pre></td></tr></table></figure><ul><li>创建project <code>service</code>，其中 domain <code>default</code> 在 keystone-manage bootstrap 时已创建</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openstack domain create --description &quot;An Example Domain&quot; example</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openstack project create --domain default --description &quot;Service Project&quot; service</span><br></pre></td></tr></table></figure><ul><li>创建（non-admin）project <code>myproject</code>，user <code>myuser</code> 和 role <code>myrole</code>，为 <code>myproject</code> 和 <code>myuser</code> 添加角色<code>myrole</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">openstack project create --domain default --description &quot;Demo Project&quot; myproject</span><br><span class="line">openstack user create --domain default --password-prompt myuser</span><br><span class="line">openstack role create myrole</span><br><span class="line">openstack role add --project myproject --user myuser myrole</span><br></pre></td></tr></table></figure></li><li><p>验证</p><ul><li>取消临时环境变量OS_AUTH_URL和OS_PASSWORD：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">source ~/.admin-openrc</span><br><span class="line">unset OS_AUTH_URL OS_PASSWORD</span><br></pre></td></tr></table></figure><ul><li>为admin用户请求token：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">openstack --os-auth-url http://controller:5000/v3 \</span><br><span class="line">--os-project-domain-name Default --os-user-domain-name Default \</span><br><span class="line">--os-project-name admin --os-username admin token issue</span><br></pre></td></tr></table></figure><ul><li>为myuser用户请求token：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">openstack --os-auth-url http://controller:5000/v3 \</span><br><span class="line">--os-project-domain-name Default --os-user-domain-name Default \</span><br><span class="line">--os-project-name myproject --os-username myuser token issue</span><br></pre></td></tr></table></figure></li></ol><h4 id="Glance"><a href="#Glance" class="headerlink" title="Glance"></a>Glance</h4><p>Glance是OpenStack提供的镜像服务，负责虚拟机、裸机镜像的上传与下载，必须安装。</p><p><strong>Controller节点</strong>：</p><ol><li><p>创建 glance 数据库并授权</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql <span class="operator">-</span>u root <span class="operator">-</span>p</span><br><span class="line"></span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">CREATE</span> DATABASE glance;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> glance.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;glance&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> \</span><br><span class="line">IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;GLANCE_DBPASS&#x27;</span>;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> glance.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;glance&#x27;</span>@<span class="string">&#x27;%&#x27;</span> \</span><br><span class="line">IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;GLANCE_DBPASS&#x27;</span>;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> exit</span><br></pre></td></tr></table></figure><p> <em><strong>注意:</strong></em></p><p> <strong>替换 <code>GLANCE_DBPASS</code>，为 glance 数据库设置密码</strong></p></li><li><p>初始化 glance 资源对象</p><ul><li>导入环境变量</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.admin-openrc</span><br></pre></td></tr></table></figure><ul><li>创建用户时，命令行会提示输入密码，请输入自定义的密码，下文涉及到<code>GLANCE_PASS</code>的地方替换成该密码即可。</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">openstack user create --domain default --password-prompt glance</span><br><span class="line">User Password:</span><br><span class="line">Repeat User Password:</span><br></pre></td></tr></table></figure><ul><li>添加glance用户到service project并指定admin角色：</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openstack role add --project service --user glance admin</span><br></pre></td></tr></table></figure><ul><li>创建glance服务实体：</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openstack service create --name glance --description &quot;OpenStack Image&quot; image</span><br></pre></td></tr></table></figure><ul><li>创建glance API服务：</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">openstack endpoint create --region RegionOne image public http://controller:9292</span><br><span class="line">openstack endpoint create --region RegionOne image internal http://controller:9292</span><br><span class="line">openstack endpoint create --region RegionOne image admin http://controller:9292</span><br></pre></td></tr></table></figure></li><li><p>安装软件包</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install openstack-glance</span><br></pre></td></tr></table></figure></li><li><p>修改 glance 配置文件</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/glance/glance-api.conf</span><br><span class="line"></span><br><span class="line">[database]</span><br><span class="line">connection = mysql+pymysql://glance:GLANCE_DBPASS@controller/glance</span><br><span class="line"></span><br><span class="line">[keystone_authtoken]</span><br><span class="line">www_authenticate_uri  = http://controller:5000</span><br><span class="line">auth_url = http://controller:5000</span><br><span class="line">memcached_servers = controller:11211</span><br><span class="line">auth_type = password</span><br><span class="line">project_domain_name = Default</span><br><span class="line">user_domain_name = Default</span><br><span class="line">project_name = service</span><br><span class="line">username = glance</span><br><span class="line">password = GLANCE_PASS</span><br><span class="line"></span><br><span class="line">[paste_deploy]</span><br><span class="line">flavor = keystone</span><br><span class="line"></span><br><span class="line">[glance_store]</span><br><span class="line">stores = file,http</span><br><span class="line">default_store = file</span><br><span class="line">filesystem_store_datadir = /var/lib/glance/images/</span><br></pre></td></tr></table></figure><p> <em><strong>解释:</strong></em></p><p> [database]部分，配置数据库入口</p><p> [keystone_authtoken] [paste_deploy]部分，配置身份认证服务入口</p><p> [glance_store]部分，配置本地文件系统存储和镜像文件的位置</p></li><li><p>同步数据库</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su -s /bin/sh -c &quot;glance-manage db_sync&quot; glance</span><br></pre></td></tr></table></figure></li><li><p>启动服务：</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable openstack-glance-api.service</span><br><span class="line">systemctl start openstack-glance-api.service</span><br></pre></td></tr></table></figure></li><li><p>验证</p><ul><li>导入环境变量</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.admin-openrcu</span><br></pre></td></tr></table></figure><ul><li>下载镜像</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x86镜像下载：</span><br><span class="line">wget http://download.cirros-cloud.net/0.4.0/cirros-0.4.0-x86_64-disk.img</span><br><span class="line"></span><br><span class="line">arm镜像下载：</span><br><span class="line">wget http://download.cirros-cloud.net/0.4.0/cirros-0.4.0-aarch64-disk.img</span><br></pre></td></tr></table></figure><p> <em><strong>注意</strong></em></p><p> <strong>如果您使用的环境是鲲鹏架构，请下载aarch64版本的镜像；已对镜像cirros-0.5.2-aarch64-disk.img进行测试。</strong></p><ul><li>向Image服务上传镜像：</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">openstack image create --disk-format qcow2 --container-format bare \</span><br><span class="line">                    --file cirros-0.4.0-x86_64-disk.img --public cirros</span><br></pre></td></tr></table></figure><ul><li>确认镜像上传并验证属性：</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openstack image list</span><br></pre></td></tr></table></figure></li></ol><h4 id="Placement"><a href="#Placement" class="headerlink" title="Placement"></a>Placement</h4><p>Placement是OpenStack提供的资源调度组件，一般不面向用户，由Nova等组件调用，安装在控制节点。</p><p>安装、配置Placement服务前，需要先创建相应的数据库、服务凭证和API endpoints。</p><ol><li><p>创建数据库</p><ul><li>使用root用户访问数据库服务：</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><ul><li>创建placement数据库：</li></ul> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">CREATE</span> DATABASE placement;</span><br></pre></td></tr></table></figure><ul><li>授权数据库访问：</li></ul> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> placement.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;placement&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> \</span><br><span class="line">    IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;PLACEMENT_DBPASS&#x27;</span>;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> placement.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;placement&#x27;</span>@<span class="string">&#x27;%&#x27;</span> \</span><br><span class="line">    IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;PLACEMENT_DBPASS&#x27;</span>;</span><br></pre></td></tr></table></figure><p> 替换<code>PLACEMENT_DBPASS</code>为placement数据库访问密码。</p><ul><li>退出数据库访问客户端：</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure></li><li><p>配置用户和Endpoints</p><ul><li>source admin凭证，以获取admin命令行权限：</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.admin-openrc</span><br></pre></td></tr></table></figure><ul><li>创建placement用户并设置用户密码：</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">openstack user create --domain default --password-prompt placement</span><br><span class="line"></span><br><span class="line">User Password:</span><br><span class="line">Repeat User Password:</span><br></pre></td></tr></table></figure><ul><li>添加placement用户到service project并指定admin角色：</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openstack role add --project service --user placement admin</span><br></pre></td></tr></table></figure><ul><li>创建placement服务实体：</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">openstack service create --name placement \</span><br><span class="line">    --description &quot;Placement API&quot; placement</span><br></pre></td></tr></table></figure><ul><li>创建Placement API服务endpoints：</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">openstack endpoint create --region RegionOne \</span><br><span class="line">    placement public http://controller:8778</span><br><span class="line">openstack endpoint create --region RegionOne \</span><br><span class="line">    placement internal http://controller:8778</span><br><span class="line">openstack endpoint create --region RegionOne \</span><br><span class="line">    placement admin http://controller:8778</span><br></pre></td></tr></table></figure></li><li><p>安装及配置组件</p><ul><li>安装软件包：</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install openstack-placement-api</span><br></pre></td></tr></table></figure><ul><li><p>编辑<code>/etc/placement/placement.conf</code>配置文件，完成如下操作：</p><ul><li>在<code>[placement_database]</code>部分，配置数据库入口：</li></ul>  <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[placement_database]</span></span><br><span class="line"><span class="attr">connection</span> = mysql+pymysql://placement:PLACEMENT_DBPASS@controller/placement</span><br></pre></td></tr></table></figure><p>  替换<code>PLACEMENT_DBPASS</code>为placement数据库的密码。</p><ul><li>在<code>[api]</code>和<code>[keystone_authtoken]</code>部分，配置身份认证服务入口：</li></ul>  <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[api]</span></span><br><span class="line"><span class="attr">auth_strategy</span> = keystone</span><br><span class="line"></span><br><span class="line"><span class="section">[keystone_authtoken]</span></span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span>/v3</span><br><span class="line"><span class="attr">memcached_servers</span> = controller:<span class="number">11211</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">project_domain_name</span> = Default</span><br><span class="line"><span class="attr">user_domain_name</span> = Default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">username</span> = placement</span><br><span class="line"><span class="attr">password</span> = PLACEMENT_PASS</span><br></pre></td></tr></table></figure><p>  替换<code>PLACEMENT_PASS</code>为placement用户的密码。</p></li><li><p>数据库同步，填充Placement数据库：</p></li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su -s /bin/sh -c &quot;placement-manage db sync&quot; placement</span><br></pre></td></tr></table></figure></li><li><p>启动服务</p><p> 重启httpd服务：</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart httpd</span><br></pre></td></tr></table></figure></li><li><p>验证</p><ul><li>source admin凭证，以获取admin命令行权限</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.admin-openrc</span><br></pre></td></tr></table></figure><ul><li>执行状态检查：</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">placement-status upgrade check</span><br></pre></td></tr></table></figure> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">+----------------------------------------------------------------------+</span><br><span class="line">| Upgrade Check Results                                                |</span><br><span class="line">+----------------------------------------------------------------------+</span><br><span class="line">| Check: Missing Root Provider IDs                                     |</span><br><span class="line">| Result: Success                                                      |</span><br><span class="line">| Details: None                                                        |</span><br><span class="line">+----------------------------------------------------------------------+</span><br><span class="line">| Check: Incomplete Consumers                                          |</span><br><span class="line">| Result: Success                                                      |</span><br><span class="line">| Details: None                                                        |</span><br><span class="line">+----------------------------------------------------------------------+</span><br><span class="line">| Check: Policy File JSON to YAML Migration                            |</span><br><span class="line">| Result: Failure                                                      |</span><br><span class="line">| Details: Your policy file is JSON-formatted which is deprecated. You |</span><br><span class="line">|   need to switch to YAML-formatted file. Use the                     |</span><br><span class="line">|   ``oslopolicy-convert-json-to-yaml`` tool to convert the            |</span><br><span class="line">|   existing JSON-formatted files to YAML in a backwards-              |</span><br><span class="line">|   compatible manner: https://docs.openstack.org/oslo.policy/         |</span><br><span class="line">|   latest/cli/oslopolicy-convert-json-to-yaml.html.                   |</span><br><span class="line">+----------------------------------------------------------------------+</span><br></pre></td></tr></table></figure><p> 这里可以看到<code>Policy File JSON to YAML Migration</code>的结果为Failure。这是因为在Placement中，JSON格式的policy文件从Wallaby版本开始已处于<code>deprecated</code>状态。可以参考提示，使用<a href="https://docs.openstack.org/oslo.policy/latest/cli/oslopolicy-convert-json-to-yaml.html">oslopolicy-convert-json-to-yaml</a>工具  将现有的JSON格式policy文件转化为YAML格式。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">oslopolicy-convert-json-to-yaml  --namespace placement \</span><br><span class="line">    --policy-file /etc/placement/policy.json \</span><br><span class="line">    --output-file /etc/placement/policy.yaml</span><br><span class="line">mv /etc/placement/policy.json&#123;,.bak&#125;</span><br></pre></td></tr></table></figure><p> 注：当前环境中此问题可忽略，不影响运行。</p><ul><li><p>针对placement API运行命令：</p><ul><li>安装osc-placement插件：</li></ul>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install python3-osc-placement</span><br></pre></td></tr></table></figure><ul><li>列出可用的资源类别及特性：</li></ul>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">openstack --os-placement-api-version 1.2 resource class list --sort-column name</span><br><span class="line">+----------------------------+</span><br><span class="line">| name                       |</span><br><span class="line">+----------------------------+</span><br><span class="line">| DISK_GB                    |</span><br><span class="line">| FPGA                       |</span><br><span class="line">| ...                        |</span><br><span class="line"></span><br><span class="line">openstack --os-placement-api-version 1.6 trait list --sort-column name</span><br><span class="line">+---------------------------------------+</span><br><span class="line">| name                                  |</span><br><span class="line">+---------------------------------------+</span><br><span class="line">| COMPUTE_ACCELERATORS                  |</span><br><span class="line">| COMPUTE_ARCH_AARCH64                  |</span><br><span class="line">| ...                                   |</span><br></pre></td></tr></table></figure></li></ul></li></ol><h4 id="Nova"><a href="#Nova" class="headerlink" title="Nova"></a>Nova</h4><p>Nova是OpenStack的计算服务，负责虚拟机的创建、发放等功能。</p><p><strong>Controller节点</strong></p><p>在控制节点执行以下操作。</p><ol><li><p>创建数据库</p><ul><li>使用root用户访问数据库服务：</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><ul><li>创建<code>nova_api</code>、<code>nova</code>和<code>nova_cell0</code>数据库：</li></ul> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">CREATE</span> DATABASE nova_api;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">CREATE</span> DATABASE nova;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">CREATE</span> DATABASE nova_cell0;</span><br></pre></td></tr></table></figure><ul><li>授权数据库访问：</li></ul> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> nova_api.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;nova&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> \</span><br><span class="line">    IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;NOVA_DBPASS&#x27;</span>;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> nova_api.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;nova&#x27;</span>@<span class="string">&#x27;%&#x27;</span> \</span><br><span class="line">    IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;NOVA_DBPASS&#x27;</span>;</span><br><span class="line"></span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> nova.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;nova&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> \</span><br><span class="line">    IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;NOVA_DBPASS&#x27;</span>;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> nova.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;nova&#x27;</span>@<span class="string">&#x27;%&#x27;</span> \</span><br><span class="line">    IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;NOVA_DBPASS&#x27;</span>;</span><br><span class="line"></span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> nova_cell0.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;nova&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> \</span><br><span class="line">    IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;NOVA_DBPASS&#x27;</span>;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> nova_cell0.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;nova&#x27;</span>@<span class="string">&#x27;%&#x27;</span> \</span><br><span class="line">    IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;NOVA_DBPASS&#x27;</span>;</span><br></pre></td></tr></table></figure><p> 替换<code>NOVA_DBPASS</code>为nova相关数据库访问密码。</p><ul><li>退出数据库访问客户端：</li></ul> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure></li><li><p>配置用户和Endpoints</p><ul><li>source admin凭证，以获取admin命令行权限：</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.admin-openrc</span><br></pre></td></tr></table></figure><ul><li>创建nova用户并设置用户密码：</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">openstack user create --domain default --password-prompt nova</span><br><span class="line"></span><br><span class="line">User Password:</span><br><span class="line">Repeat User Password:</span><br></pre></td></tr></table></figure><ul><li>添加nova用户到service project并指定admin角色：</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openstack role add --project service --user nova admin</span><br></pre></td></tr></table></figure><ul><li>创建nova服务实体：</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">openstack service create --name nova \</span><br><span class="line">    --description &quot;OpenStack Compute&quot; compute</span><br></pre></td></tr></table></figure><ul><li>创建Nova API服务endpoints：</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">openstack endpoint create --region RegionOne \</span><br><span class="line">    compute public http://controller:8774/v2.1</span><br><span class="line">openstack endpoint create --region RegionOne \</span><br><span class="line">    compute internal http://controller:8774/v2.1</span><br><span class="line">openstack endpoint create --region RegionOne \</span><br><span class="line">    compute admin http://controller:8774/v2.1</span><br></pre></td></tr></table></figure></li><li><p>安装及配置组件</p><ul><li>安装软件包：</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dnf install openstack-nova-api openstack-nova-conductor \</span><br><span class="line">    openstack-nova-novncproxy openstack-nova-scheduler</span><br></pre></td></tr></table></figure><ul><li><p>编辑<code>/etc/nova/nova.conf</code>配置文件，完成如下操作：</p><ul><li>在<code>[default]</code>部分，启用计算和元数据的API，配置RabbitMQ消息队列入口，使用controller节点管理IP配置my_ip，显式定义log_dir：</li></ul>  <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">enabled_apis</span> = osapi_compute,metadata</span><br><span class="line"><span class="attr">transport_url</span> = rabbit://openstack:RABBIT_PASS@controller:<span class="number">5672</span>/</span><br><span class="line"><span class="attr">my_ip</span> = <span class="number">192.168</span>.<span class="number">0.2</span></span><br><span class="line"><span class="attr">log_dir</span> = /var/log/nova</span><br><span class="line"><span class="attr">state_path</span> = /var/lib/nova</span><br></pre></td></tr></table></figure><p>  替换<code>RABBIT_PASS</code>为RabbitMQ中openstack账户的密码。</p><ul><li>在<code>[api_database]</code>和<code>[database]</code>部分，配置数据库入口：</li></ul>  <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[api_database]</span></span><br><span class="line"><span class="attr">connection</span> = mysql+pymysql://nova:NOVA_DBPASS@controller/nova_api</span><br><span class="line"></span><br><span class="line"><span class="section">[database]</span></span><br><span class="line"><span class="attr">connection</span> = mysql+pymysql://nova:NOVA_DBPASS@controller/nova</span><br></pre></td></tr></table></figure><p>  替换<code>NOVA_DBPASS</code>为nova相关数据库的密码。</p><ul><li>在<code>[api]</code>和<code>[keystone_authtoken]</code>部分，配置身份认证服务入口：</li></ul>  <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[api]</span></span><br><span class="line"><span class="attr">auth_strategy</span> = keystone</span><br><span class="line"></span><br><span class="line"><span class="section">[keystone_authtoken]</span></span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span>/v3</span><br><span class="line"><span class="attr">memcached_servers</span> = controller:<span class="number">11211</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">project_domain_name</span> = Default</span><br><span class="line"><span class="attr">user_domain_name</span> = Default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">username</span> = nova</span><br><span class="line"><span class="attr">password</span> = NOVA_PASS</span><br></pre></td></tr></table></figure><p>  替换<code>NOVA_PASS</code>为nova用户的密码。</p><ul><li>在<code>[vnc]</code>部分，启用并配置远程控制台入口：</li></ul>  <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[vnc]</span></span><br><span class="line"><span class="attr">enabled</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">server_listen</span> = <span class="variable">$my_ip</span></span><br><span class="line"><span class="attr">server_proxyclient_address</span> = <span class="variable">$my_ip</span></span><br></pre></td></tr></table></figure><ul><li>在<code>[glance]</code>部分，配置镜像服务API的地址：</li></ul>  <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[glance]</span></span><br><span class="line"><span class="attr">api_servers</span> = http://controller:<span class="number">9292</span></span><br></pre></td></tr></table></figure><ul><li>在<code>[oslo_concurrency]</code>部分，配置lock path：</li></ul>  <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[oslo_concurrency]</span></span><br><span class="line"><span class="attr">lock_path</span> = /var/lib/nova/tmp</span><br></pre></td></tr></table></figure><ul><li>[placement]部分，配置placement服务的入口：</li></ul>  <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[placement]</span></span><br><span class="line"><span class="attr">region_name</span> = RegionOne</span><br><span class="line"><span class="attr">project_domain_name</span> = Default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">user_domain_name</span> = Default</span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span>/v3</span><br><span class="line"><span class="attr">username</span> = placement</span><br><span class="line"><span class="attr">password</span> = PLACEMENT_PASS</span><br></pre></td></tr></table></figure><p>  替换<code>PLACEMENT_PASS</code>为placement用户的密码。</p></li><li><p>数据库同步：</p><ul><li>同步nova-api数据库：</li></ul>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su -s /bin/sh -c &quot;nova-manage api_db sync&quot; nova</span><br></pre></td></tr></table></figure><ul><li>注册cell0数据库：</li></ul>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su -s /bin/sh -c &quot;nova-manage cell_v2 map_cell0&quot; nova</span><br></pre></td></tr></table></figure><ul><li>创建cell1 cell：</li></ul>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su -s /bin/sh -c &quot;nova-manage cell_v2 create_cell --name=cell1 --verbose&quot; nova</span><br></pre></td></tr></table></figure><ul><li>同步nova数据库：</li></ul>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su -s /bin/sh -c &quot;nova-manage db sync&quot; nova</span><br></pre></td></tr></table></figure><ul><li>验证cell0和cell1注册正确：</li></ul>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su -s /bin/sh -c &quot;nova-manage cell_v2 list_cells&quot; nova</span><br></pre></td></tr></table></figure></li></ul></li><li><p>启动服务</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable \</span><br><span class="line">  openstack-nova-api.service \</span><br><span class="line">  openstack-nova-scheduler.service \</span><br><span class="line">  openstack-nova-conductor.service \</span><br><span class="line">  openstack-nova-novncproxy.service</span><br><span class="line"></span><br><span class="line">systemctl start \</span><br><span class="line">  openstack-nova-api.service \</span><br><span class="line">  openstack-nova-scheduler.service \</span><br><span class="line">  openstack-nova-conductor.service \</span><br><span class="line">  openstack-nova-novncproxy.service</span><br></pre></td></tr></table></figure></li></ol><p><strong>Compute节点</strong></p><p>在计算节点执行以下操作。</p><ol><li><p>安装软件包</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install openstack-nova-compute</span><br></pre></td></tr></table></figure></li><li><p>编辑<code>/etc/nova/nova.conf</code>配置文件</p><ul><li>在<code>[default]</code>部分，启用计算和元数据的API，配置RabbitMQ消息队列入口，使用Compute节点管理IP配置my_ip，显式定义compute_driver、instances_path、log_dir：</li></ul> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">enabled_apis</span> = osapi_compute,metadata</span><br><span class="line"><span class="attr">transport_url</span> = rabbit://openstack:RABBIT_PASS@controller:<span class="number">5672</span>/</span><br><span class="line"><span class="attr">my_ip</span> = <span class="number">192.168</span>.<span class="number">0.3</span></span><br><span class="line"><span class="attr">compute_driver</span> = libvirt.LibvirtDriver</span><br><span class="line"><span class="attr">instances_path</span> = /var/lib/nova/instances</span><br><span class="line"><span class="attr">log_dir</span> = /var/log/nova</span><br></pre></td></tr></table></figure><p> 替换<code>RABBIT_PASS</code>为RabbitMQ中openstack账户的密码。</p><ul><li>在<code>[api]</code>和<code>[keystone_authtoken]</code>部分，配置身份认证服务入口：</li></ul> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[api]</span></span><br><span class="line"><span class="attr">auth_strategy</span> = keystone</span><br><span class="line"></span><br><span class="line"><span class="section">[keystone_authtoken]</span></span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span>/v3</span><br><span class="line"><span class="attr">memcached_servers</span> = controller:<span class="number">11211</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">project_domain_name</span> = Default</span><br><span class="line"><span class="attr">user_domain_name</span> = Default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">username</span> = nova</span><br><span class="line"><span class="attr">password</span> = NOVA_PASS</span><br></pre></td></tr></table></figure><p> 替换<code>NOVA_PASS</code>为nova用户的密码。</p><ul><li>在<code>[vnc]</code>部分，启用并配置远程控制台入口：</li></ul> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[vnc]</span></span><br><span class="line"><span class="attr">enabled</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">server_listen</span> = <span class="variable">$my_ip</span></span><br><span class="line"><span class="attr">server_proxyclient_address</span> = <span class="variable">$my_ip</span></span><br><span class="line"><span class="attr">novncproxy_base_url</span> = http://controller:<span class="number">6080</span>/vnc_auto.html</span><br></pre></td></tr></table></figure><ul><li>在<code>[glance]</code>部分，配置镜像服务API的地址：</li></ul> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[glance]</span></span><br><span class="line"><span class="attr">api_servers</span> = http://controller:<span class="number">9292</span></span><br></pre></td></tr></table></figure><ul><li>在<code>[oslo_concurrency]</code>部分，配置lock path：</li></ul> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[oslo_concurrency]</span></span><br><span class="line"><span class="attr">lock_path</span> = /var/lib/nova/tmp</span><br></pre></td></tr></table></figure><ul><li>[placement]部分，配置placement服务的入口：</li></ul> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[placement]</span></span><br><span class="line"><span class="attr">region_name</span> = RegionOne</span><br><span class="line"><span class="attr">project_domain_name</span> = Default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">user_domain_name</span> = Default</span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span>/v3</span><br><span class="line"><span class="attr">username</span> = placement</span><br><span class="line"><span class="attr">password</span> = PLACEMENT_PASS</span><br></pre></td></tr></table></figure><p> 替换<code>PLACEMENT_PASS</code>为placement用户的密码。</p></li><li><p>确认计算节点是否支持虚拟机硬件加速（x86_64）</p><p> 处理器为x86_64架构时，可通过运行如下命令确认是否支持硬件加速：</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">egrep -c &#x27;(vmx|svm)&#x27; /proc/cpuinfo</span><br></pre></td></tr></table></figure><p> 如果返回值为0则不支持硬件加速，需要配置libvirt使用QEMU而不是默认的KVM。编辑<code>/etc/nova/nova.conf</code>的<code>[libvirt]</code>部分：</p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[libvirt]</span></span><br><span class="line"><span class="attr">virt_type</span> = qemu</span><br></pre></td></tr></table></figure><p> 如果返回值为1或更大的值，则支持硬件加速，不需要进行额外的配置。</p></li><li><p>确认计算节点是否支持虚拟机硬件加速（arm64）</p><p> 处理器为arm64架构时，可通过运行如下命令确认是否支持硬件加速：</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">virt-host-validate</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">该命令由libvirt提供，此时libvirt应已作为openstack-nova-compute依赖被安装，环境中已有此命令</span></span><br></pre></td></tr></table></figure><p> 显示FAIL时，表示不支持硬件加速，需要配置libvirt使用QEMU而不是默认的KVM。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QEMU: Checking if device /dev/kvm exists: FAIL (Check that CPU and firmware supports virtualization and kvm module is loaded)</span><br></pre></td></tr></table></figure><p> 编辑<code>/etc/nova/nova.conf</code>的<code>[libvirt]</code>部分：</p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[libvirt]</span></span><br><span class="line"><span class="attr">virt_type</span> = qemu</span><br></pre></td></tr></table></figure><p> 显示PASS时，表示支持硬件加速，不需要进行额外的配置。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">QEMU: Checking if device /dev/kvm exists: PASS</span><br></pre></td></tr></table></figure></li><li><p>配置qemu（仅arm64）</p><p> 仅当处理器为arm64架构时需要执行此操作。</p><ul><li>编辑<code>/etc/libvirt/qemu.conf</code>:</li></ul> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">nvram</span> = [<span class="string">&quot;/usr/share/AAVMF/AAVMF_CODE.fd: \</span></span><br><span class="line"><span class="string">            /usr/share/AAVMF/AAVMF_VARS.fd&quot;</span>, \</span><br><span class="line">            <span class="string">&quot;/usr/share/edk2/aarch64/QEMU_EFI-pflash.raw: \</span></span><br><span class="line"><span class="string">            /usr/share/edk2/aarch64/vars-template-pflash.raw&quot;</span>]</span><br></pre></td></tr></table></figure><ul><li>编辑<code>/etc/qemu/firmware/edk2-aarch64.json</code></li></ul> <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;UEFI firmware for ARM64 virtual machines&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;interface-types&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;uefi&quot;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;mapping&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;device&quot;</span><span class="punctuation">:</span> <span class="string">&quot;flash&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;executable&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;filename&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/usr/share/edk2/aarch64/QEMU_EFI-pflash.raw&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;format&quot;</span><span class="punctuation">:</span> <span class="string">&quot;raw&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;nvram-template&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;filename&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/usr/share/edk2/aarch64/vars-template-pflash.raw&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;format&quot;</span><span class="punctuation">:</span> <span class="string">&quot;raw&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;targets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;architecture&quot;</span><span class="punctuation">:</span> <span class="string">&quot;aarch64&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;machines&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;virt-*&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;features&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line"></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tags&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line"></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>启动服务</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable libvirtd.service openstack-nova-compute.service</span><br><span class="line">systemctl start libvirtd.service openstack-nova-compute.service</span><br></pre></td></tr></table></figure></li></ol><p><strong>Controller节点</strong></p><p>在控制节点执行以下操作。</p><ol><li><p>添加计算节点到openstack集群</p><ul><li>source admin凭证，以获取admin命令行权限：</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.admin-openrc</span><br></pre></td></tr></table></figure><ul><li>确认nova-compute服务已识别到数据库中：</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openstack compute service list --service nova-compute</span><br></pre></td></tr></table></figure><ul><li>发现计算节点，将计算节点添加到cell数据库：</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su -s /bin/sh -c &quot;nova-manage cell_v2 discover_hosts --verbose&quot; nova</span><br></pre></td></tr></table></figure><p> 结果如下：</p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Modules with known eventlet monkey patching issues were imported prior to eventlet monkey patching: urllib3. This warning can usually be    ignored if the caller is only importing and not executing nova code.</span><br><span class="line">Found 2 cell mappings.</span><br><span class="line">Skipping cell0 since it does not contain hosts.</span><br><span class="line">Getting computes from cell &#x27;cell1&#x27;: 6dae034e-b2d9-4a6c-b6f0-60ada6a6ddc2</span><br><span class="line">Checking host mapping for compute host &#x27;compute&#x27;: 6286a86f-09d7-4786-9137-1185654c9e2e</span><br><span class="line">Creating host mapping for compute host &#x27;compute&#x27;: 6286a86f-09d7-4786-9137-1185654c9e2e</span><br><span class="line">Found 1 unmapped computes in cell: 6dae034e-b2d9-4a6c-b6f0-60ada6a6ddc2</span><br></pre></td></tr></table></figure></li><li><p>验证</p><ul><li>列出服务组件，验证每个流程都成功启动和注册：</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openstack compute service list</span><br></pre></td></tr></table></figure><ul><li>列出身份服务中的API端点，验证与身份服务的连接：</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openstack catalog list</span><br></pre></td></tr></table></figure><ul><li>列出镜像服务中的镜像，验证与镜像服务的连接：</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openstack image list</span><br></pre></td></tr></table></figure><ul><li>检查cells是否运作成功，以及其他必要条件是否已具备。</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nova-status upgrade check</span><br></pre></td></tr></table></figure></li></ol><h4 id="Neutron"><a href="#Neutron" class="headerlink" title="Neutron"></a>Neutron</h4><p>Neutron是OpenStack的网络服务，提供虚拟交换机、IP路由、DHCP等功能。</p><p><strong>Controller节点</strong></p><ol><li><p>创建数据库、服务凭证和 API 服务端点</p><ul><li>创建数据库：</li></ul> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql <span class="operator">-</span>u root <span class="operator">-</span>p</span><br><span class="line"></span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">CREATE</span> DATABASE neutron;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> neutron.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;neutron&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;NEUTRON_DBPASS&#x27;</span>;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> neutron.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;neutron&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;NEUTRON_DBPASS&#x27;</span>;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> exit;</span><br></pre></td></tr></table></figure><ul><li>创建用户和服务，并记住创建neutron用户时输入的密码，用于配置NEUTRON_PASS：</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">source ~/.admin-openrc</span><br><span class="line">openstack user create --domain default --password-prompt neutron</span><br><span class="line">openstack role add --project service --user neutron admin</span><br><span class="line">openstack service create --name neutron --description &quot;OpenStack Networking&quot; network</span><br></pre></td></tr></table></figure><ul><li>部署 Neutron API 服务：</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">openstack endpoint create --region RegionOne network public http://controller:9696</span><br><span class="line">openstack endpoint create --region RegionOne network internal http://controller:9696</span><br><span class="line">openstack endpoint create --region RegionOne network admin http://controller:9696</span><br></pre></td></tr></table></figure></li><li><p>安装软件包</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install -y openstack-neutron openstack-neutron-linuxbridge ebtables ipset openstack-neutron-ml2</span><br></pre></td></tr></table></figure></li><li><p>配置Neutron</p><ul><li>修改&#x2F;etc&#x2F;neutron&#x2F;neutron.conf</li></ul> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[database]</span></span><br><span class="line"><span class="attr">connection</span> = mysql+pymysql://neutron:NEUTRON_DBPASS@controller/neutron</span><br><span class="line"></span><br><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">core_plugin</span> = ml2</span><br><span class="line"><span class="attr">service_plugins</span> = router</span><br><span class="line"><span class="attr">allow_overlapping_ips</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">transport_url</span> = rabbit://openstack:RABBIT_PASS@controller</span><br><span class="line"><span class="attr">auth_strategy</span> = keystone</span><br><span class="line"><span class="attr">notify_nova_on_port_status_changes</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">notify_nova_on_port_data_changes</span> = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="section">[keystone_authtoken]</span></span><br><span class="line"><span class="attr">www_authenticate_uri</span> = http://controller:<span class="number">5000</span></span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span></span><br><span class="line"><span class="attr">memcached_servers</span> = controller:<span class="number">11211</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">project_domain_name</span> = Default</span><br><span class="line"><span class="attr">user_domain_name</span> = Default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">username</span> = neutron</span><br><span class="line"><span class="attr">password</span> = NEUTRON_PASS</span><br><span class="line"></span><br><span class="line"><span class="section">[nova]</span></span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">project_domain_name</span> = Default</span><br><span class="line"><span class="attr">user_domain_name</span> = Default</span><br><span class="line"><span class="attr">region_name</span> = RegionOne</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">username</span> = nova</span><br><span class="line"><span class="attr">password</span> = NOVA_PASS</span><br><span class="line"></span><br><span class="line"><span class="section">[oslo_concurrency]</span></span><br><span class="line"><span class="attr">lock_path</span> = /var/lib/neutron/tmp</span><br><span class="line"></span><br><span class="line"><span class="section">[experimental]</span></span><br><span class="line"><span class="attr">linuxbridge</span> = <span class="literal">true</span></span><br></pre></td></tr></table></figure><ul><li><p>配置ML2，ML2具体配置可以根据用户需求自行修改，本文使用的是provider network + linuxbridge**</p></li><li><p>修改&#x2F;etc&#x2F;neutron&#x2F;plugins&#x2F;ml2&#x2F;ml2_conf.ini</p></li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[ml2]</span><br><span class="line">type_drivers = flat,vlan,vxlan</span><br><span class="line">tenant_network_types = vxlan</span><br><span class="line">mechanism_drivers = linuxbridge,l2population</span><br><span class="line">extension_drivers = port_security</span><br><span class="line"></span><br><span class="line">[ml2_type_flat]</span><br><span class="line">flat_networks = provider</span><br><span class="line"></span><br><span class="line">[ml2_type_vxlan]</span><br><span class="line">vni_ranges = 1:1000</span><br><span class="line"></span><br><span class="line">[securitygroup]</span><br><span class="line">enable_ipset = true</span><br></pre></td></tr></table></figure><ul><li>修改&#x2F;etc&#x2F;neutron&#x2F;plugins&#x2F;ml2&#x2F;linuxbridge_agent.ini</li></ul> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[linux_bridge]</span></span><br><span class="line"><span class="attr">physical_interface_mappings</span> = provider:PROVIDER_INTERFACE_NAME</span><br><span class="line"></span><br><span class="line"><span class="section">[vxlan]</span></span><br><span class="line"><span class="attr">enable_vxlan</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">local_ip</span> = OVERLAY_INTERFACE_IP_ADDRESS</span><br><span class="line"><span class="attr">l2_population</span> = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="section">[securitygroup]</span></span><br><span class="line"><span class="attr">enable_security_group</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">firewall_driver</span> = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver</span><br></pre></td></tr></table></figure><ul><li><p>配置Layer-3代理</p></li><li><p>修改&#x2F;etc&#x2F;neutron&#x2F;l3_agent.ini</p></li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[DEFAULT]</span><br><span class="line">interface_driver = linuxbridge</span><br></pre></td></tr></table></figure><p> 配置DHCP代理<br> 修改&#x2F;etc&#x2F;neutron&#x2F;dhcp_agent.ini</p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">interface_driver</span> = linuxbridge</span><br><span class="line"><span class="attr">dhcp_driver</span> = neutron.agent.linux.dhcp.Dnsmasq</span><br><span class="line"><span class="attr">enable_isolated_metadata</span> = <span class="literal">true</span></span><br></pre></td></tr></table></figure><ul><li><p>配置metadata代理</p></li><li><p>修改&#x2F;etc&#x2F;neutron&#x2F;metadata_agent.ini</p></li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[DEFAULT]</span><br><span class="line">nova_metadata_host = controller</span><br><span class="line">metadata_proxy_shared_secret = METADATA_SECRET</span><br></pre></td></tr></table></figure></li><li><p>配置nova服务使用neutron，修改&#x2F;etc&#x2F;nova&#x2F;nova.conf</p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[neutron]</span></span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">project_domain_name</span> = default</span><br><span class="line"><span class="attr">user_domain_name</span> = default</span><br><span class="line"><span class="attr">region_name</span> = RegionOne</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">username</span> = neutron</span><br><span class="line"><span class="attr">password</span> = NEUTRON_PASS</span><br><span class="line"><span class="attr">service_metadata_proxy</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">metadata_proxy_shared_secret</span> = METADATA_SECRET</span><br></pre></td></tr></table></figure></li><li><p>创建&#x2F;etc&#x2F;neutron&#x2F;plugin.ini的符号链接</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini</span><br></pre></td></tr></table></figure></li><li><p>同步数据库</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su -s /bin/sh -c &quot;neutron-db-manage --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head&quot; neutron</span><br></pre></td></tr></table></figure></li><li><p>重启nova api服务</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart openstack-nova-api</span><br></pre></td></tr></table></figure></li><li><p>启动网络服务</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable neutron-server.service neutron-linuxbridge-agent.service \</span><br><span class="line">neutron-dhcp-agent.service neutron-metadata-agent.service neutron-l3-agent.service</span><br><span class="line">systemctl start neutron-server.service neutron-linuxbridge-agent.service \</span><br><span class="line">neutron-dhcp-agent.service neutron-metadata-agent.service neutron-l3-agent.service</span><br></pre></td></tr></table></figure></li></ol><p><strong>Compute节点</strong></p><ol><li><p>安装软件包</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install openstack-neutron-linuxbridge ebtables ipset -y</span><br></pre></td></tr></table></figure></li><li><p>配置Neutron</p><ul><li>修改&#x2F;etc&#x2F;neutron&#x2F;neutron.conf</li></ul> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">transport_url</span> = rabbit://openstack:RABBIT_PASS@controller</span><br><span class="line"><span class="attr">auth_strategy</span> = keystone</span><br><span class="line"></span><br><span class="line"><span class="section">[keystone_authtoken]</span></span><br><span class="line"><span class="attr">www_authenticate_uri</span> = http://controller:<span class="number">5000</span></span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span></span><br><span class="line"><span class="attr">memcached_servers</span> = controller:<span class="number">11211</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">project_domain_name</span> = Default</span><br><span class="line"><span class="attr">user_domain_name</span> = Default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">username</span> = neutron</span><br><span class="line"><span class="attr">password</span> = NEUTRON_PASS</span><br><span class="line"></span><br><span class="line"><span class="section">[oslo_concurrency]</span></span><br><span class="line"><span class="attr">lock_path</span> = /var/lib/neutron/tmp</span><br></pre></td></tr></table></figure><ul><li>修改&#x2F;etc&#x2F;neutron&#x2F;plugins&#x2F;ml2&#x2F;linuxbridge_agent.ini</li></ul> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[linux_bridge]</span></span><br><span class="line"><span class="attr">physical_interface_mappings</span> = provider:PROVIDER_INTERFACE_NAME</span><br><span class="line"></span><br><span class="line"><span class="section">[vxlan]</span></span><br><span class="line"><span class="attr">enable_vxlan</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">local_ip</span> = OVERLAY_INTERFACE_IP_ADDRESS</span><br><span class="line"><span class="attr">l2_population</span> = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="section">[securitygroup]</span></span><br><span class="line"><span class="attr">enable_security_group</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">firewall_driver</span> = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver</span><br></pre></td></tr></table></figure><ul><li>配置nova compute服务使用neutron，修改&#x2F;etc&#x2F;nova&#x2F;nova.conf</li></ul> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[neutron]</span></span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">project_domain_name</span> = default</span><br><span class="line"><span class="attr">user_domain_name</span> = default</span><br><span class="line"><span class="attr">region_name</span> = RegionOne</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">username</span> = neutron</span><br><span class="line"><span class="attr">password</span> = NEUTRON_PASS</span><br></pre></td></tr></table></figure></li><li><p>重启nova-compute服务</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart openstack-nova-compute.service</span><br></pre></td></tr></table></figure></li><li><p>启动Neutron linuxbridge agent服务</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable neutron-linuxbridge-agent</span><br><span class="line">systemctl start neutron-linuxbridge-agent</span><br></pre></td></tr></table></figure></li></ol><h4 id="Cinder"><a href="#Cinder" class="headerlink" title="Cinder"></a>Cinder</h4><p>Cinder是OpenStack的存储服务，提供块设备的创建、发放、备份等功能。</p><p><strong>Controller节点</strong>：</p><ol><li><p>初始化数据库</p><p> <code>CINDER_DBPASS</code>是用户自定义的cinder数据库密码。</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql <span class="operator">-</span>u root <span class="operator">-</span>p</span><br><span class="line"></span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">CREATE</span> DATABASE cinder;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> cinder.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;cinder&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;CINDER_DBPASS&#x27;</span>;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> cinder.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;cinder&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;CINDER_DBPASS&#x27;</span>;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> exit</span><br></pre></td></tr></table></figure></li><li><p>初始化Keystone资源对象</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">source ~/.admin-openrc</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建用户时，命令行会提示输入密码，请输入自定义的密码，下文涉及到`CINDER_PASS`的地方替换成该密码即可。</span></span><br><span class="line">openstack user create --domain default --password-prompt cinder</span><br><span class="line"></span><br><span class="line">openstack role add --project service --user cinder admin</span><br><span class="line">openstack service create --name cinderv3 --description &quot;OpenStack Block Storage&quot; volumev3</span><br><span class="line"></span><br><span class="line">openstack endpoint create --region RegionOne volumev3 public http://controller:8776/v3/%\(project_id\)s</span><br><span class="line">openstack endpoint create --region RegionOne volumev3 internal http://controller:8776/v3/%\(project_id\)s</span><br><span class="line">openstack endpoint create --region RegionOne volumev3 admin http://controller:8776/v3/%\(project_id\)s</span><br></pre></td></tr></table></figure></li><li><p>安装软件包</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install openstack-cinder-api openstack-cinder-scheduler</span><br></pre></td></tr></table></figure></li><li><p>修改cinder配置文件<code>/etc/cinder/cinder.conf</code></p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">transport_url</span> = rabbit://openstack:RABBIT_PASS@controller</span><br><span class="line"><span class="attr">auth_strategy</span> = keystone</span><br><span class="line"><span class="attr">my_ip</span> = <span class="number">192.168</span>.<span class="number">0.2</span></span><br><span class="line"></span><br><span class="line"><span class="section">[database]</span></span><br><span class="line"><span class="attr">connection</span> = mysql+pymysql://cinder:CINDER_DBPASS@controller/cinder</span><br><span class="line"></span><br><span class="line"><span class="section">[keystone_authtoken]</span></span><br><span class="line"><span class="attr">www_authenticate_uri</span> = http://controller:<span class="number">5000</span></span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span></span><br><span class="line"><span class="attr">memcached_servers</span> = controller:<span class="number">11211</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">project_domain_name</span> = Default</span><br><span class="line"><span class="attr">user_domain_name</span> = Default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">username</span> = cinder</span><br><span class="line"><span class="attr">password</span> = CINDER_PASS</span><br><span class="line"></span><br><span class="line"><span class="section">[oslo_concurrency]</span></span><br><span class="line"><span class="attr">lock_path</span> = /var/lib/cinder/tmp</span><br></pre></td></tr></table></figure></li><li><p>数据库同步</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su -s /bin/sh -c &quot;cinder-manage db sync&quot; cinder</span><br></pre></td></tr></table></figure></li><li><p>修改nova配置<code>/etc/nova/nova.conf</code></p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[cinder]</span></span><br><span class="line"><span class="attr">os_region_name</span> = RegionOne</span><br></pre></td></tr></table></figure></li><li><p>启动服务</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart openstack-nova-api</span><br><span class="line">systemctl start openstack-cinder-api openstack-cinder-scheduler</span><br></pre></td></tr></table></figure></li></ol><p><strong>Storage节点</strong>：</p><p>Storage节点要提前准备至少一块硬盘，作为cinder的存储后端，下文默认storage节点已经存在一块未使用的硬盘，设备名称为<code>/dev/sdb</code>，用户在配置过程中，请按照真实环境信息进行名称替换。</p><p>Cinder支持很多类型的后端存储，本指导使用最简单的lvm为参考，如果您想使用如ceph等其他后端，请自行配置。</p><ol><li><p>安装软件包</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install lvm2 device-mapper-persistent-data scsi-target-utils rpcbind nfs-utils openstack-cinder-volume openstack-cinder-backup</span><br></pre></td></tr></table></figure></li><li><p>配置lvm卷组</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pvcreate /dev/sdb</span><br><span class="line">vgcreate cinder-volumes /dev/sdb</span><br></pre></td></tr></table></figure></li><li><p>修改cinder配置<code>/etc/cinder/cinder.conf</code></p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">transport_url</span> = rabbit://openstack:RABBIT_PASS@controller</span><br><span class="line"><span class="attr">auth_strategy</span> = keystone</span><br><span class="line"><span class="attr">my_ip</span> = <span class="number">192.168</span>.<span class="number">0.4</span></span><br><span class="line"><span class="attr">enabled_backends</span> = lvm</span><br><span class="line"><span class="attr">glance_api_servers</span> = http://controller:<span class="number">9292</span></span><br><span class="line"></span><br><span class="line"><span class="section">[keystone_authtoken]</span></span><br><span class="line"><span class="attr">www_authenticate_uri</span> = http://controller:<span class="number">5000</span></span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span></span><br><span class="line"><span class="attr">memcached_servers</span> = controller:<span class="number">11211</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">project_domain_name</span> = default</span><br><span class="line"><span class="attr">user_domain_name</span> = default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">username</span> = cinder</span><br><span class="line"><span class="attr">password</span> = CINDER_PASS</span><br><span class="line"></span><br><span class="line"><span class="section">[database]</span></span><br><span class="line"><span class="attr">connection</span> = mysql+pymysql://cinder:CINDER_DBPASS@controller/cinder</span><br><span class="line"></span><br><span class="line"><span class="section">[lvm]</span></span><br><span class="line"><span class="attr">volume_driver</span> = cinder.volume.drivers.lvm.LVMVolumeDriver</span><br><span class="line"><span class="attr">volume_group</span> = cinder-volumes</span><br><span class="line"><span class="attr">target_protocol</span> = iscsi</span><br><span class="line"><span class="attr">target_helper</span> = lioadm</span><br><span class="line"></span><br><span class="line"><span class="section">[oslo_concurrency]</span></span><br><span class="line"><span class="attr">lock_path</span> = /var/lib/cinder/tmp</span><br></pre></td></tr></table></figure></li><li><p>配置cinder backup （可选）</p><p> cinder-backup是可选的备份服务，cinder同样支持很多种备份后端，本文使用swift存储，如果您想使用如NFS等后端，请自行配置，例如可以参考<a href="https://docs.openstack.org/cinder/2023.1/admin/nfs-backend.html">OpenStack官方文档</a>对NFS的配置说明。</p><p> 修改<code>/etc/cinder/cinder.conf</code>，在<code>[DEFAULT]</code>中新增</p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">backup_driver</span> = cinder.backup.drivers.swift.SwiftBackupDriver</span><br><span class="line"><span class="attr">backup_swift_url</span> = SWIFT_URL</span><br></pre></td></tr></table></figure><p> 这里的<code>SWIFT_URL</code>是指环境中swift服务的URL，在部署完swift服务后，执行<code>openstack catalog show object-store</code>命令获取。</p></li><li><p>启动服务</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start openstack-cinder-volume target</span><br><span class="line">systemctl start openstack-cinder-backup (可选)</span><br></pre></td></tr></table></figure></li></ol><p>至此，Cinder服务的部署已全部完成，可以在controller通过以下命令进行简单的验证</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">source ~/.admin-openrc</span><br><span class="line">openstack storage service list</span><br><span class="line">openstack volume list</span><br></pre></td></tr></table></figure><h4 id="Horizon"><a href="#Horizon" class="headerlink" title="Horizon"></a>Horizon</h4><p>Horizon是OpenStack提供的前端页面，可以让用户通过网页鼠标的操作来控制OpenStack集群，而不用繁琐的CLI命令行。Horizon一般部署在控制节点。</p><ol><li><p>安装软件包</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install openstack-dashboard</span><br></pre></td></tr></table></figure></li><li><p>修改配置文件<code>/etc/openstack-dashboard/local_settings</code></p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">OPENSTACK_HOST</span> = <span class="string">&quot;controller&quot;</span></span><br><span class="line"><span class="attr">ALLOWED_HOSTS</span> = [<span class="string">&#x27;*&#x27;</span>, ]</span><br><span class="line"><span class="attr">OPENSTACK_KEYSTONE_URL</span> =  <span class="string">&quot;http://controller:5000/v3&quot;</span></span><br><span class="line"><span class="attr">SESSION_ENGINE</span> = <span class="string">&#x27;django.contrib.sessions.backends.cache&#x27;</span></span><br><span class="line"><span class="attr">CACHES</span> = &#123;</span><br><span class="line">&#x27;default&#x27;: &#123;</span><br><span class="line">    &#x27;BACKEND&#x27;: &#x27;django.core.cache.backends.memcached.MemcachedCache&#x27;,</span><br><span class="line">    &#x27;LOCATION&#x27;: &#x27;controller:11211&#x27;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="attr">OPENSTACK_KEYSTONE_MULTIDOMAIN_SUPPORT</span> = <span class="literal">True</span></span><br><span class="line"><span class="attr">OPENSTACK_KEYSTONE_DEFAULT_DOMAIN</span> = <span class="string">&quot;Default&quot;</span></span><br><span class="line"><span class="attr">OPENSTACK_KEYSTONE_DEFAULT_ROLE</span> = <span class="string">&quot;member&quot;</span></span><br><span class="line"><span class="attr">WEBROOT</span> = <span class="string">&#x27;/dashboard&#x27;</span></span><br><span class="line"><span class="attr">POLICY_FILES_PATH</span> = <span class="string">&quot;/etc/openstack-dashboard&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">OPENSTACK_API_VERSIONS</span> = &#123;</span><br><span class="line">    &quot;identity&quot;: 3,</span><br><span class="line">    &quot;image&quot;: 2,</span><br><span class="line">    &quot;volume&quot;: 3,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>重启服务</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart httpd</span><br></pre></td></tr></table></figure></li></ol><p>至此，horizon服务的部署已全部完成，打开浏览器，输入<code>http://192.168.0.2/dashboard</code>，打开horizon登录页面。</p><h4 id="Ironic"><a href="#Ironic" class="headerlink" title="Ironic"></a>Ironic</h4><p>Ironic是OpenStack的裸金属服务，如果用户需要进行裸机部署则推荐使用该组件。否则，可以不用安装。</p><p>在控制节点执行以下操作。</p><ol><li><p>设置数据库</p><p> 裸金属服务在数据库中存储信息，创建一个<strong>ironic</strong>用户可以访问的<strong>ironic</strong>数据库，替换<strong>IRONIC_DBPASS</strong>为合适的密码</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql <span class="operator">-</span>u root <span class="operator">-</span>p</span><br><span class="line"></span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">CREATE</span> DATABASE ironic <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> ironic.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;ironic&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> \</span><br><span class="line">IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;IRONIC_DBPASS&#x27;</span>;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> ironic.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;ironic&#x27;</span>@<span class="string">&#x27;%&#x27;</span> \</span><br><span class="line">IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;IRONIC_DBPASS&#x27;</span>;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> exit</span><br><span class="line">Bye</span><br></pre></td></tr></table></figure></li><li><p>创建服务用户认证</p><ul><li>创建Bare Metal服务用户</li></ul><p> 替换<code>IRONIC_PASS</code>为ironic用户密码，<code>IRONIC_INSPECTOR_PASS</code>为ironic_inspector用户密码。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">openstack user create --password IRONIC_PASS \</span><br><span class="line">    --email ironic@example.com ironic</span><br><span class="line">openstack role add --project service --user ironic admin</span><br><span class="line">openstack service create --name ironic \</span><br><span class="line">    --description &quot;Ironic baremetal provisioning service&quot; baremetal</span><br><span class="line"></span><br><span class="line">openstack service create --name ironic-inspector --description     &quot;Ironic inspector baremetal provisioning service&quot; baremetal-introspection</span><br><span class="line">openstack user create --password IRONIC_INSPECTOR_PASS --email ironic_inspector@example.com ironic-inspector</span><br><span class="line">openstack role add --project service --user ironic-inspector admin</span><br></pre></td></tr></table></figure><ul><li>创建Bare Metal服务访问入口</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">openstack endpoint create --region RegionOne baremetal admin http://192.168.0.2:6385</span><br><span class="line">openstack endpoint create --region RegionOne baremetal public http://192.168.0.2:6385</span><br><span class="line">openstack endpoint create --region RegionOne baremetal internal http://192.168.0.2:6385</span><br><span class="line">openstack endpoint create --region RegionOne baremetal-introspection internal http://192.168.0.2:5050/v1</span><br><span class="line">openstack endpoint create --region RegionOne baremetal-introspection public http://192.168.0.2:5050/v1</span><br><span class="line">openstack endpoint create --region RegionOne baremetal-introspection admin http://192.168.0.2:5050/v1</span><br></pre></td></tr></table></figure></li><li><p>安装组件</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install openstack-ironic-api openstack-ironic-conductor python3-ironicclient</span><br></pre></td></tr></table></figure></li><li><p>配置ironic-api服务</p><p> 配置文件路径&#x2F;etc&#x2F;ironic&#x2F;ironic.conf</p><ul><li>通过<strong>connection</strong>选项配置数据库的位置，如下所示，替换<strong>IRONIC_DBPASS</strong>为<strong>ironic</strong>用户的密码，替换<strong>DB_IP</strong>为DB服务器所在的IP地址：</li></ul> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[database]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The SQ LAlchemy connection string used to connect to the</span></span><br><span class="line"><span class="comment"># database (string value)</span></span><br><span class="line"><span class="comment"># connection = mysql+pymysql://ironic:IRONIC_DBPASS@DB_IP/ironic</span></span><br><span class="line"><span class="attr">connection</span> = mysql+pymysql://ironic:IRONIC_DBPASS@controller/ironic</span><br></pre></td></tr></table></figure><ul><li>通过以下选项配置ironic-api服务使用RabbitMQ消息代理，替换**RPC_***为RabbitMQ的详细地址和凭证</li></ul> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A URL representing the messaging driver to use and its full</span></span><br><span class="line"><span class="comment"># configuration. (string value)</span></span><br><span class="line"><span class="comment"># transport_url = rabbit://RPC_USER:RPC_PASSWORD@RPC_HOST:RPC_PORT/</span></span><br><span class="line"><span class="attr">transport_url</span> = rabbit://openstack:RABBIT_PASS@controller:<span class="number">5672</span>/</span><br></pre></td></tr></table></figure><p> 用户也可自行使用json-rpc方式替换rabbitmq</p><ul><li>配置ironic-api服务使用身份认证服务的凭证，替换<strong>PUBLIC_IDENTITY_IP</strong>为身份认证服务器的公共IP，替换<strong>PRIVATE_IDENTITY_IP</strong>为身份认证服务器的私有IP，替换     <strong>IRONIC_PASS</strong>为身份认证服务中<strong>ironic</strong>用户的密码，替换<strong>RABBIT_PASS</strong>为RabbitMQ中openstack账户的密码。：</li></ul> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Authentication strategy used by ironic-api: one of</span></span><br><span class="line"><span class="comment"># &quot;keystone&quot; or &quot;noauth&quot;. &quot;noauth&quot; should not be used in a</span></span><br><span class="line"><span class="comment"># production environment because all authentication will be</span></span><br><span class="line"><span class="comment"># disabled. (string value)</span></span><br><span class="line"></span><br><span class="line"><span class="attr">auth_strategy</span>=keystone</span><br><span class="line"><span class="attr">host</span> = controller</span><br><span class="line"><span class="attr">memcache_servers</span> = controller:<span class="number">11211</span></span><br><span class="line"><span class="attr">enabled_network_interfaces</span> = flat,noop,neutron</span><br><span class="line"><span class="attr">default_network_interface</span> = noop</span><br><span class="line"><span class="attr">enabled_hardware_types</span> = ipmi</span><br><span class="line"><span class="attr">enabled_boot_interfaces</span> = pxe</span><br><span class="line"><span class="attr">enabled_deploy_interfaces</span> = direct</span><br><span class="line"><span class="attr">default_deploy_interface</span> = direct</span><br><span class="line"><span class="attr">enabled_inspect_interfaces</span> = inspector</span><br><span class="line"><span class="attr">enabled_management_interfaces</span> = ipmitool</span><br><span class="line"><span class="attr">enabled_power_interfaces</span> = ipmitool</span><br><span class="line"><span class="attr">enabled_rescue_interfaces</span> = <span class="literal">no</span>-rescue,agent</span><br><span class="line"><span class="attr">isolinux_bin</span> = /usr/share/syslinux/isolinux.bin</span><br><span class="line"><span class="attr">logging_context_format_string</span> = %(asctime)s.%(msecs)<span class="number">03</span>d %(process)d %(levelname)s %(name)s [%(global_request_id)s %(request_id)s %     (user_identity)s] %(instance)s%(message)s</span><br><span class="line"></span><br><span class="line"><span class="section">[keystone_authtoken]</span></span><br><span class="line"><span class="comment"># Authentication type to load (string value)</span></span><br><span class="line"><span class="attr">auth_type</span>=password</span><br><span class="line"><span class="comment"># Complete public Identity API endpoint (string value)</span></span><br><span class="line"><span class="comment"># www_authenticate_uri=http://PUBLIC_IDENTITY_IP:5000</span></span><br><span class="line"><span class="attr">www_authenticate_uri</span>=http://controller:<span class="number">5000</span></span><br><span class="line"><span class="comment"># Complete admin Identity API endpoint. (string value)</span></span><br><span class="line"><span class="comment"># auth_url=http://PRIVATE_IDENTITY_IP:5000</span></span><br><span class="line"><span class="attr">auth_url</span>=http://controller:<span class="number">5000</span></span><br><span class="line"><span class="comment"># Service username. (string value)</span></span><br><span class="line"><span class="attr">username</span>=ironic</span><br><span class="line"><span class="comment"># Service account password. (string value)</span></span><br><span class="line"><span class="attr">password</span>=IRONIC_PASS</span><br><span class="line"><span class="comment"># Service tenant name. (string value)</span></span><br><span class="line"><span class="attr">project_name</span>=service</span><br><span class="line"><span class="comment"># Domain name containing project (string value)</span></span><br><span class="line"><span class="attr">project_domain_name</span>=Default</span><br><span class="line"><span class="comment"># User&#x27;s domain name (string value)</span></span><br><span class="line"><span class="attr">user_domain_name</span>=Default</span><br><span class="line"></span><br><span class="line"><span class="section">[agent]</span></span><br><span class="line"><span class="attr">deploy_logs_collect</span> = always</span><br><span class="line"><span class="attr">deploy_logs_local_path</span> = /var/log/ironic/deploy</span><br><span class="line"><span class="attr">deploy_logs_storage_backend</span> = local</span><br><span class="line"><span class="attr">image_download_source</span> = http</span><br><span class="line"><span class="attr">stream_raw_images</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">force_raw_images</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">verify_ca</span> = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="section">[oslo_concurrency]</span></span><br><span class="line"></span><br><span class="line"><span class="section">[oslo_messaging_notifications]</span></span><br><span class="line"><span class="attr">transport_url</span> = rabbit://openstack:RABBIT_PASS@controller:<span class="number">5672</span>/</span><br><span class="line"><span class="attr">topics</span> = notifications</span><br><span class="line"><span class="attr">driver</span> = messagingv2</span><br><span class="line"></span><br><span class="line"><span class="section">[oslo_messaging_rabbit]</span></span><br><span class="line"><span class="attr">amqp_durable_queues</span> = <span class="literal">True</span></span><br><span class="line"><span class="attr">rabbit_ha_queues</span> = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="section">[pxe]</span></span><br><span class="line"><span class="attr">ipxe_enabled</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">pxe_append_params</span> = nofb nomodeset vga=normal coreos.autologin ipa-insecure=<span class="number">1</span></span><br><span class="line"><span class="attr">image_cache_size</span> = <span class="number">204800</span></span><br><span class="line"><span class="attr">tftp_root</span>=/var/lib/tftpboot/cephfs/</span><br><span class="line"><span class="attr">tftp_master_path</span>=/var/lib/tftpboot/cephfs/master_images</span><br><span class="line"></span><br><span class="line"><span class="section">[dhcp]</span></span><br><span class="line"><span class="attr">dhcp_provider</span> = none</span><br></pre></td></tr></table></figure><ul><li>创建裸金属服务数据库表</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ironic-dbsync --config-file /etc/ironic/ironic.conf create_schema</span><br></pre></td></tr></table></figure><ul><li>重启ironic-api服务</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart openstack-ironic-api</span><br></pre></td></tr></table></figure></li><li><p>配置ironic-conductor服务</p><p> 如下为ironic-conductor服务自身的标准配置，ironic-conductor服务可以与ironic-api服务分布于不同节点，本指南中均部署与控制节点，所以重复的配置项可跳过。</p><ul><li>替换使用conductor服务所在host的IP配置my_ip：</li></ul> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># IP address of this host. If unset, will determine the IP</span></span><br><span class="line"><span class="comment"># programmatically. If unable to do so, will use &quot;127.0.0.1&quot;.</span></span><br><span class="line"><span class="comment"># (string value)</span></span><br><span class="line"><span class="comment"># my_ip=HOST_IP</span></span><br><span class="line"><span class="attr">my_ip</span> = <span class="number">192.168</span>.<span class="number">0.2</span></span><br></pre></td></tr></table></figure><ul><li>配置数据库的位置，ironic-conductor应该使用和ironic-api相同的配置。替换<strong>IRONIC_DBPASS</strong>为<strong>ironic</strong>用户的密码：</li></ul> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[database]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The SQLAlchemy connection string to use to connect to the</span></span><br><span class="line"><span class="comment"># database. (string value)</span></span><br><span class="line"><span class="attr">connection</span> = mysql+pymysql://ironic:IRONIC_DBPASS@controller/ironic</span><br></pre></td></tr></table></figure><ul><li>通过以下选项配置ironic-api服务使用RabbitMQ消息代理，ironic-conductor应该使用和ironic-api相同的配置，替换<strong>RABBIT_PASS</strong>为RabbitMQ中openstack账户的密码：</li></ul> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># A URL representing the messaging driver to use and its full</span></span><br><span class="line"><span class="comment"># configuration. (string value)</span></span><br><span class="line"><span class="attr">transport_url</span> = rabbit://openstack:RABBIT_PASS@controller:<span class="number">5672</span>/</span><br></pre></td></tr></table></figure><p> 用户也可自行使用json-rpc方式替换rabbitmq</p><ul><li>配置凭证访问其他OpenStack服务</li></ul><p> 为了与其他OpenStack服务进行通信，裸金属服务在请求其他服务时需要使用服务用户与OpenStack Identity服务进行认证。这些用户的凭据必须在与相应服务相关的每个配置文件中进行配置。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[neutron] - 访问OpenStack网络服务</span><br><span class="line">[glance] - 访问OpenStack镜像服务</span><br><span class="line">[swift] - 访问OpenStack对象存储服务</span><br><span class="line">[cinder] - 访问OpenStack块存储服务</span><br><span class="line">[inspector] - 访问OpenStack裸金属introspection服务</span><br><span class="line">[service_catalog] - 一个特殊项用于保存裸金属服务使用的凭证，该凭证用于发现注册在OpenStack身份认证服务目录中的自己的API URL端点</span><br></pre></td></tr></table></figure><p> 简单起见，可以对所有服务使用同一个服务用户。为了向后兼容，该用户应该和ironic-api服务的[keystone_authtoken]所配置的为同一个用户。但这不是必须的，也可以为每个服务创建并配置不同的服务用户。</p><p> 在下面的示例中，用户访问OpenStack网络服务的身份验证信息配置为：</p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">网络服务部署在名为RegionOne的身份认证服务域中，仅在服务目录中注册公共端点接口</span><br><span class="line"></span><br><span class="line">请求时使用特定的CA SSL证书进行HTTPS连接</span><br><span class="line"></span><br><span class="line">与ironic-api服务配置相同的服务用户</span><br><span class="line"></span><br><span class="line">动态密码认证插件基于其他选项发现合适的身份认证服务API版本</span><br></pre></td></tr></table></figure><p> 替换IRONIC_PASS为ironic用户密码。</p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[neutron]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Authentication type to load (string value)</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="comment"># Authentication URL (string value)</span></span><br><span class="line"><span class="attr">auth_url</span>=https://IDENTITY_IP:<span class="number">5000</span>/</span><br><span class="line"><span class="comment"># Username (string value)</span></span><br><span class="line"><span class="attr">username</span>=ironic</span><br><span class="line"><span class="comment"># User&#x27;s password (string value)</span></span><br><span class="line"><span class="attr">password</span>=IRONIC_PASS</span><br><span class="line"><span class="comment"># Project name to scope to (string value)</span></span><br><span class="line"><span class="attr">project_name</span>=service</span><br><span class="line"><span class="comment"># Domain ID containing project (string value)</span></span><br><span class="line"><span class="attr">project_domain_id</span>=default</span><br><span class="line"><span class="comment"># User&#x27;s domain id (string value)</span></span><br><span class="line"><span class="attr">user_domain_id</span>=default</span><br><span class="line"><span class="comment"># PEM encoded Certificate Authority to use when verifying</span></span><br><span class="line"><span class="comment"># HTTPs connections. (string value)</span></span><br><span class="line"><span class="attr">cafile</span>=/opt/stack/data/ca-bundle.pem</span><br><span class="line"><span class="comment"># The default region_name for endpoint URL discovery. (string</span></span><br><span class="line"><span class="comment"># value)</span></span><br><span class="line"><span class="attr">region_name</span> = RegionOne</span><br><span class="line"><span class="comment"># List of interfaces, in order of preference, for endpoint</span></span><br><span class="line"><span class="comment"># URL. (list value)</span></span><br><span class="line"><span class="attr">valid_interfaces</span>=public</span><br><span class="line"></span><br><span class="line"><span class="comment"># 其他参考配置</span></span><br><span class="line"><span class="section">[glance]</span></span><br><span class="line"><span class="attr">endpoint_override</span> = http://controller:<span class="number">9292</span></span><br><span class="line"><span class="attr">www_authenticate_uri</span> = http://controller:<span class="number">5000</span></span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">username</span> = ironic</span><br><span class="line"><span class="attr">password</span> = IRONIC_PASS</span><br><span class="line"><span class="attr">project_domain_name</span> = default</span><br><span class="line"><span class="attr">user_domain_name</span> = default</span><br><span class="line"><span class="attr">region_name</span> = RegionOne</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"></span><br><span class="line"><span class="section">[service_catalog]</span>  </span><br><span class="line"><span class="attr">region_name</span> = RegionOne</span><br><span class="line"><span class="attr">project_domain_id</span> = default</span><br><span class="line"><span class="attr">user_domain_id</span> = default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">password</span> = IRONIC_PASS</span><br><span class="line"><span class="attr">username</span> = ironic</span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br></pre></td></tr></table></figure><p> 默认情况下，为了与其他服务进行通信，裸金属服务会尝试通过身份认证服务的服务目录发现该服务合适的端点。如果希望对一个特定服务使用一个不同的端点，则在裸金属服务的配置文件中通过endpoint_override选项进行指定：</p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[neutron]</span></span><br><span class="line"><span class="attr">endpoint_override</span> = &lt;NEUTRON_API_ADDRESS&gt;</span><br></pre></td></tr></table></figure><ul><li>配置允许的驱动程序和硬件类型</li></ul><p> 通过设置enabled_hardware_types设置ironic-conductor服务允许使用的硬件类型：</p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">enabled_hardware_types</span> = ipmi</span><br></pre></td></tr></table></figure><p> 配置硬件接口：</p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">enabled_boot_interfaces</span> = pxe</span><br><span class="line"><span class="attr">enabled_deploy_interfaces</span> = direct,iscsi</span><br><span class="line"><span class="attr">enabled_inspect_interfaces</span> = inspector</span><br><span class="line"><span class="attr">enabled_management_interfaces</span> = ipmitool</span><br><span class="line"><span class="attr">enabled_power_interfaces</span> = ipmitool</span><br></pre></td></tr></table></figure><p> 配置接口默认值：</p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">default_deploy_interface</span> = direct</span><br><span class="line"><span class="attr">default_network_interface</span> = neutron</span><br></pre></td></tr></table></figure><p> 如果启用了任何使用Direct deploy的驱动，必须安装和配置镜像服务的Swift后端。Ceph对象网关(RADOS网关)也支持作为镜像服务的后端。</p><ul><li>重启ironic-conductor服务</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart openstack-ironic-conductor</span><br></pre></td></tr></table></figure></li><li><p>配置ironic-inspector服务</p><ul><li>安装组件</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install openstack-ironic-inspector</span><br></pre></td></tr></table></figure><ul><li>创建数据库</li></ul> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># mysql <span class="operator">-</span>u root <span class="operator">-</span>p</span><br><span class="line"></span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">CREATE</span> DATABASE ironic_inspector <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8;</span><br><span class="line"></span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> ironic_inspector.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;ironic_inspector&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> \</span><br><span class="line">IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;IRONIC_INSPECTOR_DBPASS&#x27;</span>;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> ironic_inspector.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;ironic_inspector&#x27;</span>@<span class="string">&#x27;%&#x27;</span> \</span><br><span class="line">IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;IRONIC_INSPECTOR_DBPASS&#x27;</span>;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> exit</span><br><span class="line">Bye</span><br></pre></td></tr></table></figure><ul><li>配置<code>/etc/ironic-inspector/inspector.conf</code></li></ul><p> 通过<strong>connection</strong>选项配置数据库的位置，如下所示，替换<strong>IRONIC_INSPECTOR_DBPASS</strong>为<strong>ironic_inspector</strong>用户的密码</p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[database]</span></span><br><span class="line"><span class="attr">backend</span> = sqlalchemy</span><br><span class="line"><span class="attr">connection</span> = mysql+pymysql://ironic_inspector:IRONIC_INSPECTOR_DBPASS@controller/ironic_inspector</span><br><span class="line"><span class="attr">min_pool_size</span> = <span class="number">100</span></span><br><span class="line"><span class="attr">max_pool_size</span> = <span class="number">500</span></span><br><span class="line"><span class="attr">pool_timeout</span> = <span class="number">30</span></span><br><span class="line"><span class="attr">max_retries</span> = <span class="number">5</span></span><br><span class="line"><span class="attr">max_overflow</span> = <span class="number">200</span></span><br><span class="line"><span class="attr">db_retry_interval</span> = <span class="number">2</span></span><br><span class="line"><span class="attr">db_inc_retry_interval</span> = <span class="literal">True</span></span><br><span class="line"><span class="attr">db_max_retry_interval</span> = <span class="number">2</span></span><br><span class="line"><span class="attr">db_max_retries</span> = <span class="number">5</span></span><br></pre></td></tr></table></figure><ul><li>配置消息队列通信地址</li></ul> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span> </span><br><span class="line"><span class="attr">transport_url</span> = rabbit://openstack:RABBIT_PASS@controller:<span class="number">5672</span>/</span><br></pre></td></tr></table></figure><ul><li>设置keystone认证</li></ul> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"></span><br><span class="line"><span class="attr">auth_strategy</span> = keystone</span><br><span class="line"><span class="attr">timeout</span> = <span class="number">900</span></span><br><span class="line"><span class="attr">rootwrap_config</span> = /etc/ironic-inspector/rootwrap.conf</span><br><span class="line"><span class="attr">logging_context_format_string</span> = %(asctime)s.%(msecs)<span class="number">03</span>d %(process)d %(levelname)s %(name)s [%(global_request_id)s %(request_id)s %     (user_identity)s] %(instance)s%(message)s</span><br><span class="line"><span class="attr">log_dir</span> = /var/log/ironic-inspector</span><br><span class="line"><span class="attr">state_path</span> = /var/lib/ironic-inspector</span><br><span class="line"><span class="attr">use_stderr</span> = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="section">[ironic]</span></span><br><span class="line"><span class="attr">api_endpoint</span> = http://IRONIC_API_HOST_ADDRRESS:<span class="number">6385</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">auth_url</span> = http://PUBLIC_IDENTITY_IP:<span class="number">5000</span></span><br><span class="line"><span class="attr">auth_strategy</span> = keystone</span><br><span class="line"><span class="attr">ironic_url</span> = http://IRONIC_API_HOST_ADDRRESS:<span class="number">6385</span></span><br><span class="line"><span class="attr">os_region</span> = RegionOne</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">project_domain_name</span> = Default</span><br><span class="line"><span class="attr">user_domain_name</span> = Default</span><br><span class="line"><span class="attr">username</span> = IRONIC_SERVICE_USER_NAME</span><br><span class="line"><span class="attr">password</span> = IRONIC_SERVICE_USER_PASSWORD</span><br><span class="line"></span><br><span class="line"><span class="section">[keystone_authtoken]</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span></span><br><span class="line"><span class="attr">www_authenticate_uri</span> = http://controller:<span class="number">5000</span></span><br><span class="line"><span class="attr">project_domain_name</span> = default</span><br><span class="line"><span class="attr">user_domain_name</span> = default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">username</span> = ironic_inspector</span><br><span class="line"><span class="attr">password</span> = IRONICPASSWD</span><br><span class="line"><span class="attr">region_name</span> = RegionOne</span><br><span class="line"><span class="attr">memcache_servers</span> = controller:<span class="number">11211</span></span><br><span class="line"><span class="attr">token_cache_time</span> = <span class="number">300</span></span><br><span class="line"></span><br><span class="line"><span class="section">[processing]</span></span><br><span class="line"><span class="attr">add_ports</span> = active</span><br><span class="line"><span class="attr">processing_hooks</span> = <span class="variable">$default_processing_hooks</span>,local_link_connection,lldp_basic</span><br><span class="line"><span class="attr">ramdisk_logs_dir</span> = /var/log/ironic-inspector/ramdisk</span><br><span class="line"><span class="attr">always_store_ramdisk_logs</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">store_data</span> =none</span><br><span class="line"><span class="attr">power_off</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="section">[pxe_filter]</span></span><br><span class="line"><span class="attr">driver</span> = iptables</span><br><span class="line"></span><br><span class="line"><span class="section">[capabilities]</span></span><br><span class="line"><span class="attr">boot_mode</span>=<span class="literal">True</span></span><br></pre></td></tr></table></figure><ul><li>配置ironic inspector dnsmasq服务</li></ul> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置文件地址：/etc/ironic-inspector/dnsmasq.conf</span></span><br><span class="line"><span class="attr">port</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">interface</span>=enp3s0                         <span class="comment">#替换为实际监听网络接口</span></span><br><span class="line"><span class="attr">dhcp-range</span>=<span class="number">192.168</span>.<span class="number">0.40</span>,<span class="number">192.168</span>.<span class="number">0.50</span>   <span class="comment">#替换为实际dhcp地址范围</span></span><br><span class="line">bind-interfaces</span><br><span class="line">enable-tftp</span><br><span class="line"></span><br><span class="line"><span class="attr">dhcp-match</span>=set:efi,option:client-arch,<span class="number">7</span></span><br><span class="line"><span class="attr">dhcp-match</span>=set:efi,option:client-arch,<span class="number">9</span></span><br><span class="line"><span class="attr">dhcp-match</span>=aarch64, option:client-arch,<span class="number">11</span></span><br><span class="line"><span class="attr">dhcp-boot</span>=tag:aarch64,grubaa64.efi</span><br><span class="line"><span class="attr">dhcp-boot</span>=tag:!aarch64,tag:efi,grubx64.efi</span><br><span class="line"><span class="attr">dhcp-boot</span>=tag:!aarch64,tag:!efi,pxelinux.<span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="attr">tftp-root</span>=/tftpboot                       <span class="comment">#替换为实际tftpboot目录</span></span><br><span class="line"><span class="attr">log-facility</span>=/var/log/dnsmasq.log</span><br></pre></td></tr></table></figure><ul><li>关闭ironic provision网络子网的dhcp</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openstack subnet set --no-dhcp 72426e89-f552-4dc4-9ac7-c4e131ce7f3c</span><br></pre></td></tr></table></figure><ul><li>初始化ironic-inspector服务的数据库</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ironic-inspector-dbsync --config-file /etc/ironic-inspector/inspector.conf upgrade</span><br></pre></td></tr></table></figure><ul><li>启动服务</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable --now openstack-ironic-inspector.service</span><br><span class="line">systemctl enable --now openstack-ironic-inspector-dnsmasq.service</span><br></pre></td></tr></table></figure></li><li><p>配置httpd服务</p><ul><li>创建ironic要使用的httpd的root目录并设置属主属组，目录路径要和&#x2F;etc&#x2F;ironic&#x2F;ironic.conf中[deploy]组中http_root 配置项指定的路径要一致。</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /var/lib/ironic/httproot</span><br><span class="line">chown ironic.ironic /var/lib/ironic/httproot</span><br></pre></td></tr></table></figure><ul><li><p>安装和配置httpd服务</p><ul><li>安装httpd服务，已有请忽略</li></ul>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install httpd -y</span><br></pre></td></tr></table></figure><ul><li>创建&#x2F;etc&#x2F;httpd&#x2F;conf.d&#x2F;openstack-ironic-httpd.conf文件，内容如下：</li></ul>  <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Listen 8080</span><br><span class="line"></span><br><span class="line">&lt;VirtualHost *:8080&gt;</span><br><span class="line">    ServerName ironic.openeuler.com</span><br><span class="line"></span><br><span class="line">    ErrorLog &quot;/var/log/httpd/openstack-ironic-httpd-error_log&quot;</span><br><span class="line">    CustomLog &quot;/var/log/httpd/openstack-ironic-httpd-access_log&quot; &quot;%h %l %u %t \&quot;%r\&quot; %&gt;s %b&quot;</span><br><span class="line"></span><br><span class="line">    DocumentRoot &quot;/var/lib/ironic/httproot&quot;</span><br><span class="line">    &lt;Directory &quot;/var/lib/ironic/httproot&quot;&gt;</span><br><span class="line">        Options Indexes FollowSymLinks</span><br><span class="line">        Require all granted</span><br><span class="line">    &lt;/Directory&gt;</span><br><span class="line">    LogLevel warn</span><br><span class="line">    AddDefaultCharset UTF-8</span><br><span class="line">    EnableSendfile on</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><p>  注意监听的端口要和&#x2F;etc&#x2F;ironic&#x2F;ironic.conf里[deploy]选项中http_url配置项中指定的端口一致。</p><ul><li>重启httpd服务。</li></ul>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart httpd</span><br></pre></td></tr></table></figure></li></ul></li><li><p>deploy ramdisk镜像下载或制作</p><p> 部署一个裸机节点总共需要两组镜像：deploy ramdisk images和user images。Deploy ramdisk images上运行有ironic-python-agent(IPA)服务，Ironic通过它进行裸机节点的环境准备。User images是最终被安装裸机节点上，供用户使用的镜像。</p><p> ramdisk镜像支持通过ironic-python-agent-builder或disk-image-builder工具制作。用户也可以自行选择其他工具制作。若使用原生工具，则需要安装对应的软件包。</p><p> 具体的使用方法可以参考<a href="https://docs.openstack.org/ironic/2023.1/install/deploy-ramdisk.html">官方文档</a>，同时官方也有提供制作好的deploy镜像，可尝试下载。</p><p> 下文介绍通过ironic-python-agent-builder构建ironic使用的deploy镜像的完整过程。</p><ul><li>安装 ironic-python-agent-builder</li></ul> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dnf install python3-ironic-python-agent-builder</span><br><span class="line"></span><br><span class="line">或</span><br><span class="line">pip3 install ironic-python-agent-builder</span><br><span class="line">dnf install qemu-img git</span><br></pre></td></tr></table></figure><ul><li>制作镜像</li></ul><p> 基本用法：</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">usage: ironic-python-agent-builder [-h] [-r RELEASE] [-o OUTPUT] [-e ELEMENT] [-b BRANCH]</span><br><span class="line">                            [-v] [--lzma] [--extra-args EXTRA_ARGS]</span><br><span class="line">                            [--elements-path ELEMENTS_PATH]</span><br><span class="line">                            distribution</span><br><span class="line"></span><br><span class="line">positional arguments:</span><br><span class="line">    distribution          Distribution to use</span><br><span class="line"></span><br><span class="line">options:</span><br><span class="line">    -h, --help            show this help message and exit</span><br><span class="line">    -r RELEASE, --release RELEASE</span><br><span class="line">                        Distribution release to use</span><br><span class="line">    -o OUTPUT, --output OUTPUT</span><br><span class="line">                        Output base file name</span><br><span class="line">    -e ELEMENT, --element ELEMENT</span><br><span class="line">                        Additional DIB element to use</span><br><span class="line">    -b BRANCH, --branch BRANCH</span><br><span class="line">                        If set, override the branch that is used for         ironic-python-agent</span><br><span class="line">                        and requirements</span><br><span class="line">    -v, --verbose         Enable verbose logging in diskimage-builder</span><br><span class="line">    --lzma                Use lzma compression for smaller images</span><br><span class="line">    --extra-args EXTRA_ARGS</span><br><span class="line">                        Extra arguments to pass to diskimage-builder</span><br><span class="line">    --elements-path ELEMENTS_PATH</span><br><span class="line">                        Path(s) to custom DIB elements separated by a colon</span><br></pre></td></tr></table></figure><p> 操作实例：</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-o选项指定生成的镜像名</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ubuntu指定生成ubuntu系统的镜像</span></span><br><span class="line">ironic-python-agent-builder -o my-ubuntu-ipa ubuntu</span><br></pre></td></tr></table></figure><p> 可通过设置<code>ARCH</code>环境变量（默认为amd64）指定所构建镜像的架构。如果是<code>arm</code>架构，需要添加：</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export ARCH=aarch64</span><br></pre></td></tr></table></figure><ul><li>允许ssh登录</li></ul><p> 初始化环境变量,设置用户名、密码，启用<code>sodo</code>权限；并添加<code>-e</code>选项使用相应的DIB元素。制作镜像操作如下：</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">export DIB_DEV_USER_USERNAME=ipa \</span><br><span class="line">export DIB_DEV_USER_PWDLESS_SUDO=yes \</span><br><span class="line">export DIB_DEV_USER_PASSWORD=&#x27;123&#x27;</span><br><span class="line">ironic-python-agent-builder -o my-ssh-ubuntu-ipa -e selinux-permissive -e devuser ubuntu</span><br></pre></td></tr></table></figure><ul><li>指定代码仓库</li></ul><p> 初始化对应的环境变量，然后制作镜像：</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">直接从gerrit上<span class="built_in">clone</span>代码</span></span><br><span class="line">DIB_REPOLOCATION_ironic_python_agent=https://opendev.org/openstack/ironic-python-agent</span><br><span class="line">DIB_REPOREF_ironic_python_agent=stable/2023.1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">指定本地仓库及分支</span></span><br><span class="line">DIB_REPOLOCATION_ironic_python_agent=/home/user/path/to/repo</span><br><span class="line">DIB_REPOREF_ironic_python_agent=my-test-branch</span><br><span class="line"></span><br><span class="line">ironic-python-agent-builder ubuntu</span><br></pre></td></tr></table></figure><p> 参考：<a href="https://docs.openstack.org/diskimage-builder/latest/elements/source-repositories/README.html">source-repositories</a>。</p></li><li><p>注意</p><p> 原生的openstack里的pxe配置文件的模版不支持arm64架构，需要自己对原生openstack代码进行修改：<br> 在W版中，社区的ironic仍然不支持arm64位的uefi pxe启动，表现为生成的grub.cfg文件(一般位于&#x2F;tftpboot&#x2F;下)格式不对而导致pxe启动失败。</p><p> 生成的错误配置文件：</p><p> <img src="/../../img/install/ironic-err.png" alt="ironic-err"></p><p> 如上图所示，arm架构里寻找vmlinux和ramdisk镜像的命令分别是linux和initrd，上图所示的标红命令是x86架构下的uefi pxe启动。</p><p> 需要用户对生成grub.cfg的代码逻辑自行修改。</p><p> ironic向ipa发送查询命令执行状态请求的tls报错：</p><p> 当前版本的ipa和ironic默认都会开启tls认证的方式向对方发送请求，跟据官网的说明进行关闭即可。</p><ul><li>修改ironic配置文件(&#x2F;etc&#x2F;ironic&#x2F;ironic.conf)下面的配置中添加ipa-insecure&#x3D;1：</li></ul> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[agent]</span></span><br><span class="line"><span class="attr">verify_ca</span> = <span class="literal">False</span></span><br><span class="line"><span class="section">[pxe]</span></span><br><span class="line"><span class="attr">pxe_append_params</span> = nofb nomodeset vga=normal coreos.autologin ipa-insecure=<span class="number">1</span></span><br></pre></td></tr></table></figure><ul><li>ramdisk镜像中添加ipa配置文件&#x2F;etc&#x2F;ironic_python_agent&#x2F;ironic_python_agent.conf并配置tls的配置如下：</li></ul><p> &#x2F;etc&#x2F;ironic_python_agent&#x2F;ironic_python_agent.conf (需要提前创建&#x2F;etc&#x2F;    ironic_python_agent目录）</p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">enable_auto_tls</span> = <span class="literal">False</span></span><br></pre></td></tr></table></figure><p> 设置权限：</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R ipa.ipa /etc/ironic_python_agent/</span><br></pre></td></tr></table></figure><ul><li>ramdisk镜像中修改ipa服务的服务启动文件，添加配置文件选项</li></ul><p> 编辑&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;ironic-python-agent.service文件</p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=Ironic Python Agent</span><br><span class="line"><span class="attr">After</span>=network-<span class="literal">on</span>line.target</span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">ExecStartPre</span>=/sbin/modprobe vfat</span><br><span class="line"><span class="attr">ExecStart</span>=/usr/local/bin/ironic-python-agent --config-file /etc/    ironic_python_agent/ironic_python_agent.conf</span><br><span class="line"><span class="attr">Restart</span>=always</span><br><span class="line"><span class="attr">RestartSec</span>=<span class="number">30</span>s</span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure></li></ol><h4 id="Trove"><a href="#Trove" class="headerlink" title="Trove"></a>Trove</h4><p>Trove是OpenStack的数据库服务，如果用户使用OpenStack提供的数据库服务则推荐使用该组件。否则，可以不用安装。</p><p><strong>Controller节点</strong></p><ol><li><p>创建数据库。</p><p> 数据库服务在数据库中存储信息，创建一个trove用户可以访问的trove数据库，替换TROVE_DBPASS为合适的密码。</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE trove <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> trove.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;trove&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;TROVE_DBPASS&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> trove.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;trove&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;TROVE_DBPASS&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>创建服务凭证以及API端点。</p><p> 创建服务凭证。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建trove用户</span></span><br><span class="line">openstack user create --domain default --password-prompt trove</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加admin角色</span></span><br><span class="line">openstack role add --project service --user trove admin</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建database服务</span></span><br><span class="line">openstack service create --name trove --description &quot;Database service&quot; database</span><br></pre></td></tr></table></figure><p> 创建API端点。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">openstack endpoint create --region RegionOne database public http://controller:8779/v1.0/%\(tenant_id\)s</span><br><span class="line">openstack endpoint create --region RegionOne database internal http://controller:8779/v1.0/%\(tenant_id\)s</span><br><span class="line">openstack endpoint create --region RegionOne database admin http://controller:8779/v1.0/%\(tenant_id\)s</span><br></pre></td></tr></table></figure></li><li><p>安装Trove。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install openstack-trove python-troveclient</span><br></pre></td></tr></table></figure></li><li><p>修改配置文件。</p><p> 编辑&#x2F;etc&#x2F;trove&#x2F;trove.conf。</p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">bind_host</span>=<span class="number">192.168</span>.<span class="number">0.2</span></span><br><span class="line"><span class="attr">log_dir</span> = /var/log/trove</span><br><span class="line"><span class="attr">network_driver</span> = trove.network.neutron.NeutronDriver</span><br><span class="line"><span class="attr">network_label_regex</span>=.*</span><br><span class="line"><span class="attr">management_security_groups</span> = &lt;manage security group&gt;</span><br><span class="line"><span class="attr">nova_keypair</span> = trove-mgmt</span><br><span class="line"><span class="attr">default_datastore</span> = mysql</span><br><span class="line"><span class="attr">taskmanager_manager</span> = trove.taskmanager.manager.Manager</span><br><span class="line"><span class="attr">trove_api_workers</span> = <span class="number">5</span></span><br><span class="line"><span class="attr">transport_url</span> = rabbit://openstack:RABBIT_PASS@controller:<span class="number">5672</span>/</span><br><span class="line"><span class="attr">reboot_time_out</span> = <span class="number">300</span></span><br><span class="line"><span class="attr">usage_timeout</span> = <span class="number">900</span></span><br><span class="line"><span class="attr">agent_call_high_timeout</span> = <span class="number">1200</span></span><br><span class="line"><span class="attr">use_syslog</span> = <span class="literal">False</span></span><br><span class="line"><span class="attr">debug</span> = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="section">[database]</span></span><br><span class="line"><span class="attr">connection</span> = mysql+pymysql://trove:TROVE_DBPASS@controller/trove</span><br><span class="line"></span><br><span class="line"><span class="section">[keystone_authtoken]</span></span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span>/v3/</span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">project_domain_name</span> = Default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">user_domain_name</span> = Default</span><br><span class="line"><span class="attr">password</span> = trove</span><br><span class="line"><span class="attr">username</span> = TROVE_PASS</span><br><span class="line"></span><br><span class="line"><span class="section">[service_credentials]</span></span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span>/v3/</span><br><span class="line"><span class="attr">region_name</span> = RegionOne</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">project_domain_name</span> = Default</span><br><span class="line"><span class="attr">user_domain_name</span> = Default</span><br><span class="line"><span class="attr">username</span> = trove</span><br><span class="line"><span class="attr">password</span> = TROVE_PASS</span><br><span class="line"></span><br><span class="line"><span class="section">[mariadb]</span></span><br><span class="line"><span class="attr">tcp_ports</span> = <span class="number">3306</span>,<span class="number">4444</span>,<span class="number">4567</span>,<span class="number">4568</span></span><br><span class="line"></span><br><span class="line"><span class="section">[mysql]</span></span><br><span class="line"><span class="attr">tcp_ports</span> = <span class="number">3306</span></span><br><span class="line"></span><br><span class="line"><span class="section">[postgresql]</span></span><br><span class="line"><span class="attr">tcp_ports</span> = <span class="number">5432</span></span><br></pre></td></tr></table></figure><p> <strong>解释：</strong></p><blockquote><p><code>[Default]</code>分组中<code>bind_host</code>配置为Trove控制节点的IP。<br><code>transport_url</code> 为<code>RabbitMQ</code>连接信息，<code>RABBIT_PASS</code>替换为RabbitMQ的密码。<br><code>[database]</code>分组中的<code>connection</code> 为前面在mysql中为Trove创建的数据库信息。<br>Trove的用户信息中<code>TROVE_PASSWORD</code>替换为实际trove用户的密码。</p></blockquote><p> 编辑&#x2F;etc&#x2F;trove&#x2F;trove-guestagent.conf。</p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">log_file</span> = trove-guestagent.log</span><br><span class="line"><span class="attr">log_dir</span> = /var/log/trove/</span><br><span class="line"><span class="attr">ignore_users</span> = os_admin</span><br><span class="line"><span class="attr">control_exchange</span> = trove</span><br><span class="line"><span class="attr">transport_url</span> = rabbit://openstack:RABBIT_PASS@controller:<span class="number">5672</span>/</span><br><span class="line"><span class="attr">rpc_backend</span> = rabbit</span><br><span class="line"><span class="attr">command_process_timeout</span> = <span class="number">60</span></span><br><span class="line"><span class="attr">use_syslog</span> = <span class="literal">False</span></span><br><span class="line"><span class="attr">debug</span> = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="section">[service_credentials]</span></span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span>/v3/</span><br><span class="line"><span class="attr">region_name</span> = RegionOne</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">password</span> = TROVE_PASS</span><br><span class="line"><span class="attr">project_domain_name</span> = Default</span><br><span class="line"><span class="attr">user_domain_name</span> = Default</span><br><span class="line"><span class="attr">username</span> = trove</span><br><span class="line"></span><br><span class="line"><span class="section">[mysql]</span></span><br><span class="line"><span class="attr">docker_image</span> = your-registry/your-repo/mysql</span><br><span class="line"><span class="attr">backup_docker_image</span> = your-registry/your-repo/db-backup-mysql:<span class="number">1.1</span>.<span class="number">0</span></span><br></pre></td></tr></table></figure><p> <strong>解释：</strong> </p><blockquote><p><code>guestagent</code>是trove中一个独立组件，需要预先内置到Trove通过Nova创建的虚拟机镜像中，在创建好数据库实例后，会起guestagent进程，负责通过消息队列（RabbitMQ）向Trove上报心跳，因此需要配置RabbitMQ的用户和密码信息。<br><code>transport_url</code> 为<code>RabbitMQ</code>连接信息，<code>RABBIT_PASS</code>替换为RabbitMQ的密码。<br>Trove的用户信息中<code>TROVE_PASSWORD</code>替换为实际trove用户的密码。<br>从Victoria版开始，Trove使用一个统一的镜像来跑不同类型的数据库，数据库服务运行在Guest虚拟机的Docker容器中。</p></blockquote></li><li><p>数据库同步。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su -s /bin/sh -c &quot;trove-manage db_sync&quot; trove</span><br></pre></td></tr></table></figure></li><li><p>完成安装。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置服务自启</span></span><br><span class="line">systemctl enable openstack-trove-api.service openstack-trove-taskmanager.service \ </span><br><span class="line">openstack-trove-conductor.service</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动服务</span></span><br><span class="line">systemctl start openstack-trove-api.service openstack-trove-taskmanager.service \ </span><br><span class="line">openstack-trove-conductor.service</span><br></pre></td></tr></table></figure></li></ol><h4 id="Swift"><a href="#Swift" class="headerlink" title="Swift"></a>Swift</h4><p>Swift 提供了弹性可伸缩、高可用的分布式对象存储服务，适合存储大规模非结构化数据。</p><p><strong>Controller节点</strong></p><ol><li><p>创建服务凭证以及API端点。</p><p> 创建服务凭证。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建swift用户</span></span><br><span class="line">openstack user create --domain default --password-prompt swift</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加admin角色</span></span><br><span class="line">openstack role add --project service --user swift admin</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建对象存储服务</span></span><br><span class="line">openstack service create --name swift --description &quot;OpenStack Object Storage&quot; object-store</span><br></pre></td></tr></table></figure><p> 创建API端点。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">openstack endpoint create --region RegionOne object-store public http://controller:8080/v1/AUTH_%\(project_id\)s</span><br><span class="line">openstack endpoint create --region RegionOne object-store internal http://controller:8080/v1/AUTH_%\(project_id\)s</span><br><span class="line">openstack endpoint create --region RegionOne object-store admin http://controller:8080/v1 </span><br></pre></td></tr></table></figure></li><li><p>安装Swift。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dnf install openstack-swift-proxy python3-swiftclient python3-keystoneclient \ </span><br><span class="line">python3-keystonemiddleware memcached</span><br></pre></td></tr></table></figure></li><li><p>配置proxy-server。</p><p> Swift RPM包里已经包含了一个基本可用的proxy-server.conf，只需要手动修改其中的ip和SWIFT_PASS即可。</p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/swift/proxy-server.conf</span><br><span class="line"></span><br><span class="line"><span class="section">[filter:authtoken]</span></span><br><span class="line"><span class="attr">paste.filter_factory</span> = keystonemiddleware.auth_token:filter_factory</span><br><span class="line"><span class="attr">www_authenticate_uri</span> = http://controller:<span class="number">5000</span></span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span></span><br><span class="line"><span class="attr">memcached_servers</span> = controller:<span class="number">11211</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">project_domain_id</span> = default</span><br><span class="line"><span class="attr">user_domain_id</span> = default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">username</span> = swift</span><br><span class="line"><span class="attr">password</span> = SWIFT_PASS</span><br><span class="line"><span class="attr">delay_auth_decision</span> = <span class="literal">True</span></span><br><span class="line"><span class="attr">service_token_roles_required</span> = <span class="literal">True</span></span><br></pre></td></tr></table></figure></li></ol><p><strong>Storage节点</strong></p><ol><li><p>安装支持的程序包。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dnf install openstack-swift-account openstack-swift-container openstack-swift-object</span><br><span class="line">dnf install xfsprogs rsync</span><br></pre></td></tr></table></figure></li><li><p>将设备&#x2F;dev&#x2F;sdb和&#x2F;dev&#x2F;sdc格式化为XFS。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkfs.xfs /dev/sdb</span><br><span class="line">mkfs.xfs /dev/sdc</span><br></pre></td></tr></table></figure></li><li><p>创建挂载点目录结构。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /srv/node/sdb</span><br><span class="line">mkdir -p /srv/node/sdc</span><br></pre></td></tr></table></figure></li><li><p>找到新分区的UUID。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">blkid</span><br></pre></td></tr></table></figure></li><li><p>编辑&#x2F;etc&#x2F;fstab文件并将以下内容添加到其中。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">UUID=&quot;&lt;UUID-from-output-above&gt;&quot; /srv/node/sdb xfs noatime 0 2</span><br><span class="line">UUID=&quot;&lt;UUID-from-output-above&gt;&quot; /srv/node/sdc xfs noatime 0 2</span><br></pre></td></tr></table></figure></li><li><p>挂载设备。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mount /srv/node/sdb</span><br><span class="line">mount /srv/node/sdc</span><br></pre></td></tr></table></figure><p> <em><strong>注意</strong></em></p><p> <strong>如果用户不需要容灾功能，以上步骤只需要创建一个设备即可，同时可以跳过下面的rsync配置。</strong></p></li><li><p>（可选）创建或编辑&#x2F;etc&#x2F;rsyncd.conf文件以包含以下内容:</p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">uid</span> = swift</span><br><span class="line"><span class="attr">gid</span> = swift</span><br><span class="line">log <span class="attr">file</span> = /var/log/rsyncd.log</span><br><span class="line">pid <span class="attr">file</span> = /var/run/rsyncd.pid</span><br><span class="line"><span class="attr">address</span> = MANAGEMENT_INTERFACE_IP_ADDRESS</span><br><span class="line"></span><br><span class="line"><span class="section">[account]</span></span><br><span class="line">max <span class="attr">connections</span> = <span class="number">2</span></span><br><span class="line"><span class="attr">path</span> = /srv/node/</span><br><span class="line">read <span class="attr">only</span> = <span class="literal">False</span></span><br><span class="line">lock <span class="attr">file</span> = /var/lock/account.lock</span><br><span class="line"></span><br><span class="line"><span class="section">[container]</span></span><br><span class="line">max <span class="attr">connections</span> = <span class="number">2</span></span><br><span class="line"><span class="attr">path</span> = /srv/node/</span><br><span class="line">read <span class="attr">only</span> = <span class="literal">False</span></span><br><span class="line">lock <span class="attr">file</span> = /var/lock/container.lock</span><br><span class="line"></span><br><span class="line"><span class="section">[object]</span></span><br><span class="line">max <span class="attr">connections</span> = <span class="number">2</span></span><br><span class="line"><span class="attr">path</span> = /srv/node/</span><br><span class="line">read <span class="attr">only</span> = <span class="literal">False</span></span><br><span class="line">lock <span class="attr">file</span> = /var/lock/object.lock</span><br></pre></td></tr></table></figure><p> <strong>替换MANAGEMENT_INTERFACE_IP_ADDRESS为存储节点上管理网络的IP地址</strong></p><p> 启动rsyncd服务并配置它在系统启动时启动:</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable rsyncd.service</span><br><span class="line">systemctl start rsyncd.service</span><br></pre></td></tr></table></figure></li><li><p>配置存储节点。</p><p> 编辑&#x2F;etc&#x2F;swift目录的account-server.conf、container-server.conf和object-server.conf文件，替换bind_ip为存储节点上管理网络的IP地址。</p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">bind_ip</span> = <span class="number">192.168</span>.<span class="number">0.4</span></span><br></pre></td></tr></table></figure><p> 确保挂载点目录结构的正确所有权。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R swift:swift /srv/node</span><br></pre></td></tr></table></figure><p> 创建recon目录并确保其拥有正确的所有权。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /var/cache/swift</span><br><span class="line">chown -R root:swift /var/cache/swift</span><br><span class="line">chmod -R 775 /var/cache/swift</span><br></pre></td></tr></table></figure></li></ol><p><strong>Controller节点创建并分发环</strong></p><ol><li><p>创建账号环。</p><p> 切换到<code>/etc/swift</code>目录。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/swift</span><br></pre></td></tr></table></figure><p> 创建基础<code>account.builder</code>文件。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swift-ring-builder account.builder create 10 1 1</span><br></pre></td></tr></table></figure><p> 将每个存储节点添加到环中。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">swift-ring-builder account.builder add --region 1 --zone 1 \</span><br><span class="line">--ip STORAGE_NODE_MANAGEMENT_INTERFACE_IP_ADDRESS \ </span><br><span class="line">--port 6202  --device DEVICE_NAME \ </span><br><span class="line">--weight 100</span><br></pre></td></tr></table></figure><blockquote><p>替换STORAGE_NODE_MANAGEMENT_INTERFACE_IP_ADDRESS为存储节点上管理网络的IP地址。<br>替换DEVICE_NAME为同一存储节点上的存储设备名称。</p></blockquote><p> <em><strong>注意</strong></em></p><p> <strong>对每个存储节点上的每个存储设备重复此命令</strong></p><p> 验证账号环内容。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swift-ring-builder account.builder</span><br></pre></td></tr></table></figure><p> 重新平衡账号环。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swift-ring-builder account.builder rebalance</span><br></pre></td></tr></table></figure></li><li><p>创建容器环。</p><p> 切换到<code>/etc/swift</code>目录。</p><p> 创建基础<code>container.builder</code>文件。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swift-ring-builder container.builder create 10 1 1</span><br></pre></td></tr></table></figure><p> 将每个存储节点添加到环中。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">swift-ring-builder container.builder add --region 1 --zone 1 \</span><br><span class="line">--ip STORAGE_NODE_MANAGEMENT_INTERFACE_IP_ADDRESS </span><br><span class="line">--port 6201 --device DEVICE_NAME \</span><br><span class="line">--weight 100</span><br></pre></td></tr></table></figure><blockquote><p>替换STORAGE_NODE_MANAGEMENT_INTERFACE_IP_ADDRESS为存储节点上管理网络的IP地址。<br>替换DEVICE_NAME为同一存储节点上的存储设备名称。</p></blockquote><p> <em><strong>注意</strong></em></p><p> <strong>对每个存储节点上的每个存储设备重复此命令</strong></p><p> 验证容器环内容。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swift-ring-builder container.builder</span><br></pre></td></tr></table></figure><p> 重新平衡容器环。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swift-ring-builder container.builder rebalance</span><br></pre></td></tr></table></figure></li><li><p>创建对象环。</p><p> 切换到<code>/etc/swift</code>目录。</p><p> 创建基础<code>object.builder</code>文件。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swift-ring-builder object.builder create 10 1 1</span><br></pre></td></tr></table></figure><p> 将每个存储节点添加到环中。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">swift-ring-builder object.builder add --region 1 --zone 1 \</span><br><span class="line">--ip STORAGE_NODE_MANAGEMENT_INTERFACE_IP_ADDRESS \</span><br><span class="line">--port 6200 --device DEVICE_NAME \</span><br><span class="line">--weight 100</span><br></pre></td></tr></table></figure><blockquote><p>替换STORAGE_NODE_MANAGEMENT_INTERFACE_IP_ADDRESS为存储节点上管理网络的IP地址。<br>替换DEVICE_NAME为同一存储节点上的存储设备名称。</p></blockquote><p> <em><strong>注意</strong></em></p><p> <strong>对每个存储节点上的每个存储设备重复此命令</strong></p><p> 验证对象环内容。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swift-ring-builder object.builder</span><br></pre></td></tr></table></figure><p> 重新平衡对象环。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swift-ring-builder object.builder rebalance</span><br></pre></td></tr></table></figure></li><li><p>分发环配置文件。</p><p> 将<code>account.ring.gz</code>，<code>container.ring.gz</code>以及 <code>object.ring.gz</code>文件复制到每个存储节点和运行代理服务的任何其他节点上的<code>/etc/swift</code>目录。</p></li><li><p>编辑配置文件&#x2F;etc&#x2F;swift&#x2F;swift.conf。</p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[swift-hash]</span></span><br><span class="line"><span class="attr">swift_hash_path_suffix</span> = test-hash</span><br><span class="line"><span class="attr">swift_hash_path_prefix</span> = test-hash</span><br><span class="line"></span><br><span class="line"><span class="section">[storage-policy:0]</span></span><br><span class="line"><span class="attr">name</span> = Policy-<span class="number">0</span></span><br><span class="line"><span class="attr">default</span> = <span class="literal">yes</span></span><br></pre></td></tr></table></figure><p> <strong>用唯一值替换 test-hash</strong></p><p> 将swift.conf文件复制到&#x2F;etc&#x2F;swift每个存储节点和运行代理服务的任何其他节点上的目录。</p><p> 在所有节点上，确保配置目录的正确所有权。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R root:swift /etc/swift</span><br></pre></td></tr></table></figure></li><li><p>完成安装</p><p> 在控制节点和运行代理服务的任何其他节点上，启动对象存储代理服务及其依赖项，并将它们配置为在系统启动时启动。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable openstack-swift-proxy.service memcached.service</span><br><span class="line">systemctl start openstack-swift-proxy.service memcached.service</span><br></pre></td></tr></table></figure><p> 在存储节点上，启动对象存储服务并将它们配置为在系统启动时启动。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable openstack-swift-account.service \</span><br><span class="line">openstack-swift-account-auditor.service \</span><br><span class="line">openstack-swift-account-reaper.service \</span><br><span class="line">openstack-swift-account-replicator.service \</span><br><span class="line">openstack-swift-container.service \</span><br><span class="line">openstack-swift-container-auditor.service \</span><br><span class="line">openstack-swift-container-replicator.service \</span><br><span class="line">openstack-swift-container-updater.service \</span><br><span class="line">openstack-swift-object.service \</span><br><span class="line">openstack-swift-object-auditor.service \</span><br><span class="line">openstack-swift-object-replicator.service \</span><br><span class="line">openstack-swift-object-updater.service</span><br><span class="line"></span><br><span class="line">systemctl start openstack-swift-account.service \</span><br><span class="line">openstack-swift-account-auditor.service \</span><br><span class="line">openstack-swift-account-reaper.service \</span><br><span class="line">openstack-swift-account-replicator.service \</span><br><span class="line">openstack-swift-container.service \</span><br><span class="line">openstack-swift-container-auditor.service \</span><br><span class="line">openstack-swift-container-replicator.service \</span><br><span class="line">openstack-swift-container-updater.service \</span><br><span class="line">openstack-swift-object.service \</span><br><span class="line">openstack-swift-object-auditor.service \</span><br><span class="line">openstack-swift-object-replicator.service \</span><br><span class="line">openstack-swift-object-updater.service</span><br></pre></td></tr></table></figure></li></ol><h4 id="Cyborg"><a href="#Cyborg" class="headerlink" title="Cyborg"></a>Cyborg</h4><p>Cyborg为OpenStack提供加速器设备的支持，包括 GPU, FPGA, ASIC, NP, SoCs, NVMe&#x2F;NOF SSDs, ODP, DPDK&#x2F;SPDK等等。</p><p><strong>Controller节点</strong></p><ol><li><p>初始化对应数据库</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql <span class="operator">-</span>u root <span class="operator">-</span>p</span><br><span class="line"></span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">CREATE</span> DATABASE cyborg;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> cyborg.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;cyborg&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;CYBORG_DBPASS&#x27;</span>;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> cyborg.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;cyborg&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;CYBORG_DBPASS&#x27;</span>;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> exit;</span><br></pre></td></tr></table></figure></li><li><p>创建用户和服务，并记住创建cybory用户时输入的密码，用于配置CYBORG_PASS</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">source ~/.admin-openrc</span><br><span class="line">openstack user create --domain default --password-prompt cyborg</span><br><span class="line">openstack role add --project service --user cyborg admin</span><br><span class="line">openstack service create --name cyborg --description &quot;Acceleration Service&quot; accelerator</span><br></pre></td></tr></table></figure></li><li><p>使用uwsgi部署Cyborg api服务</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">openstack endpoint create --region RegionOne accelerator public http://controller/accelerator/v2</span><br><span class="line">openstack endpoint create --region RegionOne accelerator internal http://controller/accelerator/v2</span><br><span class="line">openstack endpoint create --region RegionOne accelerator admin http://controller/accelerator/v2</span><br></pre></td></tr></table></figure></li><li><p>安装Cyborg</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install openstack-cyborg</span><br></pre></td></tr></table></figure></li><li><p>配置Cyborg</p><p> 修改<code>/etc/cyborg/cyborg.conf</code></p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">transport_url</span> = rabbit://openstack:RABBIT_PASS@controller:<span class="number">5672</span>/</span><br><span class="line"><span class="attr">use_syslog</span> = <span class="literal">False</span></span><br><span class="line"><span class="attr">state_path</span> = /var/lib/cyborg</span><br><span class="line"><span class="attr">debug</span> = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="section">[api]</span></span><br><span class="line"><span class="attr">host_ip</span> = <span class="number">0.0</span>.<span class="number">0.0</span></span><br><span class="line"></span><br><span class="line"><span class="section">[database]</span></span><br><span class="line"><span class="attr">connection</span> = mysql+pymysql://cyborg:CYBORG_DBPASS@controller/cyborg</span><br><span class="line"></span><br><span class="line"><span class="section">[service_catalog]</span></span><br><span class="line"><span class="attr">cafile</span> = /opt/stack/data/ca-bundle.pem</span><br><span class="line"><span class="attr">project_domain_id</span> = default</span><br><span class="line"><span class="attr">user_domain_id</span> = default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">password</span> = CYBORG_PASS</span><br><span class="line"><span class="attr">username</span> = cyborg</span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span>/v3/</span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"></span><br><span class="line"><span class="section">[placement]</span></span><br><span class="line"><span class="attr">project_domain_name</span> = Default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">user_domain_name</span> = Default</span><br><span class="line"><span class="attr">password</span> = password</span><br><span class="line"><span class="attr">username</span> = PLACEMENT_PASS</span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span>/v3/</span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">auth_section</span> = keystone_authtoken</span><br><span class="line"></span><br><span class="line"><span class="section">[nova]</span></span><br><span class="line"><span class="attr">project_domain_name</span> = Default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">user_domain_name</span> = Default</span><br><span class="line"><span class="attr">password</span> = NOVA_PASS</span><br><span class="line"><span class="attr">username</span> = nova</span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span>/v3/</span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">auth_section</span> = keystone_authtoken</span><br><span class="line"></span><br><span class="line"><span class="section">[keystone_authtoken]</span></span><br><span class="line"><span class="attr">memcached_servers</span> = localhost:<span class="number">11211</span></span><br><span class="line"><span class="attr">signing_dir</span> = /var/cache/cyborg/api</span><br><span class="line"><span class="attr">cafile</span> = /opt/stack/data/ca-bundle.pem</span><br><span class="line"><span class="attr">project_domain_name</span> = Default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">user_domain_name</span> = Default</span><br><span class="line"><span class="attr">password</span> = CYBORG_PASS</span><br><span class="line"><span class="attr">username</span> = cyborg</span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span>/v3/</span><br><span class="line"><span class="attr">auth_type</span> = password</span><br></pre></td></tr></table></figure></li><li><p>同步数据库表格</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cyborg-dbsync --config-file /etc/cyborg/cyborg.conf upgrade</span><br></pre></td></tr></table></figure></li><li><p>启动Cyborg服务</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable openstack-cyborg-api openstack-cyborg-conductor openstack-cyborg-agent</span><br><span class="line">systemctl start openstack-cyborg-api openstack-cyborg-conductor openstack-cyborg-agent</span><br></pre></td></tr></table></figure></li></ol><h4 id="Aodh"><a href="#Aodh" class="headerlink" title="Aodh"></a>Aodh</h4><p>Aodh可以根据由Ceilometer或者Gnocchi收集的监控数据创建告警，并设置触发规则。</p><p><strong>Controller节点</strong></p><ol><li><p>创建数据库。</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE aodh;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> aodh.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;aodh&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;AODH_DBPASS&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> aodh.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;aodh&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;AODH_DBPASS&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>创建服务凭证以及API端点。</p><p> 创建服务凭证。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">openstack user create --domain default --password-prompt aodh</span><br><span class="line">openstack role add --project service --user aodh admin</span><br><span class="line">openstack service create --name aodh --description &quot;Telemetry&quot; alarming</span><br></pre></td></tr></table></figure><p> 创建API端点。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">openstack endpoint create --region RegionOne alarming public http://controller:8042</span><br><span class="line">openstack endpoint create --region RegionOne alarming internal http://controller:8042</span><br><span class="line">openstack endpoint create --region RegionOne alarming admin http://controller:8042</span><br></pre></td></tr></table></figure></li><li><p>安装Aodh。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dnf install openstack-aodh-api openstack-aodh-evaluator \</span><br><span class="line">openstack-aodh-notifier openstack-aodh-listener \</span><br><span class="line">openstack-aodh-expirer python3-aodhclient</span><br></pre></td></tr></table></figure></li><li><p>修改配置文件。</p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/aodh/aodh.conf</span><br><span class="line"></span><br><span class="line"><span class="section">[database]</span></span><br><span class="line"><span class="attr">connection</span> = mysql+pymysql://aodh:AODH_DBPASS@controller/aodh</span><br><span class="line"></span><br><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">transport_url</span> = rabbit://openstack:RABBIT_PASS@controller</span><br><span class="line"><span class="attr">auth_strategy</span> = keystone</span><br><span class="line"></span><br><span class="line"><span class="section">[keystone_authtoken]</span></span><br><span class="line"><span class="attr">www_authenticate_uri</span> = http://controller:<span class="number">5000</span></span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span></span><br><span class="line"><span class="attr">memcached_servers</span> = controller:<span class="number">11211</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">project_domain_id</span> = default</span><br><span class="line"><span class="attr">user_domain_id</span> = default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">username</span> = aodh</span><br><span class="line"><span class="attr">password</span> = AODH_PASS</span><br><span class="line"></span><br><span class="line"><span class="section">[service_credentials]</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span>/v3</span><br><span class="line"><span class="attr">project_domain_id</span> = default</span><br><span class="line"><span class="attr">user_domain_id</span> = default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">username</span> = aodh</span><br><span class="line"><span class="attr">password</span> = AODH_PASS</span><br><span class="line"><span class="attr">interface</span> = internalURL</span><br><span class="line"><span class="attr">region_name</span> = RegionOne</span><br></pre></td></tr></table></figure></li><li><p>同步数据库。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aodh-dbsync</span><br></pre></td></tr></table></figure></li><li><p>完成安装。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置服务自启</span></span><br><span class="line">systemctl enable openstack-aodh-api.service openstack-aodh-evaluator.service \</span><br><span class="line">openstack-aodh-notifier.service openstack-aodh-listener.service</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动服务</span></span><br><span class="line">systemctl start openstack-aodh-api.service openstack-aodh-evaluator.service \</span><br><span class="line">openstack-aodh-notifier.service openstack-aodh-listener.service</span><br></pre></td></tr></table></figure></li></ol><h4 id="Gnocchi"><a href="#Gnocchi" class="headerlink" title="Gnocchi"></a>Gnocchi</h4><p>Gnocchi是一个开源的时间序列数据库，可以对接Ceilometer。</p><p><strong>Controller节点</strong></p><ol><li><p>创建数据库。</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DATABASE gnocchi;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> gnocchi.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;gnocchi&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;GNOCCHI_DBPASS&#x27;</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> gnocchi.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;gnocchi&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;GNOCCHI_DBPASS&#x27;</span>;</span><br></pre></td></tr></table></figure></li><li><p>创建服务凭证以及API端点。</p><p> 创建服务凭证。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">openstack user create --domain default --password-prompt gnocchi</span><br><span class="line">openstack role add --project service --user gnocchi admin</span><br><span class="line">openstack service create --name gnocchi --description &quot;Metric Service&quot; metric</span><br></pre></td></tr></table></figure><p> 创建API端点。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">openstack endpoint create --region RegionOne metric public http://controller:8041</span><br><span class="line">openstack endpoint create --region RegionOne metric internal http://controller:8041</span><br><span class="line">openstack endpoint create --region RegionOne metric admin http://controller:8041</span><br></pre></td></tr></table></figure></li><li><p>安装Gnocchi。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install openstack-gnocchi-api openstack-gnocchi-metricd python3-gnocchiclient</span><br></pre></td></tr></table></figure></li><li><p>修改配置文件。</p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/gnocchi/gnocchi.conf</span><br><span class="line"><span class="section">[api]</span></span><br><span class="line"><span class="attr">auth_mode</span> = keystone</span><br><span class="line"><span class="attr">port</span> = <span class="number">8041</span></span><br><span class="line"><span class="attr">uwsgi_mode</span> = http-socket</span><br><span class="line"></span><br><span class="line"><span class="section">[keystone_authtoken]</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span>/v3</span><br><span class="line"><span class="attr">project_domain_name</span> = Default</span><br><span class="line"><span class="attr">user_domain_name</span> = Default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">username</span> = gnocchi</span><br><span class="line"><span class="attr">password</span> = GNOCCHI_PASS</span><br><span class="line"><span class="attr">interface</span> = internalURL</span><br><span class="line"><span class="attr">region_name</span> = RegionOne</span><br><span class="line"></span><br><span class="line"><span class="section">[indexer]</span></span><br><span class="line"><span class="attr">url</span> = mysql+pymysql://gnocchi:GNOCCHI_DBPASS@controller/gnocchi</span><br><span class="line"></span><br><span class="line"><span class="section">[storage]</span></span><br><span class="line"><span class="comment"># coordination_url is not required but specifying one will improve</span></span><br><span class="line"><span class="comment"># performance with better workload division across workers.</span></span><br><span class="line"><span class="comment"># coordination_url = redis://controller:6379</span></span><br><span class="line"><span class="attr">file_basepath</span> = /var/lib/gnocchi</span><br><span class="line"><span class="attr">driver</span> = file</span><br></pre></td></tr></table></figure></li><li><p>同步数据库。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gnocchi-upgrade</span><br></pre></td></tr></table></figure></li><li><p>完成安装。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置服务自启</span></span><br><span class="line">systemctl enable openstack-gnocchi-api.service openstack-gnocchi-metricd.service</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动服务</span></span><br><span class="line">systemctl start openstack-gnocchi-api.service openstack-gnocchi-metricd.service</span><br></pre></td></tr></table></figure></li></ol><h4 id="Ceilometer"><a href="#Ceilometer" class="headerlink" title="Ceilometer"></a>Ceilometer</h4><p>Ceilometer是OpenStack中负责数据收集的服务。</p><p><strong>Controller节点</strong></p><ol><li><p>创建服务凭证。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">openstack user create --domain default --password-prompt ceilometer</span><br><span class="line">openstack role add --project service --user ceilometer admin</span><br><span class="line">openstack service create --name ceilometer --description &quot;Telemetry&quot; metering</span><br></pre></td></tr></table></figure></li><li><p>安装Ceilometer软件包。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install openstack-ceilometer-notification openstack-ceilometer-central</span><br></pre></td></tr></table></figure></li><li><p>编辑配置文件&#x2F;etc&#x2F;ceilometer&#x2F;pipeline.yaml。 </p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">publishers:</span></span><br><span class="line">    <span class="comment"># set address of Gnocchi</span></span><br><span class="line">    <span class="comment"># + filter out Gnocchi-related activity meters (Swift driver)</span></span><br><span class="line">    <span class="comment"># + set default archive policy</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">gnocchi://?filter_project=service&amp;archive_policy=low</span></span><br></pre></td></tr></table></figure></li><li><p>编辑配置文件&#x2F;etc&#x2F;ceilometer&#x2F;ceilometer.conf。</p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">transport_url</span> = rabbit://openstack:RABBIT_PASS@controller</span><br><span class="line"></span><br><span class="line"><span class="section">[service_credentials]</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span>/v3</span><br><span class="line"><span class="attr">project_domain_id</span> = default</span><br><span class="line"><span class="attr">user_domain_id</span> = default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">username</span> = ceilometer</span><br><span class="line"><span class="attr">password</span> = CEILOMETER_PASS</span><br><span class="line"><span class="attr">interface</span> = internalURL</span><br><span class="line"><span class="attr">region_name</span> = RegionOne</span><br></pre></td></tr></table></figure></li><li><p>数据库同步。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ceilometer-upgrade</span><br></pre></td></tr></table></figure></li><li><p>完成控制节点Ceilometer安装。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置服务自启</span></span><br><span class="line">systemctl enable openstack-ceilometer-notification.service openstack-ceilometer-central.service</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动服务</span></span><br><span class="line">systemctl start openstack-ceilometer-notification.service openstack-ceilometer-central.service</span><br></pre></td></tr></table></figure></li></ol><p><strong>Compute节点</strong></p><ol><li><p>安装Ceilometer软件包。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dnf install openstack-ceilometer-compute</span><br><span class="line">dnf install openstack-ceilometer-ipmi       # 可选</span><br></pre></td></tr></table></figure></li><li><p>编辑配置文件&#x2F;etc&#x2F;ceilometer&#x2F;ceilometer.conf。</p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">transport_url</span> = rabbit://openstack:RABBIT_PASS@controller</span><br><span class="line"></span><br><span class="line"><span class="section">[service_credentials]</span></span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span></span><br><span class="line"><span class="attr">project_domain_id</span> = default</span><br><span class="line"><span class="attr">user_domain_id</span> = default</span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">username</span> = ceilometer</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">password</span> = CEILOMETER_PASS</span><br><span class="line"><span class="attr">interface</span> = internalURL</span><br><span class="line"><span class="attr">region_name</span> = RegionOne</span><br></pre></td></tr></table></figure></li><li><p>编辑配置文件&#x2F;etc&#x2F;nova&#x2F;nova.conf。</p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">instance_usage_audit</span> = <span class="literal">True</span></span><br><span class="line"><span class="attr">instance_usage_audit_period</span> = hour</span><br><span class="line"></span><br><span class="line"><span class="section">[notifications]</span></span><br><span class="line"><span class="attr">notify_on_state_change</span> = vm_and_task_state</span><br><span class="line"></span><br><span class="line"><span class="section">[oslo_messaging_notifications]</span></span><br><span class="line"><span class="attr">driver</span> = messagingv2</span><br></pre></td></tr></table></figure></li><li><p>完成安装。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable openstack-ceilometer-compute.service</span><br><span class="line">systemctl start openstack-ceilometer-compute.service</span><br><span class="line">systemctl enable openstack-ceilometer-ipmi.service         # 可选</span><br><span class="line">systemctl start openstack-ceilometer-ipmi.service          # 可选</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重启nova-compute服务</span></span><br><span class="line">systemctl restart openstack-nova-compute.service</span><br></pre></td></tr></table></figure></li></ol><h4 id="Heat"><a href="#Heat" class="headerlink" title="Heat"></a>Heat</h4><p>Heat是 OpenStack 自动编排服务，基于描述性的模板来编排复合云应用，也称为<code>Orchestration Service</code>。Heat 的各服务一般安装在<code>Controller</code>节点上。</p><p><strong>Controller节点</strong></p><ol><li><p>创建<strong>heat</strong>数据库，并授予<strong>heat</strong>数据库正确的访问权限，替换<strong>HEAT_DBPASS</strong>为合适的密码</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql <span class="operator">-</span>u root <span class="operator">-</span>p</span><br><span class="line"></span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">CREATE</span> DATABASE heat;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> heat.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;heat&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;HEAT_DBPASS&#x27;</span>;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> <span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> heat.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;heat&#x27;</span>@<span class="string">&#x27;%&#x27;</span> IDENTIFIED <span class="keyword">BY</span> <span class="string">&#x27;HEAT_DBPASS&#x27;</span>;</span><br><span class="line">MariaDB [(<span class="keyword">none</span>)]<span class="operator">&gt;</span> exit;</span><br></pre></td></tr></table></figure></li><li><p>创建服务凭证，创建<strong>heat</strong>用户，并为其增加<strong>admin</strong>角色</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">source ~/.admin-openrc</span><br><span class="line"></span><br><span class="line">openstack user create --domain default --password-prompt heat</span><br><span class="line">openstack role add --project service --user heat admin</span><br></pre></td></tr></table></figure></li><li><p>创建<strong>heat</strong>和<strong>heat-cfn</strong>服务及其对应的API端点</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">openstack service create --name heat --description &quot;Orchestration&quot; orchestration</span><br><span class="line">openstack service create --name heat-cfn --description &quot;Orchestration&quot;  cloudformation</span><br><span class="line">openstack endpoint create --region RegionOne orchestration public http://controller:8004/v1/%\(tenant_id\)s</span><br><span class="line">openstack endpoint create --region RegionOne orchestration internal http://controller:8004/v1/%\(tenant_id\)s</span><br><span class="line">openstack endpoint create --region RegionOne orchestration admin http://controller:8004/v1/%\(tenant_id\)s</span><br><span class="line">openstack endpoint create --region RegionOne cloudformation public http://controller:8000/v1</span><br><span class="line">openstack endpoint create --region RegionOne cloudformation internal http://controller:8000/v1</span><br><span class="line">openstack endpoint create --region RegionOne cloudformation admin http://controller:8000/v1</span><br></pre></td></tr></table></figure></li><li><p>创建stack管理的额外信息</p><p> 创建 <strong>heat</strong> domain</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openstack domain create --description &quot;Stack projects and users&quot; heat</span><br></pre></td></tr></table></figure><p> 在 <strong>heat</strong> domain下创建 <strong>heat_domain_admin</strong> 用户，并记下输入的密码，用于配置下面的<code>HEAT_DOMAIN_PASS</code></p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openstack user create --domain heat --password-prompt heat_domain_admin</span><br></pre></td></tr></table></figure><p> 为 <strong>heat_domain_admin</strong> 用户增加 <strong>admin</strong> 角色</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openstack role add --domain heat --user-domain heat --user heat_domain_admin admin</span><br></pre></td></tr></table></figure><p> 创建 <strong>heat_stack_owner</strong> 角色</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openstack role create heat_stack_owner</span><br></pre></td></tr></table></figure><p> 创建 <strong>heat_stack_user</strong> 角色</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openstack role create heat_stack_user</span><br></pre></td></tr></table></figure></li><li><p>安装软件包</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install openstack-heat-api openstack-heat-api-cfn openstack-heat-engine</span><br></pre></td></tr></table></figure></li><li><p>修改配置文件<code>/etc/heat/heat.conf</code></p> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[DEFAULT]</span></span><br><span class="line"><span class="attr">transport_url</span> = rabbit://openstack:RABBIT_PASS@controller</span><br><span class="line"><span class="attr">heat_metadata_server_url</span> = http://controller:<span class="number">8000</span></span><br><span class="line"><span class="attr">heat_waitcondition_server_url</span> = http://controller:<span class="number">8000</span>/v1/waitcondition</span><br><span class="line"><span class="attr">stack_domain_admin</span> = heat_domain_admin</span><br><span class="line"><span class="attr">stack_domain_admin_password</span> = HEAT_DOMAIN_PASS</span><br><span class="line"><span class="attr">stack_user_domain_name</span> = heat</span><br><span class="line"></span><br><span class="line"><span class="section">[database]</span></span><br><span class="line"><span class="attr">connection</span> = mysql+pymysql://heat:HEAT_DBPASS@controller/heat</span><br><span class="line"></span><br><span class="line"><span class="section">[keystone_authtoken]</span></span><br><span class="line"><span class="attr">www_authenticate_uri</span> = http://controller:<span class="number">5000</span></span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span></span><br><span class="line"><span class="attr">memcached_servers</span> = controller:<span class="number">11211</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">project_domain_name</span> = default</span><br><span class="line"><span class="attr">user_domain_name</span> = default</span><br><span class="line"><span class="attr">project_name</span> = service</span><br><span class="line"><span class="attr">username</span> = heat</span><br><span class="line"><span class="attr">password</span> = HEAT_PASS</span><br><span class="line"></span><br><span class="line"><span class="section">[trustee]</span></span><br><span class="line"><span class="attr">auth_type</span> = password</span><br><span class="line"><span class="attr">auth_url</span> = http://controller:<span class="number">5000</span></span><br><span class="line"><span class="attr">username</span> = heat</span><br><span class="line"><span class="attr">password</span> = HEAT_PASS</span><br><span class="line"><span class="attr">user_domain_name</span> = default</span><br><span class="line"></span><br><span class="line"><span class="section">[clients_keystone]</span></span><br><span class="line"><span class="attr">auth_uri</span> = http://controller:<span class="number">5000</span></span><br></pre></td></tr></table></figure></li><li><p>初始化<strong>heat</strong>数据库表</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su -s /bin/sh -c &quot;heat-manage db_sync&quot; heat</span><br></pre></td></tr></table></figure></li><li><p>启动服务</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable openstack-heat-api.service openstack-heat-api-cfn.service openstack-heat-engine.service</span><br><span class="line">systemctl start openstack-heat-api.service openstack-heat-api-cfn.service openstack-heat-engine.service</span><br></pre></td></tr></table></figure></li></ol><h4 id="Tempest"><a href="#Tempest" class="headerlink" title="Tempest"></a>Tempest</h4><p>Tempest是OpenStack的集成测试服务，如果用户需要全面自动化测试已安装的OpenStack环境的功能,则推荐使用该组件。否则，可以不用安装。</p><p><strong>Controller节点</strong>：</p><ol><li><p>安装Tempest</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install openstack-tempest</span><br></pre></td></tr></table></figure></li><li><p>初始化目录</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tempest init mytest</span><br></pre></td></tr></table></figure></li><li><p>修改配置文件。</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd mytest</span><br><span class="line">vi etc/tempest.conf</span><br></pre></td></tr></table></figure><p> tempest.conf中需要配置当前OpenStack环境的信息，具体内容可以参考<a href="https://docs.openstack.org/tempest/latest/sampleconf.html">官方示例</a></p></li><li><p>执行测试</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tempest run</span><br></pre></td></tr></table></figure></li><li><p>安装tempest扩展（可选）<br>OpenStack各个服务本身也提供了一些tempest测试包，用户可以安装这些包来丰富tempest的测试内容。在Antelope中，我们提供了Cinder、Glance、Keystone、Ironic、Trove的扩展测试，用户可以执行如下命令进行安装使用：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install python3-cinder-tempest-plugin python3-glance-tempest-plugin python3-ironic-tempest-plugin python3-keystone-tempest-plugin python3-trove-tempest-plugin</span><br></pre></td></tr></table></figure></li></ol><h2 id="基于OpenStack-SIG开发工具oos部署"><a href="#基于OpenStack-SIG开发工具oos部署" class="headerlink" title="基于OpenStack SIG开发工具oos部署"></a>基于OpenStack SIG开发工具oos部署</h2><p><code>oos</code>(openEuler OpenStack SIG)是OpenStack SIG提供的命令行工具。其中<code>oos env</code>系列命令提供了一键部署OpenStack （<code>all in one</code>或三节点<code>cluster</code>）的ansible脚本，用户可以使用该脚本快速部署一套基于 openEuler RPM 的 OpenStack 环境。<code>oos</code>工具支持对接云provider（目前仅支持华为云provider）和主机纳管两种方式来部署 OpenStack 环境，下面以对接华为云部署一套<code>all in one</code>的OpenStack环境为例说明<code>oos</code>工具的使用方法。</p><ol><li><p>安装<code>oos</code>工具</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install openstack-sig-tool</span><br></pre></td></tr></table></figure></li><li><p>配置对接华为云provider的信息</p><p> 打开<code>/usr/local/etc/oos/oos.conf</code>文件，修改配置为您拥有的华为云资源信息，AK&#x2F;SK是用户的华为云登录密钥，其他配置保持默认即可（默认使用新加坡region），需要提前在云上创建对应的资源，包括：</p><ul><li>一个安全组，名字默认是<code>oos</code></li><li>一个openEuler镜像，名称格式是openEuler-%(release)s-%(arch)s，例如<code>openEuler-24.03-sp1-arm64</code></li><li>一个VPC，名称是<code>oos_vpc</code></li><li>该VPC下面两个子网，名称是<code>oos_subnet1</code>、<code>oos_subnet2</code></li></ul> <figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[huaweicloud]</span></span><br><span class="line"><span class="attr">ak</span> = </span><br><span class="line"><span class="attr">sk</span> = </span><br><span class="line"><span class="attr">region</span> = ap-southeast-<span class="number">3</span></span><br><span class="line"><span class="attr">root_volume_size</span> = <span class="number">100</span></span><br><span class="line"><span class="attr">data_volume_size</span> = <span class="number">100</span></span><br><span class="line"><span class="attr">security_group_name</span> = oos</span><br><span class="line"><span class="attr">image_format</span> = openEuler-%%(release)s-%%(arch)s</span><br><span class="line"><span class="attr">vpc_name</span> = oos_vpc</span><br><span class="line"><span class="attr">subnet1_name</span> = oos_subnet1</span><br><span class="line"><span class="attr">subnet2_name</span> = oos_subnet2</span><br></pre></td></tr></table></figure></li><li><p>配置 OpenStack 环境信息</p><p> 打开<code>/usr/local/etc/oos/oos.conf</code>文件，根据当前机器环境和需求修改配置。内容如下：</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">[environment]</span><br><span class="line">mysql_root_password = root</span><br><span class="line">mysql_project_password = root</span><br><span class="line">rabbitmq_password = root</span><br><span class="line">project_identity_password = root</span><br><span class="line">enabled_service = keystone,neutron,cinder,placement,nova,glance,horizon,aodh,ceilometer,cyborg,gnocchi,kolla,heat,swift,trove,tempest</span><br><span class="line">neutron_provider_interface_name = br-ex</span><br><span class="line">default_ext_subnet_range = 10.100.100.0/24</span><br><span class="line">default_ext_subnet_gateway = 10.100.100.1</span><br><span class="line">neutron_dataplane_interface_name = eth1</span><br><span class="line">cinder_block_device = vdb</span><br><span class="line">swift_storage_devices = vdc</span><br><span class="line">swift_hash_path_suffix = ash</span><br><span class="line">swift_hash_path_prefix = has</span><br><span class="line">glance_api_workers = 2</span><br><span class="line">cinder_api_workers = 2</span><br><span class="line">nova_api_workers = 2</span><br><span class="line">nova_metadata_api_workers = 2</span><br><span class="line">nova_conductor_workers = 2</span><br><span class="line">nova_scheduler_workers = 2</span><br><span class="line">neutron_api_workers = 2</span><br><span class="line">horizon_allowed_host = *</span><br><span class="line">kolla_openeuler_plugin = false</span><br></pre></td></tr></table></figure><p> <strong>关键配置</strong></p><table><thead><tr><th>配置项</th><th>解释</th></tr></thead><tbody><tr><td>enabled_service</td><td>安装服务列表，根据用户需求自行删减</td></tr><tr><td>neutron_provider_interface_name</td><td>neutron L3网桥名称</td></tr><tr><td>default_ext_subnet_range</td><td>neutron私网IP段</td></tr><tr><td>default_ext_subnet_gateway</td><td>neutron私网gateway</td></tr><tr><td>neutron_dataplane_interface_name</td><td>neutron使用的网卡，推荐使用一张新的网卡，以免和现有网卡冲突，防止all in one主机断连的情况</td></tr><tr><td>cinder_block_device</td><td>cinder使用的卷设备名</td></tr><tr><td>swift_storage_devices</td><td>swift使用的卷设备名</td></tr><tr><td>kolla_openeuler_plugin</td><td>是否启用kolla plugin。设置为True，kolla将支持部署openEuler容器(只在openEuler LTS上支持)</td></tr></tbody></table></li><li><p>华为云上面创建一台|openEuler 24.03 LTS SP1的x86_64虚拟机，用于部署<code>all in one</code> 的 OpenStack</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sshpass在`oos <span class="built_in">env</span> create`过程中被使用，用于配置对目标虚拟机的免密访问</span></span><br><span class="line">dnf install sshpass</span><br><span class="line">oos env create -r 24.03-lts-sp1 -f small -a x86 -n test-oos all_in_one</span><br></pre></td></tr></table></figure><p> 具体的参数可以使用<code>oos env create --help</code>命令查看</p></li><li><p>部署OpenStack <code>all in one</code> 环境</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">oos env setup test-oos -r antelope</span><br></pre></td></tr></table></figure><p> 具体的参数可以使用<code>oos env setup --help</code>命令查看</p></li><li><p>初始化tempest环境</p><p> 如果用户想使用该环境运行tempest测试的话，可以执行命令<code>oos env init</code>，会自动把tempest需要的OpenStack资源自动创建好</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">oos env init test-oos</span><br></pre></td></tr></table></figure></li><li><p>执行tempest测试</p><p> 用户可以使用oos自动执行：</p> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">oos env test test-oos</span><br></pre></td></tr></table></figure><p> 也可以手动登录目标节点，进入根目录下的<code>mytest</code>目录，手动执行<code>tempest run</code></p></li></ol><p>如果是以主机纳管的方式部署 OpenStack 环境，总体逻辑与上文对接华为云时一致，1、3、5、6步操作不变，跳过第2步对华为云provider信息的配置，在第4步改为纳管主机操作。</p><p>被纳管的虚机需要保证：</p><ul><li>至少有一张给oos使用的网卡，名称与配置保持一致，相关配置<code>neutron_dataplane_interface_name</code></li><li>至少有一块给oos使用的硬盘，名称与配置保持一致，相关配置<code>cinder_block_device</code></li><li>如果要部署swift服务，则需要新增一块硬盘，名称与配置保持一致，相关配置<code>swift_storage_devices</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">sshpass在`oos <span class="built_in">env</span> create`过程中被使用，用于配置对目标主机的免密访问</span></span><br><span class="line">dnf install sshpass</span><br><span class="line">oos env manage -r 24.03-lts-sp1 -i TARGET_MACHINE_IP -p TARGET_MACHINE_PASSWD -n test-oos</span><br></pre></td></tr></table></figure><p>替换<code>TARGET_MACHINE_IP</code>为目标机ip、<code>TARGET_MACHINE_PASSWD</code>为目标机密码。具体的参数可以使用<code>oos env manage --help</code>命令查看。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>openstack操作及状态</title>
      <link href="/2024/07/07/openstack%E6%93%8D%E4%BD%9C%E5%8F%8A%E7%8A%B6%E6%80%81/"/>
      <url>/2024/07/07/openstack%E6%93%8D%E4%BD%9C%E5%8F%8A%E7%8A%B6%E6%80%81/</url>
      
        <content type="html"><![CDATA[<h1 id="Server"><a href="#Server" class="headerlink" title="Server"></a>Server</h1><p>server status 是描述虚拟机当前状态</p><p>vm_state 是虚拟机稳定状态</p><p>task_state 实例当前发生的情况</p><p>虚拟机稳定状态和操作的关系：<a href="https://docs.openstack.org/nova/latest/reference/vm-states.html">https://docs.openstack.org/nova/latest/reference/vm-states.html</a></p><p><strong>InstanceTaskState</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">SCHEDULING = <span class="string">&#x27;scheduling&#x27;</span></span><br><span class="line">BLOCK_DEVICE_MAPPING = <span class="string">&#x27;block_device_mapping&#x27;</span></span><br><span class="line">NETWORKING = <span class="string">&#x27;networking&#x27;</span></span><br><span class="line">SPAWNING = <span class="string">&#x27;spawning&#x27;</span></span><br><span class="line">IMAGE_SNAPSHOT = <span class="string">&#x27;image_snapshot&#x27;</span></span><br><span class="line">IMAGE_SNAPSHOT_PENDING = <span class="string">&#x27;image_snapshot_pending&#x27;</span></span><br><span class="line">IMAGE_PENDING_UPLOAD = <span class="string">&#x27;image_pending_upload&#x27;</span></span><br><span class="line">IMAGE_UPLOADING = <span class="string">&#x27;image_uploading&#x27;</span></span><br><span class="line">IMAGE_BACKUP = <span class="string">&#x27;image_backup&#x27;</span></span><br><span class="line">UPDATING_PASSWORD = <span class="string">&#x27;updating_password&#x27;</span></span><br><span class="line">RESIZE_PREP = <span class="string">&#x27;resize_prep&#x27;</span></span><br><span class="line">RESIZE_MIGRATING = <span class="string">&#x27;resize_migrating&#x27;</span></span><br><span class="line">RESIZE_MIGRATED = <span class="string">&#x27;resize_migrated&#x27;</span></span><br><span class="line">RESIZE_FINISH = <span class="string">&#x27;resize_finish&#x27;</span></span><br><span class="line">RESIZE_REVERTING = <span class="string">&#x27;resize_reverting&#x27;</span></span><br><span class="line">RESIZE_CONFIRMING = <span class="string">&#x27;resize_confirming&#x27;</span></span><br><span class="line">REBOOTING = <span class="string">&#x27;rebooting&#x27;</span></span><br><span class="line">REBOOT_PENDING = <span class="string">&#x27;reboot_pending&#x27;</span></span><br><span class="line">REBOOT_STARTED = <span class="string">&#x27;reboot_started&#x27;</span></span><br><span class="line">REBOOTING_HARD = <span class="string">&#x27;rebooting_hard&#x27;</span></span><br><span class="line">REBOOT_PENDING_HARD = <span class="string">&#x27;reboot_pending_hard&#x27;</span></span><br><span class="line">REBOOT_STARTED_HARD = <span class="string">&#x27;reboot_started_hard&#x27;</span></span><br><span class="line">PAUSING = <span class="string">&#x27;pausing&#x27;</span></span><br><span class="line">UNPAUSING = <span class="string">&#x27;unpausing&#x27;</span></span><br><span class="line">SUSPENDING = <span class="string">&#x27;suspending&#x27;</span></span><br><span class="line">RESUMING = <span class="string">&#x27;resuming&#x27;</span></span><br><span class="line">POWERING_OFF = <span class="string">&#x27;powering-off&#x27;</span></span><br><span class="line">POWERING_ON = <span class="string">&#x27;powering-on&#x27;</span></span><br><span class="line">RESCUING = <span class="string">&#x27;rescuing&#x27;</span></span><br><span class="line">UNRESCUING = <span class="string">&#x27;unrescuing&#x27;</span></span><br><span class="line">REBUILDING = <span class="string">&#x27;rebuilding&#x27;</span></span><br><span class="line">REBUILD_BLOCK_DEVICE_MAPPING = <span class="string">&quot;rebuild_block_device_mapping&quot;</span></span><br><span class="line">REBUILD_SPAWNING = <span class="string">&#x27;rebuild_spawning&#x27;</span></span><br><span class="line">MIGRATING = <span class="string">&quot;migrating&quot;</span></span><br><span class="line">DELETING = <span class="string">&#x27;deleting&#x27;</span></span><br><span class="line">SOFT_DELETING = <span class="string">&#x27;soft-deleting&#x27;</span></span><br><span class="line">RESTORING = <span class="string">&#x27;restoring&#x27;</span></span><br><span class="line">SHELVING = <span class="string">&#x27;shelving&#x27;</span></span><br><span class="line">SHELVING_IMAGE_PENDING_UPLOAD = <span class="string">&#x27;shelving_image_pending_upload&#x27;</span></span><br><span class="line">SHELVING_IMAGE_UPLOADING = <span class="string">&#x27;shelving_image_uploading&#x27;</span></span><br><span class="line">SHELVING_OFFLOADING = <span class="string">&#x27;shelving_offloading&#x27;</span></span><br><span class="line">UNSHELVING = <span class="string">&#x27;unshelving&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>InstanceState</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ACTIVE = <span class="string">&#x27;active&#x27;</span></span><br><span class="line">BUILDING = <span class="string">&#x27;building&#x27;</span></span><br><span class="line">PAUSED = <span class="string">&#x27;paused&#x27;</span></span><br><span class="line">SUSPENDED = <span class="string">&#x27;suspended&#x27;</span></span><br><span class="line">STOPPED = <span class="string">&#x27;stopped&#x27;</span></span><br><span class="line">RESCUED = <span class="string">&#x27;rescued&#x27;</span></span><br><span class="line">RESIZED = <span class="string">&#x27;resized&#x27;</span></span><br><span class="line">SOFT_DELETED = <span class="string">&#x27;soft-delete&#x27;</span></span><br><span class="line">DELETED = <span class="string">&#x27;deleted&#x27;</span></span><br><span class="line">ERROR = <span class="string">&#x27;error&#x27;</span></span><br><span class="line">SHELVED = <span class="string">&#x27;shelved&#x27;</span></span><br><span class="line">SHELVED_OFFLOADED = <span class="string">&#x27;shelved_offloaded&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>serverStatus</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">_STATE_MAP = &#123;</span><br><span class="line">    vm_states.ACTIVE: &#123;</span><br><span class="line">        <span class="string">&#x27;default&#x27;</span>: <span class="string">&#x27;ACTIVE&#x27;</span>,</span><br><span class="line">        task_states.REBOOTING: <span class="string">&#x27;REBOOT&#x27;</span>,</span><br><span class="line">        task_states.REBOOT_PENDING: <span class="string">&#x27;REBOOT&#x27;</span>,</span><br><span class="line">        task_states.REBOOT_STARTED: <span class="string">&#x27;REBOOT&#x27;</span>,</span><br><span class="line">        task_states.REBOOTING_HARD: <span class="string">&#x27;HARD_REBOOT&#x27;</span>,</span><br><span class="line">        task_states.REBOOT_PENDING_HARD: <span class="string">&#x27;HARD_REBOOT&#x27;</span>,</span><br><span class="line">        task_states.REBOOT_STARTED_HARD: <span class="string">&#x27;HARD_REBOOT&#x27;</span>,</span><br><span class="line">        task_states.UPDATING_PASSWORD: <span class="string">&#x27;PASSWORD&#x27;</span>,</span><br><span class="line">        task_states.REBUILDING: <span class="string">&#x27;REBUILD&#x27;</span>,</span><br><span class="line">        task_states.REBUILD_BLOCK_DEVICE_MAPPING: <span class="string">&#x27;REBUILD&#x27;</span>,</span><br><span class="line">        task_states.REBUILD_SPAWNING: <span class="string">&#x27;REBUILD&#x27;</span>,</span><br><span class="line">        task_states.MIGRATING: <span class="string">&#x27;MIGRATING&#x27;</span>,</span><br><span class="line">        task_states.RESIZE_PREP: <span class="string">&#x27;RESIZE&#x27;</span>,</span><br><span class="line">        task_states.RESIZE_MIGRATING: <span class="string">&#x27;RESIZE&#x27;</span>,</span><br><span class="line">        task_states.RESIZE_MIGRATED: <span class="string">&#x27;RESIZE&#x27;</span>,</span><br><span class="line">        task_states.RESIZE_FINISH: <span class="string">&#x27;RESIZE&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    vm_states.BUILDING: &#123;</span><br><span class="line">        <span class="string">&#x27;default&#x27;</span>: <span class="string">&#x27;BUILD&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    vm_states.STOPPED: &#123;</span><br><span class="line">        <span class="string">&#x27;default&#x27;</span>: <span class="string">&#x27;SHUTOFF&#x27;</span>,</span><br><span class="line">        task_states.RESIZE_PREP: <span class="string">&#x27;RESIZE&#x27;</span>,</span><br><span class="line">        task_states.RESIZE_MIGRATING: <span class="string">&#x27;RESIZE&#x27;</span>,</span><br><span class="line">        task_states.RESIZE_MIGRATED: <span class="string">&#x27;RESIZE&#x27;</span>,</span><br><span class="line">        task_states.RESIZE_FINISH: <span class="string">&#x27;RESIZE&#x27;</span>,</span><br><span class="line">        task_states.REBUILDING: <span class="string">&#x27;REBUILD&#x27;</span>,</span><br><span class="line">        task_states.REBUILD_BLOCK_DEVICE_MAPPING: <span class="string">&#x27;REBUILD&#x27;</span>,</span><br><span class="line">        task_states.REBUILD_SPAWNING: <span class="string">&#x27;REBUILD&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    vm_states.RESIZED: &#123;</span><br><span class="line">        <span class="string">&#x27;default&#x27;</span>: <span class="string">&#x27;VERIFY_RESIZE&#x27;</span>,</span><br><span class="line">        <span class="comment"># Note(maoy): the OS API spec 1.1 doesn&#x27;t have CONFIRMING_RESIZE</span></span><br><span class="line">        <span class="comment"># state so we comment that out for future reference only.</span></span><br><span class="line">        <span class="comment"># task_states.RESIZE_CONFIRMING: &#x27;CONFIRMING_RESIZE&#x27;,</span></span><br><span class="line">        task_states.RESIZE_REVERTING: <span class="string">&#x27;REVERT_RESIZE&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    vm_states.PAUSED: &#123;</span><br><span class="line">        <span class="string">&#x27;default&#x27;</span>: <span class="string">&#x27;PAUSED&#x27;</span>,</span><br><span class="line">        task_states.MIGRATING: <span class="string">&#x27;MIGRATING&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    vm_states.SUSPENDED: &#123;</span><br><span class="line">        <span class="string">&#x27;default&#x27;</span>: <span class="string">&#x27;SUSPENDED&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    vm_states.RESCUED: &#123;</span><br><span class="line">        <span class="string">&#x27;default&#x27;</span>: <span class="string">&#x27;RESCUE&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    vm_states.ERROR: &#123;</span><br><span class="line">        <span class="string">&#x27;default&#x27;</span>: <span class="string">&#x27;ERROR&#x27;</span>,</span><br><span class="line">        task_states.REBUILDING: <span class="string">&#x27;REBUILD&#x27;</span>,</span><br><span class="line">        task_states.REBUILD_BLOCK_DEVICE_MAPPING: <span class="string">&#x27;REBUILD&#x27;</span>,</span><br><span class="line">        task_states.REBUILD_SPAWNING: <span class="string">&#x27;REBUILD&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    vm_states.DELETED: &#123;</span><br><span class="line">        <span class="string">&#x27;default&#x27;</span>: <span class="string">&#x27;DELETED&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    vm_states.SOFT_DELETED: &#123;</span><br><span class="line">        <span class="string">&#x27;default&#x27;</span>: <span class="string">&#x27;SOFT_DELETED&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    vm_states.SHELVED: &#123;</span><br><span class="line">        <span class="string">&#x27;default&#x27;</span>: <span class="string">&#x27;SHELVED&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    vm_states.SHELVED_OFFLOADED: &#123;</span><br><span class="line">        <span class="string">&#x27;default&#x27;</span>: <span class="string">&#x27;SHELVED_OFFLOADED&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">---------</span><br><span class="line"><span class="comment">#整理出需要实时监控更新的中间状态</span></span><br><span class="line">-ACTIVE</span><br><span class="line">-SHUTOFF</span><br><span class="line">-PAUSED</span><br><span class="line">-SUSPENDED</span><br><span class="line">-DELETED</span><br><span class="line">-SOFT_DELETED</span><br><span class="line">*-VERIFY_RESIZE</span><br><span class="line">-SHELVED</span><br><span class="line">-SHELVED_OFFLOADED</span><br><span class="line">*RESCUE</span><br><span class="line">*REBOOT</span><br><span class="line">*HARD_REBOOT</span><br><span class="line">*PASSWORD</span><br><span class="line">*REBUILD</span><br><span class="line">*MIGRATING</span><br><span class="line">*RESIZE</span><br><span class="line">*BUILD</span><br><span class="line">*REVERT_RESIZE</span><br></pre></td></tr></table></figure><p><strong>InstancePowerState</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">_UNUSED = <span class="string">&#x27;_unused&#x27;</span></span><br><span class="line">NOSTATE = <span class="string">&#x27;pending&#x27;</span></span><br><span class="line">RUNNING = <span class="string">&#x27;running&#x27;</span></span><br><span class="line">PAUSED = <span class="string">&#x27;paused&#x27;</span></span><br><span class="line">SHUTDOWN = <span class="string">&#x27;shutdown&#x27;</span></span><br><span class="line">CRASHED = <span class="string">&#x27;crashed&#x27;</span></span><br><span class="line">SUSPENDED = <span class="string">&#x27;suspended&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="image"><a href="#image" class="headerlink" title="image"></a>image</h1><p>镜像状态转换：<a href="https://docs.openstack.org/glance/train/user/statuses.html">https://docs.openstack.org/glance/train/user/statuses.html</a></p><p><strong>image status</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">queued</span><br><span class="line">saving</span><br><span class="line">uploading</span><br><span class="line">importing</span><br><span class="line">active</span><br><span class="line">deactivated</span><br><span class="line">killed</span><br><span class="line">deleted</span><br><span class="line">pending_delete</span><br></pre></td></tr></table></figure><p>tasks status</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pending</span><br><span class="line">processing</span><br><span class="line">success</span><br><span class="line">failure</span><br></pre></td></tr></table></figure><h1 id="volume"><a href="#volume" class="headerlink" title="volume"></a>volume</h1><p><strong>Volume statuses</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># VolumeStatus</span></span><br><span class="line">*CREATING = <span class="string">&#x27;creating&#x27;</span></span><br><span class="line">AVAILABLE = <span class="string">&#x27;available&#x27;</span></span><br><span class="line">*DELETING = <span class="string">&#x27;deleting&#x27;</span></span><br><span class="line">ERROR = <span class="string">&#x27;error&#x27;</span></span><br><span class="line">*ERROR_DELETING = <span class="string">&#x27;error_deleting&#x27;</span></span><br><span class="line">*ERROR_MANAGING = <span class="string">&#x27;error_managing&#x27;</span></span><br><span class="line">*MANAGING = <span class="string">&#x27;managing&#x27;</span></span><br><span class="line">*ATTACHING = <span class="string">&#x27;attaching&#x27;</span></span><br><span class="line">IN_USE = <span class="string">&#x27;in-use&#x27;</span></span><br><span class="line">*DETACHING = <span class="string">&#x27;detaching&#x27;</span></span><br><span class="line">MAINTENANCE = <span class="string">&#x27;maintenance&#x27;</span></span><br><span class="line">*RESTORING_BACKUP = <span class="string">&#x27;restoring-backup&#x27;</span></span><br><span class="line">*ERROR_RESTORING = <span class="string">&#x27;error_restoring&#x27;</span></span><br><span class="line">RESERVED = <span class="string">&#x27;reserved&#x27;</span></span><br><span class="line">*AWAITING_TRANSFER = <span class="string">&#x27;awaiting-transfer&#x27;</span></span><br><span class="line">*BACKING_UP = <span class="string">&#x27;backing-up&#x27;</span></span><br><span class="line">*ERROR_BACKING_UP = <span class="string">&#x27;error_backing-up&#x27;</span></span><br><span class="line">*ERROR_EXTENDING* = <span class="string">&#x27;error_extending&#x27;</span></span><br><span class="line">*DOWNLOADING = <span class="string">&#x27;downloading&#x27;</span></span><br><span class="line">*UPLOADING = <span class="string">&#x27;uploading&#x27;</span></span><br><span class="line">*RETYPING = <span class="string">&#x27;retyping&#x27;</span></span><br><span class="line">*EXTENDING = <span class="string">&#x27;extending&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># BackupStatus</span></span><br><span class="line"></span><br><span class="line">ERROR = <span class="string">&#x27;error&#x27;</span></span><br><span class="line">ERROR_DELETING = <span class="string">&#x27;error_deleting&#x27;</span></span><br><span class="line">CREATING = <span class="string">&#x27;creating&#x27;</span></span><br><span class="line">AVAILABLE = <span class="string">&#x27;available&#x27;</span></span><br><span class="line">DELETING = <span class="string">&#x27;deleting&#x27;</span></span><br><span class="line">DELETED = <span class="string">&#x27;deleted&#x27;</span></span><br><span class="line">RESTORING = <span class="string">&#x27;restoring&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># SnapshotStatus</span></span><br><span class="line">ERROR = <span class="string">&#x27;error&#x27;</span></span><br><span class="line">AVAILABLE = <span class="string">&#x27;available&#x27;</span></span><br><span class="line">CREATING = <span class="string">&#x27;creating&#x27;</span></span><br><span class="line">DELETING = <span class="string">&#x27;deleting&#x27;</span></span><br><span class="line">DELETED = <span class="string">&#x27;deleted&#x27;</span></span><br><span class="line">UPDATING = <span class="string">&#x27;updating&#x27;</span></span><br><span class="line">ERROR_DELETING = <span class="string">&#x27;error_deleting&#x27;</span></span><br><span class="line">UNMANAGING = <span class="string">&#x27;unmanaging&#x27;</span></span><br><span class="line">BACKING_UP = <span class="string">&#x27;backing-up&#x27;</span></span><br><span class="line">RESTORING = <span class="string">&#x27;restoring&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># VolumeAttachStatus</span></span><br><span class="line">ATTACHED = <span class="string">&#x27;attached&#x27;</span></span><br><span class="line">ATTACHING = <span class="string">&#x27;attaching&#x27;</span></span><br><span class="line">DETACHED = <span class="string">&#x27;detached&#x27;</span></span><br><span class="line">RESERVED = <span class="string">&#x27;reserved&#x27;</span></span><br><span class="line">ERROR_ATTACHING = <span class="string">&#x27;error_attaching&#x27;</span></span><br><span class="line">ERROR_DETACHING = <span class="string">&#x27;error_detaching&#x27;</span></span><br><span class="line">DELETED = <span class="string">&#x27;deleted&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># VolumeMigrationStatus</span></span><br><span class="line">MIGRATING = <span class="string">&#x27;migrating&#x27;</span></span><br><span class="line">ERROR = <span class="string">&#x27;error&#x27;</span></span><br><span class="line">SUCCESS = <span class="string">&#x27;success&#x27;</span></span><br><span class="line">COMPLETING = <span class="string">&#x27;completing&#x27;</span></span><br><span class="line">NONE = <span class="string">&#x27;none&#x27;</span></span><br><span class="line">STARTING = <span class="string">&#x27;starting&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="neutron"><a href="#neutron" class="headerlink" title="neutron"></a>neutron</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">NET_STATUS_ACTIVE = <span class="string">&#x27;ACTIVE&#x27;</span></span><br><span class="line">NET_STATUS_BUILD = <span class="string">&#x27;BUILD&#x27;</span></span><br><span class="line">NET_STATUS_DOWN = <span class="string">&#x27;DOWN&#x27;</span></span><br><span class="line">NET_STATUS_ERROR = <span class="string">&#x27;ERROR&#x27;</span></span><br><span class="line"></span><br><span class="line">PORT_STATUS_ACTIVE = <span class="string">&#x27;ACTIVE&#x27;</span></span><br><span class="line">PORT_STATUS_BUILD = <span class="string">&#x27;BUILD&#x27;</span></span><br><span class="line">PORT_STATUS_DOWN = <span class="string">&#x27;DOWN&#x27;</span></span><br><span class="line">PORT_STATUS_ERROR = <span class="string">&#x27;ERROR&#x27;</span></span><br><span class="line">PORT_STATUS_NOTAPPLICABLE = <span class="string">&#x27;N/A&#x27;</span></span><br><span class="line"></span><br><span class="line">FLOATINGIP_STATUS_ACTIVE = <span class="string">&#x27;ACTIVE&#x27;</span></span><br><span class="line">FLOATINGIP_STATUS_DOWN = <span class="string">&#x27;DOWN&#x27;</span></span><br><span class="line">FLOATINGIP_STATUS_ERROR = <span class="string">&#x27;ERROR&#x27;</span></span><br><span class="line"></span><br><span class="line">ROUTER_STATUS_ACTIVE = <span class="string">&#x27;ACTIVE&#x27;</span></span><br><span class="line">ROUTER_STATUS_ALLOCATING = <span class="string">&#x27;ALLOCATING&#x27;</span></span><br><span class="line">ROUTER_STATUS_ERROR = <span class="string">&#x27;ERROR&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Openstack </category>
          
          <category> Actions </category>
          
          <category> Status </category>
          
      </categories>
      
      
        <tags>
            
            <tag> openstack </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>创建windows的qcow2镜像</title>
      <link href="/2024/01/10/%E5%88%9B%E5%BB%BAwindows%E7%9A%84qcow2%E9%95%9C%E5%83%8F/"/>
      <url>/2024/01/10/%E5%88%9B%E5%BB%BAwindows%E7%9A%84qcow2%E9%95%9C%E5%83%8F/</url>
      
        <content type="html"><![CDATA[<p>创建qcow2</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-img create -f qcow2 /path/to/win-iso/windows_server_2019.qcow2 50G</span><br></pre></td></tr></table></figure><p>安装windows镜像到qcow2</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virt-install --virt-type=kvm --name win-2019 --cpu=host --memory 3072 --vcpus=2 --os-type=windows --os-variant=windows --disk=//path/to/win-iso/cn_windows_server_2019_x64_dvd_4de40f33.iso,device=cdrom --disk=/path/to//win-iso/virtio-win-0.1.172.iso,device=cdrom --network=default,model=virtio --graphics vnc --disk=/path/to/win-iso/windows_server_2019.qcow2,size=50,bus=virtio,format=qcow2 --boot cdrom --check all=off</span><br></pre></td></tr></table></figure><p>压缩镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-img convert -O qcow2 windows_server_2019.qcow2 new-windows_server_2019.qcow2</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Fio测试磁盘读写性能</title>
      <link href="/2023/12/25/Fio%E6%B5%8B%E8%AF%95%E7%A3%81%E7%9B%98%E8%AF%BB%E5%86%99%E6%80%A7%E8%83%BD/"/>
      <url>/2023/12/25/Fio%E6%B5%8B%E8%AF%95%E7%A3%81%E7%9B%98%E8%AF%BB%E5%86%99%E6%80%A7%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>内核：4.10</p><p>cpu：8</p><p>内存：8GB</p><p>硬盘：100GB</p><h1 id="安装fio"><a href="#安装fio" class="headerlink" title="安装fio"></a>安装fio</h1><p>fio 的全称是 flexible I&#x2F;O tester，是常用的磁盘性能测试工具。fio 通过产生一系列的线程或进程来执行用户指定的特定类型 IO 操作。典型的用法是用户将需要模拟的 IO 负载写入到 job file 中。fio 支持多种 IO 引擎，通过 ioengine&#x3D;io_uring，我们可以在 fio 中使用 io_uring 接口来测试磁盘性能。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install fio</span><br></pre></td></tr></table></figure><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><ul><li><p>4k随机读</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fio -name=iouring_test -filename=/mnt/vdd/testfile -iodepth=128 -thread -rw=randread -ioengine=io_uring -sqthread_poll=1 -direct=1 -bs=4k -size=10G -numjobs=1 -runtime=120 -group_reporting</span><br></pre></td></tr></table></figure></li><li><p>4k 随机写</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fio -name=iouring_test -filename=/mnt/vdd/testfile -iodepth=128 -thread -rw=randwrite -ioengine=io_uring -sqthread_poll=1 -direct=1 -bs=4k -size=10G -numjobs=1 -runtime=120 -group_reporting</span><br></pre></td></tr></table></figure></li><li><p>随机读写</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fio -name=iouring_test -filename=/mnt/vdd/testfile -iodepth=128 -thread -rw=randrw -ioengine=io_uring -sqthread_poll=1 -direct=1 -bs=4k -size=10G -numjobs=1 -runtime=120 -group_reporting</span><br></pre></td></tr></table></figure></li><li><p>4k 顺序读</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fio -name=iouring_test -filename=/mnt/vdd/testfile -iodepth=128 -thread -rw=read -ioengine=io_uring -sqthread_poll=1 -direct=1 -bs=4k -size=10G -numjobs=1 -runtime=120 -group_reporting</span><br></pre></td></tr></table></figure></li><li><p>4k 顺序写</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fio -name=iouring_test -filename=/mnt/vdd/testfile -iodepth=128 -thread -rw=write -ioengine=io_uring -sqthread_poll=1 -direct=1 -bs=4k -size=10G -numjobs=1 -runtime=120 -group_reporting</span><br></pre></td></tr></table></figure></li><li><p>4K顺序读写</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fio -name=iouring_test -filename=/mnt/vdd/testfile -iodepth=128 -thread -rw=rw -ioengine=io_uring -sqthread_poll=1 -direct=1 -bs=4k -size=10G -numjobs=1 -runtime=120 -group_reporting</span><br></pre></td></tr></table></figure></li></ul><p>说明：<br>filename&#x3D;&#x2F;dev&#x2F;sdb1    测试文件名称，通常选择需要测试的盘的data目录。<br>direct&#x3D;1         测试过程绕过机器自带的buffer。使测试结果更真实。<br>bs&#x3D;16k          单次io的块文件大小为16k<br>bsrange&#x3D;512-2048     同上，提定数据块的大小范围<br>size&#x3D;5g  本次的测试文件大小为5g，以每次4k的io进行测试。<br>numjobs&#x3D;30        本次的测试线程为30.<br>runtime&#x3D;1000       测试时间为1000秒，如果不写则一直将5g文件分4k每次写完为止。<br>ioengine&#x3D;psync      io引擎使用pync方式<br>rwmixwrite&#x3D;30      在混合读写的模式下，写占30%<br>group_reporting     关于显示结果的，汇总每个进程的信息。</p><p>此外<br>lockmem&#x3D;1g        只使用1g内存进行测试。<br>zero_buffers       用0初始化系统buffer。<br>nrfiles&#x3D;8        每个进程生成文件的数量。<br>read 顺序读<br>write 顺序写<br>rw,readwrite 顺序混合读写<br>randwrite 随机写<br>randread 随机读<br>randrw 随机混合读写</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Tools </category>
          
          <category> Test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Debian使用Docker</title>
      <link href="/2023/12/25/%E5%9F%BA%E4%BA%8EDebian%E4%BD%BF%E7%94%A8docker/"/>
      <url>/2023/12/25/%E5%9F%BA%E4%BA%8EDebian%E4%BD%BF%E7%94%A8docker/</url>
      
        <content type="html"><![CDATA[<h1 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Tools </category>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用性能测试小工具集锦</title>
      <link href="/2023/12/25/%E5%B8%B8%E7%94%A8%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%B0%8F%E5%B7%A5%E5%85%B7%E9%9B%86%E9%94%A6/"/>
      <url>/2023/12/25/%E5%B8%B8%E7%94%A8%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E5%B0%8F%E5%B7%A5%E5%85%B7%E9%9B%86%E9%94%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="常用性能测试小工具集锦"><a href="#常用性能测试小工具集锦" class="headerlink" title="常用性能测试小工具集锦"></a>常用性能测试小工具集锦</h1><h2 id="性能测试"><a href="#性能测试" class="headerlink" title="性能测试"></a>性能测试</h2><p>​基于工作中做的性能测试，收纳整理出《常用性能测试小工具集锦》。主要从性能测试和工具集锦两个方面分享。</p><h3 id="性能测试-1"><a href="#性能测试-1" class="headerlink" title="性能测试"></a>性能测试</h3><p>​性能测试是一种评估系统性能的方法，它可以检测系统的可扩展性、吞吐量、响应时间、负载能力、稳定性和安全性等指标。性能测试可以帮助开发人员、系统管理员和业务用户了解系统的实际运行情况，并找出可能存在的瓶颈和问题。</p><h4 id="性能测试指标"><a href="#性能测试指标" class="headerlink" title="性能测试指标"></a>性能测试指标</h4><p>​衡量系统性能的评价标准。</p><h5 id="系统性能测试指标"><a href="#系统性能测试指标" class="headerlink" title="系统性能测试指标"></a><strong>系统性能测试指标</strong></h5><p>​响应时间、系统处理能力，吞吐量，并发用户数，错误率等。</p><h5 id="响应时间"><a href="#响应时间" class="headerlink" title="响应时间"></a>响应时间</h5><p>​简称RT，指的是客户发出请求到得到系统响应的整个过程的时间。也就是用户从客户端发起一个请求开始，到客户端接收到从服务器端返回的响应结束，整个过程所耗费的时间。</p><h5 id="系统处理能力"><a href="#系统处理能力" class="headerlink" title="系统处理能力"></a>系统处理能力</h5><p>​系统在利用系统硬件平台和软件平台进行信息处理的能力。系统处理能力通过系统每秒钟能够处理的交易数量来评价。交易有两种理解：一是业务人员角度的一笔业务过程；二是系统角度的一次交易申请和响应过程。前者称为业务交易过程，后者称为事务。系统处理能力又用HPS(每秒点击次数)，TPS(系统每秒处理交易次数)，QPS(系统每秒处理查询次数)指标来度量。</p><h5 id="吞吐量"><a href="#吞吐量" class="headerlink" title="吞吐量"></a>吞吐量</h5><p>​吞吐量是指系统在单位时间内处理请求的数量。尤其对于并发系统，通常需要用吞吐量作为性能指标。</p><h5 id="并发用户数"><a href="#并发用户数" class="headerlink" title="并发用户数"></a>并发用户数</h5><p>​并发用户数指在同一时刻内，登录系统并进行业务操作的用户数量。</p><h5 id="错误率"><a href="#错误率" class="headerlink" title="错误率"></a>错误率</h5><p>​简称FR，指系统在负载情况下，失败交易的概率。错误率＝(失败交易数&#x2F;交易总数)*100%。</p><h4 id="资源性能指标"><a href="#资源性能指标" class="headerlink" title="资源性能指标"></a><strong>资源性能指标</strong></h4><p>CPU、内存、磁盘吞吐量、网络吞吐量等。</p><h5 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h5><p>​CPU指标主要指的CPU利用率。单位时间内服务器CPU的使用统计，可以用除CPU空闲时间外其他时间占总CPU时间的百分比来表示。即：CPU使用率&#x3D;1-CPU空闲时间&#x2F;总CPU时间。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">字段说明：</span><br><span class="line">us (user)：用户态的CPU使用时间比例，是用户运行程序的真正时间，它不包括后面的ni时间。</span><br><span class="line">sy (system): 内核态的CPU使用时间比例，是操作系统的运行时间，操作系统运行时，用户运行程序往往处于等待状态。</span><br><span class="line">ni (nice): 表示低优先级用户态的CPU时间比例，取值范围为[-20,19]，数值越大，则优先级越低。</span><br><span class="line">id (idle): 表示空闲的CPU时间比例，值越大，CPU空闲时间比例越高，利用率越低。</span><br><span class="line">wa (iowait): 表示处于IO等待状态的CPU时间比例。</span><br><span class="line">hi (hard interrupt): 表示处理硬中断的CPU时间比例。硬中断，也叫异步中断。硬中断是由硬件设备依照CPU时钟信号产生的，即意味着中断发生具备随机性和突发性，可以在指令正在执行时发生。</span><br><span class="line">si (soft interrupt): 与hi相反，表示处理软中断的CPU时间比例。软中断，也叫同步中断。软中断是由CPU执行中断产生指令时产生，是由程序预先实现好的，不是随机的。</span><br><span class="line">st (steal): 表示当前系统运行在虚拟机中被其他虚拟机占用的CPU时间比例。这体现为物理 CPU 没有办法为当前系统服务，通常正在为另一个系统服务。 在虚拟机超卖比较严重的场景，这个数值非常明显。 这部分时间显然不是当前系统所用，而是被其他系统占用了。</span><br></pre></td></tr></table></figure><p>​当us很高时，说明CPU时间主要消耗在用户代码上，可以从用户代码角度考虑优化性能；当sy很高时，说明CPU时间主要消耗在内核上，可以从是否系统调用频繁、CPU进程或线程切换频繁角度考虑性能的优化；当wa很高时，说明有进程在进行频繁的IO操作，可能是磁盘IO或者网络IO。一般情况下，如果%us+%sy&lt;&#x3D;70%，我们可以认为系统的运行状态良好。</p><h5 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h5><p>​total(内存总量),free(空闲内存),used(已使用内存),buffer&#x2F;cache(缓存)。buffers与cached都是内存操作，用来保存系统曾经打开过的文件以及文件属性信息，这样当操作系统需要读取某些文件时，会优先从buffers与cached内存区查找，然后才从磁盘读取。通过缓存，能够大大提高了操作系统的性能。因此，对于linux系统来说，可用于分配的内存不止free的内存，同时还包括cached的内存（其实还包括buffers的内存）。cached和buffers都属于缓存，它们的区别主要在于cached主要用来缓冲频繁读取的文件，它可以直接记忆我们打开的文件内容；而buffers主要用来给块设备做的缓冲大小，只记录文件系统的元数据(metadata)以及缓存文件(tracking in-flight pages)信息，比如存储目录里面的内容，权限等。</p><p>在性能测试中，经常会用到系统已用内存、物理已用内存、系统内存占用率以及物理内存占用率这几个指标，它们的计算公式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">物理已用内存 = 实际已用内存 - 缓冲 - 缓存 </span><br><span class="line">物理空闲内存 = 总物理内存 - 实际已用内存 + 缓冲 + 缓存 </span><br><span class="line">应用程序可用空闲内存 = 总物理内存 - 实际已用内存 </span><br><span class="line">应用程序已用内存 = 实际已用内存 - 缓冲 - 缓存</span><br><span class="line">total = used + free + buffer/cache</span><br><span class="line">avaiable = free + buffer/cache</span><br></pre></td></tr></table></figure><p>​一般情况下，系统内存占用率&lt;&#x3D;70%，我们可以认为系统的内存使用情况良好，如果超出则说明系统内存资源紧张。</p><h5 id="磁盘"><a href="#磁盘" class="headerlink" title="磁盘"></a>磁盘</h5><ul><li>磁盘I&#x2F;O：I&#x2F;O，即input&#x2F;output，磁盘的输入输出，输入指的是对磁盘写入数据，输出指的是从磁盘读出数据，磁盘I&#x2F;O可以理解为读写。应用发起的一次或多次数据请求，I&#x2F;O请求的数据量又称I&#x2F;O大小，单位为KiB，例如4KiB、256KiB、1024KiB等；</li><li>磁盘IOPS：磁盘IOPS是指一秒内磁盘进行多少次I&#x2F;O读写；</li><li>磁盘吞吐量：每秒磁盘I&#x2F;O的流量，即磁盘写入加上读出的数据的大小。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">I/O 读写的类型，大体上可以分为：</span><br><span class="line">读 / 写 I/O：存数据时候对应的是写操作，取数据的时候对应的是是读操作。</span><br><span class="line">大 / 小块 I/O：这个数值指的是控制器指令中给出的连续读出扇区数目的多少。</span><br><span class="line">连续 / 随机 I/O：连续 I/O 指的是本次 I/O 给出的初始扇区地址和上一次 I/O 的结束扇区地址是完全连续或者相隔不多的。反之，如果相差很大，则算作一次随机 I/O。连续 I/O 比随机 I/O 效率高，因为在做连续 I/O 的时候，磁头几乎不用换道，或者换道的时间很短；而对于随机 I/O，如果这个 I/O 很多的话，会导致磁头不停地换道，造成效率的极大降低。</span><br><span class="line">顺序 / 并发 I/O：从概念上讲，并发 I/O 就是指向一块磁盘发出一条 I/O 指令后，不必等待它回应，接着向另外一块磁盘发 I/O 指令。对于具有条带性的 RAID（LUN），对其进行的 I/O 操作是并发的，例如：raid 0+1(1+0),raid5 等。反之则为顺序 I/O。</span><br><span class="line">吞吐量 = IOPS * I/O大小</span><br></pre></td></tr></table></figure><h5 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h5><p>​网络吞吐量是指在某个时刻，在网络中的两个节点之间，提给给网络应用的剩余带宽。 即在没有帧丢失的状况下，设备能够接受的最大速率。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">通常是以 4 个指标来衡量网络的性能，分别是带宽、延时、吞吐率、PPS（Packet Per Second），它们表示的意义如下</span><br><span class="line">带宽，表示链路的最大传输速率，单位是 b/s （比特 / 秒），带宽越大，其传输能力就越强。</span><br><span class="line">延时，表示请求数据包发送后，收到对端响应，所需要的时间延迟。不同的场景有着不同的含义，比如可以表示建立 TCP 连接所需的时间延迟，或一个数据包往返所需的时间延迟。</span><br><span class="line">吞吐率，表示单位时间内成功传输的数据量，单位是 b/s（比特 / 秒）或者 B/s（字节 / 秒），吞吐受带宽限制，带宽越大，吞吐率的上限才可能越高。</span><br><span class="line">PPS，全称是 Packet Per Second（包 / 秒），表示以网络包为单位的传输速率，一般用来评估系统对于网络的转发能力。</span><br><span class="line">当然，除了以上这四种基本的指标，还有一些其他常用的性能指标，比如：</span><br><span class="line"></span><br><span class="line">网络的可用性，表示网络能否正常通信；</span><br><span class="line">并发连接数，表示 TCP 连接数量；</span><br><span class="line">丢包率，表示所丢失数据包数量占所发送数据组的比率；</span><br><span class="line">重传率，表示重传网络包的比例；</span><br></pre></td></tr></table></figure><h2 id="工具集锦"><a href="#工具集锦" class="headerlink" title="工具集锦"></a>工具集锦</h2><h4 id="unixBench"><a href="#unixBench" class="headerlink" title="unixBench"></a>unixBench</h4><p>UnixBench的测试能力包含系统调用、读写、进程、2D、3D、管道、运算等系统基准性能，会对系统CPU、内存、磁盘、网络等各个方面进行一系列的测试。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./Run -c 1 -c 8 //表示执行两次，第一次单个copies,第二次8个copies的测试任务。</span><br></pre></td></tr></table></figure><p>测试结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line">make all</span><br><span class="line">make[1]: Entering directory &#x27;/path/to/test-tool/UnixBench5.1.3-1&#x27;</span><br><span class="line">Checking distribution of files</span><br><span class="line">./pgms  exists</span><br><span class="line">./src  exists</span><br><span class="line">./testdir  exists</span><br><span class="line">./results  exists</span><br><span class="line">make[1]: Leaving directory &#x27;/path/to/test-tool/UnixBench5.1.3-1&#x27;</span><br><span class="line"></span><br><span class="line">   #    #  #    #  #  #    #          #####   ######  #    #   ####   #    #</span><br><span class="line">   #    #  ##   #  #   #  #           #    #  #       ##   #  #    #  #    #</span><br><span class="line">   #    #  # #  #  #    ##            #####   #####   # #  #  #       ######</span><br><span class="line">   #    #  #  # #  #    ##            #    #  #       #  # #  #       #    #</span><br><span class="line">   #    #  #   ##  #   #  #           #    #  #       #   ##  #    #  #    #</span><br><span class="line">    ####   #    #  #  #    #          #####   ######  #    #   ####   #    #</span><br><span class="line"></span><br><span class="line">   Version 5.1.3                      Based on the Byte Magazine Unix Benchmark</span><br><span class="line"></span><br><span class="line">   Multi-CPU version                  Version 5 revisions by Ian Smith,</span><br><span class="line">                                      Sunnyvale, CA, USA</span><br><span class="line">   January 13, 2011                   johantheghost at yahoo period com</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1 x Dhrystone 2 using register variables  1 2 3 4 5 6 7 8 9 10</span><br><span class="line"></span><br><span class="line">1 x Double-Precision Whetstone  1 2 3 4 5 6 7 8 9 10</span><br><span class="line"></span><br><span class="line">1 x Execl Throughput  1 2 3</span><br><span class="line"></span><br><span class="line">1 x File Copy 1024 bufsize 2000 maxblocks  1 2 3</span><br><span class="line"></span><br><span class="line">1 x File Copy 256 bufsize 500 maxblocks  1 2 3</span><br><span class="line"></span><br><span class="line">1 x File Copy 4096 bufsize 8000 maxblocks  1 2 3</span><br><span class="line"></span><br><span class="line">1 x Pipe Throughput  1 2 3 4 5 6 7 8 9 10</span><br><span class="line"></span><br><span class="line">1 x Pipe-based Context Switching  1 2 3 4 5 6 7 8 9 10</span><br><span class="line"></span><br><span class="line">1 x Process Creation  1 2 3</span><br><span class="line"></span><br><span class="line">1 x System Call Overhead  1 2 3 4 5 6 7 8 9 10</span><br><span class="line"></span><br><span class="line">1 x Shell Scripts (1 concurrent)  1 2 3</span><br><span class="line"></span><br><span class="line">1 x Shell Scripts (8 concurrent)  1 2 3</span><br><span class="line"></span><br><span class="line">8 x Dhrystone 2 using register variables  1 2 3 4 5 6 7 8 9 10</span><br><span class="line"></span><br><span class="line">8 x Double-Precision Whetstone  1 2 3 4 5 6 7 8 9 10</span><br><span class="line"></span><br><span class="line">8 x Execl Throughput  1 2 3</span><br><span class="line"></span><br><span class="line">8 x File Copy 1024 bufsize 2000 maxblocks  1 2 3</span><br><span class="line"></span><br><span class="line">8 x File Copy 256 bufsize 500 maxblocks  1 2 3</span><br><span class="line"></span><br><span class="line">8 x File Copy 4096 bufsize 8000 maxblocks  1 2 3</span><br><span class="line"></span><br><span class="line">8 x Pipe Throughput  1 2 3 4 5 6 7 8 9 10</span><br><span class="line"></span><br><span class="line">8 x Pipe-based Context Switching  1 2 3 4 5 6 7 8 9 10</span><br><span class="line"></span><br><span class="line">8 x Process Creation  1 2 3</span><br><span class="line"></span><br><span class="line">8 x System Call Overhead  1 2 3 4 5 6 7 8 9 10</span><br><span class="line"></span><br><span class="line">8 x Shell Scripts (1 concurrent)  1 2 3</span><br><span class="line"></span><br><span class="line">8 x Shell Scripts (8 concurrent)  1 2 3</span><br><span class="line"></span><br><span class="line">========================================================================</span><br><span class="line">   BYTE UNIX Benchmarks (Version 5.1.3)</span><br><span class="line"></span><br><span class="line">   System: wang-PC: GNU/Linux</span><br><span class="line">   OS: GNU/Linux -- 5.15.77-amd64-desktop -- #2 SMP Thu Jun 15 16:06:18 CST 2023</span><br><span class="line">   Machine: x86_64 (unknown)</span><br><span class="line">   Language: en_US.utf8 (charmap=&quot;UTF-8&quot;, collate=&quot;UTF-8&quot;)</span><br><span class="line">   CPU 0: Intel(R) Core(TM) i5-10210U CPU @ 1.60GHz (4199.9 bogomips)</span><br><span class="line">          Hyper-Threading, x86-64, MMX, Physical Address Ext, SYSENTER/SYSEXIT, SYSCALL/SYSRET, Intel virtualization</span><br><span class="line">   CPU 1: Intel(R) Core(TM) i5-10210U CPU @ 1.60GHz (4199.9 bogomips)</span><br><span class="line">          Hyper-Threading, x86-64, MMX, Physical Address Ext, SYSENTER/SYSEXIT, SYSCALL/SYSRET, Intel virtualization</span><br><span class="line">   CPU 2: Intel(R) Core(TM) i5-10210U CPU @ 1.60GHz (4199.9 bogomips)</span><br><span class="line">          Hyper-Threading, x86-64, MMX, Physical Address Ext, SYSENTER/SYSEXIT, SYSCALL/SYSRET, Intel virtualization</span><br><span class="line">   CPU 3: Intel(R) Core(TM) i5-10210U CPU @ 1.60GHz (4199.9 bogomips)</span><br><span class="line">          Hyper-Threading, x86-64, MMX, Physical Address Ext, SYSENTER/SYSEXIT, SYSCALL/SYSRET, Intel virtualization</span><br><span class="line">   CPU 4: Intel(R) Core(TM) i5-10210U CPU @ 1.60GHz (4199.9 bogomips)</span><br><span class="line">          Hyper-Threading, x86-64, MMX, Physical Address Ext, SYSENTER/SYSEXIT, SYSCALL/SYSRET, Intel virtualization</span><br><span class="line">   CPU 5: Intel(R) Core(TM) i5-10210U CPU @ 1.60GHz (4199.9 bogomips)</span><br><span class="line">          Hyper-Threading, x86-64, MMX, Physical Address Ext, SYSENTER/SYSEXIT, SYSCALL/SYSRET, Intel virtualization</span><br><span class="line">   CPU 6: Intel(R) Core(TM) i5-10210U CPU @ 1.60GHz (4199.9 bogomips)</span><br><span class="line">          Hyper-Threading, x86-64, MMX, Physical Address Ext, SYSENTER/SYSEXIT, SYSCALL/SYSRET, Intel virtualization</span><br><span class="line">   CPU 7: Intel(R) Core(TM) i5-10210U CPU @ 1.60GHz (4199.9 bogomips)</span><br><span class="line">          Hyper-Threading, x86-64, MMX, Physical Address Ext, SYSENTER/SYSEXIT, SYSCALL/SYSRET, Intel virtualization</span><br><span class="line">   14:50:41 up 11 days, 23:45,  1 user,  load average: 0.95, 1.32, 7.18; runlevel 5</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line">Benchmark Run: Wed Jan 24 2024 14:50:41 - 15:18:32</span><br><span class="line">8 CPUs in system; running 1 parallel copy of tests</span><br><span class="line"></span><br><span class="line">Dhrystone 2 using register variables       47877041.4 lps   (10.0 s, 7 samples)</span><br><span class="line">Double-Precision Whetstone                     7784.4 MWIPS (9.0 s, 7 samples)</span><br><span class="line">Execl Throughput                               5666.5 lps   (30.0 s, 2 samples)</span><br><span class="line">File Copy 1024 bufsize 2000 maxblocks       1493924.1 KBps  (30.0 s, 2 samples)</span><br><span class="line">File Copy 256 bufsize 500 maxblocks          426805.3 KBps  (30.0 s, 2 samples)</span><br><span class="line">File Copy 4096 bufsize 8000 maxblocks       3119870.2 KBps  (30.0 s, 2 samples)</span><br><span class="line">Pipe Throughput                             2577750.5 lps   (10.0 s, 7 samples)</span><br><span class="line">Pipe-based Context Switching                 296557.3 lps   (10.0 s, 7 samples)</span><br><span class="line">Process Creation                              13157.5 lps   (30.0 s, 2 samples)</span><br><span class="line">Shell Scripts (1 concurrent)                  14761.5 lpm   (60.0 s, 2 samples)</span><br><span class="line">Shell Scripts (8 concurrent)                   4321.8 lpm   (60.0 s, 2 samples)</span><br><span class="line">System Call Overhead                        2784511.9 lps   (10.0 s, 7 samples)</span><br><span class="line"></span><br><span class="line">System Benchmarks Index Values               BASELINE       RESULT    INDEX</span><br><span class="line">Dhrystone 2 using register variables         116700.0   47877041.4   4102.6</span><br><span class="line">Double-Precision Whetstone                       55.0       7784.4   1415.3</span><br><span class="line">Execl Throughput                                 43.0       5666.5   1317.8</span><br><span class="line">File Copy 1024 bufsize 2000 maxblocks          3960.0    1493924.1   3772.5</span><br><span class="line">File Copy 256 bufsize 500 maxblocks            1655.0     426805.3   2578.9</span><br><span class="line">File Copy 4096 bufsize 8000 maxblocks          5800.0    3119870.2   5379.1</span><br><span class="line">Pipe Throughput                               12440.0    2577750.5   2072.1</span><br><span class="line">Pipe-based Context Switching                   4000.0     296557.3    741.4</span><br><span class="line">Process Creation                                126.0      13157.5   1044.2</span><br><span class="line">Shell Scripts (1 concurrent)                     42.4      14761.5   3481.5</span><br><span class="line">Shell Scripts (8 concurrent)                      6.0       4321.8   7203.0</span><br><span class="line">System Call Overhead                          15000.0    2784511.9   1856.3</span><br><span class="line">                                                                   ========</span><br><span class="line">System Benchmarks Index Score                                        2360.4</span><br><span class="line"></span><br><span class="line">------------------------------------------------------------------------</span><br><span class="line">Benchmark Run: Wed Jan 24 2024 15:18:32 - 15:46:49</span><br><span class="line">8 CPUs in system; running 8 parallel copies of tests</span><br><span class="line"></span><br><span class="line">Dhrystone 2 using register variables      176274670.8 lps   (10.0 s, 7 samples)</span><br><span class="line">Double-Precision Whetstone                    46994.6 MWIPS (9.4 s, 7 samples)</span><br><span class="line">Execl Throughput                              20151.0 lps   (30.0 s, 2 samples)</span><br><span class="line">File Copy 1024 bufsize 2000 maxblocks       1745833.5 KBps  (30.0 s, 2 samples)</span><br><span class="line">File Copy 256 bufsize 500 maxblocks          478830.4 KBps  (30.0 s, 2 samples)</span><br><span class="line">File Copy 4096 bufsize 8000 maxblocks       4568801.0 KBps  (30.0 s, 2 samples)</span><br><span class="line">Pipe Throughput                             9157085.1 lps   (10.0 s, 7 samples)</span><br><span class="line">Pipe-based Context Switching                1132991.1 lps   (10.0 s, 7 samples)</span><br><span class="line">Process Creation                              44340.3 lps   (30.0 s, 2 samples)</span><br><span class="line">Shell Scripts (1 concurrent)                  36537.4 lpm   (60.0 s, 2 samples)</span><br><span class="line">Shell Scripts (8 concurrent)                   4653.2 lpm   (60.1 s, 2 samples)</span><br><span class="line">System Call Overhead                        8498217.7 lps   (10.0 s, 7 samples)</span><br><span class="line"></span><br><span class="line">System Benchmarks Index Values               BASELINE       RESULT    INDEX</span><br><span class="line">Dhrystone 2 using register variables         116700.0  176274670.8  15104.9</span><br><span class="line">Double-Precision Whetstone                       55.0      46994.6   8544.5</span><br><span class="line">Execl Throughput                                 43.0      20151.0   4686.3</span><br><span class="line">File Copy 1024 bufsize 2000 maxblocks          3960.0    1745833.5   4408.7</span><br><span class="line">File Copy 256 bufsize 500 maxblocks            1655.0     478830.4   2893.2</span><br><span class="line">File Copy 4096 bufsize 8000 maxblocks          5800.0    4568801.0   7877.2</span><br><span class="line">Pipe Throughput                               12440.0    9157085.1   7361.0</span><br><span class="line">Pipe-based Context Switching                   4000.0    1132991.1   2832.5</span><br><span class="line">Process Creation                                126.0      44340.3   3519.1</span><br><span class="line">Shell Scripts (1 concurrent)                     42.4      36537.4   8617.3</span><br><span class="line">Shell Scripts (8 concurrent)                      6.0       4653.2   7755.3</span><br><span class="line">System Call Overhead                          15000.0    8498217.7   5665.5</span><br><span class="line">                                                                   ========</span><br><span class="line">System Benchmarks Index Score                                        5874.3</span><br></pre></td></tr></table></figure><p>测试项目</p><p><img src="/home/wang/.config/Typora/typora-user-images/image-20240124153054135.png" alt="image-20240124153054135"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Dhrystone测试：</span><br><span class="line">测试聚焦在字符串处理，没有浮点运算操作。这个测试用于测试链接器编译、代码优化、内存缓存、等待状态、整数数据类型等。</span><br><span class="line">Whetstone测试：</span><br><span class="line">测试项目用于测试浮点运算效率和速度。含若干个科学计算的典型性能模块，包含大量的C语言函数,sin cos sqrt exp和日志以及使用整数和浮点的数学操作。包含数组访问、条件分支和过程调用。</span><br><span class="line">Execl Throughput测试：</span><br><span class="line">每秒钟可以执行的execl系统调用的次数。</span><br><span class="line">File Copy测试：</span><br><span class="line">这项测试衡量文件数据从一个文件被传输到另外一个，使用大量的缓存。包括文件的读、写、复制测试，测试指标是一定时间内（默认是10秒）被重写、读、复制的字符数量。</span><br><span class="line">Pipe Throughput(管道吞吐)测试:</span><br><span class="line">测试在一秒钟一个进程写512比特到一个管道中并且读回来的次数。管道吞吐测试和实际编程有差距。</span><br><span class="line">Pipe-based Context Switching(基于管道的上下文交互)测试:</span><br><span class="line">测试衡量两个进程通过管道交换和整数倍的增加吞吐的次数。基于管道的上下文切换和真实程序很类似。测试程序产生一个双向管道通讯的子线程。</span><br><span class="line">Process Creation(进程创建)测试:</span><br><span class="line">这项测试衡量一个进程能产生子线程并且立即退出的次数。新进程真的创建进程阻塞和内存占用，所以测试程序直接使用内存带宽。这项测试用于典型的比较大量的操作系统进程创建操作。</span><br><span class="line">Shell Scripts测试:</span><br><span class="line">shell脚本测试用于衡量在一分钟内，一个进程可以启动并停止shell脚本的次数，通常会测试1，2， 3， 4， 8 个shell脚本的共同拷贝，shell脚本是一套转化数据文件的脚本。</span><br><span class="line">System Call Overhead （系统调用消耗）测试:</span><br><span class="line">测试衡量进入和离开系统内核的消耗，例如，系统调用的消耗。程序简单重复的执行getpid调用（返回调用的进程id）。消耗的指标是调用进入和离开内核的执行时间。</span><br><span class="line">Graphical Tests(图形)测试:</span><br><span class="line">测试非常粗的2D和3D图形性能，尤其是3D测试非常有限。测试结果和硬件，系统合适的驱动关系很大。</span><br></pre></td></tr></table></figure><h4 id="fio"><a href="#fio" class="headerlink" title="fio"></a>fio</h4><p>fio主要用来测试硬盘io性能。这个工具的可定制性非常强，可以根据测试者的想法进行各种混合io测试，它支持13种不同类型io引擎（libaio、sync、mmap、posixaio、network等等）。它可以测试块设备或文件，可以通过多线程或进程模拟各种io操作，可以测试统计iops、带宽和时延等性能。我们主要使用fio工具进行存储性能测试。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fio -name=iouring_test -filename=/mnt/vdd/testfile -iodepth=128 -thread -rw=randread -ioengine=io_uring -sqthread_poll=1 -direct=1 -bs=4k -size=10G -numjobs=1 -runtime=120 -group_reporting</span><br></pre></td></tr></table></figure><p>说明：<br>filename&#x3D;&#x2F;dev&#x2F;sdb1    测试文件名称，通常选择需要测试的盘的data目录。<br>direct&#x3D;1         测试过程绕过机器自带的buffer。使测试结果更真实。<br>bs&#x3D;4k          单次io的块文件大小为16k<br>size&#x3D;5g  本次的测试文件大小为5g，以每次4k的io进行测试。<br>numjobs&#x3D;1        本次的测试线程为30.<br>runtime&#x3D;120       测试时间为120秒，如果不写则一直将5g文件分4k每次写完为止。<br>ioengine&#x3D;io_uring      io引擎使用io_uring方式<br>group_reporting     关于显示结果的，汇总每个进程的信息。</p><p>此外<br>rwmixwrite&#x3D;30      在混合读写的模式下，写占30%<br>lockmem&#x3D;1g        只使用1g内存进行测试。<br>zero_buffers       用0初始化系统buffer。<br>nrfiles&#x3D;8        每个进程生成文件的数量。<br>read 顺序读<br>write 顺序写<br>rw,readwrite 顺序混合读写<br>randwrite 随机写<br>randread 随机读<br>randrw 随机混合读写</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">uring -sqthread_poll=1 -direct=1 -bs=4k -size=10G -numjobs=1 -runtime=120 -group_reporting</span><br><span class="line">iouring_test: (g=0): rw=randread, bs=(R) 4096B-4096B, (W) 4096B-4096B, (T) 4096B-4096B, ioengine=io_uring, iodepth=128</span><br><span class="line">fio-3.22</span><br><span class="line">Starting 1 thread</span><br><span class="line">Jobs: 1 (f=1): [r(1)][3.2%][eta 01h:01m:42s]                        </span><br><span class="line">iouring_test: (groupid=0, jobs=1): err= 0: pid=63227: Wed Jan 24 15:55:58 2024</span><br><span class="line">  read: IOPS=682, BW=2729KiB/s (2795kB/s)(330MiB/123713msec)  //读操作的iops(每秒输入输出量)和bw(带宽)</span><br><span class="line">    clat (usec): min=506, max=11807k, avg=187540.47, stdev=846840.59</span><br><span class="line">     lat (usec): min=507, max=11807k, avg=187541.31, stdev=846840.60</span><br><span class="line">    clat percentiles (usec):</span><br><span class="line">     |  1.00th=[    1188],  5.00th=[    5800], 10.00th=[    8160],</span><br><span class="line">     | 20.00th=[   11469], 30.00th=[   15008], 40.00th=[   19792],</span><br><span class="line">     | 50.00th=[   26084], 60.00th=[   36439], 70.00th=[   56361],</span><br><span class="line">     | 80.00th=[  104334], 90.00th=[  238027], 95.00th=[  425722],</span><br><span class="line">     | 99.00th=[ 5804917], 99.50th=[ 7214203], 99.90th=[ 8422163],</span><br><span class="line">     | 99.95th=[ 8657044], 99.99th=[10804528]</span><br><span class="line">   bw (  KiB/s): min= 1357, max= 5397, per=100.00%, avg=2806.35, stdev=636.20, samples=240</span><br><span class="line">   iops        : min=  339, max= 1349, avg=701.40, stdev=159.08, samples=240</span><br><span class="line">  lat (usec)   : 750=0.13%, 1000=0.50%</span><br><span class="line">  lat (msec)   : 2=0.93%, 4=1.25%, 10=12.60%, 20=25.15%, 50=27.08%</span><br><span class="line">  lat (msec)   : 100=11.79%, 250=11.16%, 500=5.21%, 750=1.25%, 1000=0.54%</span><br><span class="line">  lat (msec)   : 2000=0.58%, &gt;=2000=1.83%</span><br><span class="line">  cpu          : usr=99.85%, sys=0.08%, ctx=94, majf=0, minf=0</span><br><span class="line">  IO depths    : 1=0.1%, 2=0.1%, 4=0.1%, 8=0.1%, 16=0.1%, 32=0.1%, &gt;=64=99.9%</span><br><span class="line">     submit    : 0=0.0%, 4=0.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, &gt;=64=0.0%</span><br><span class="line">     complete  : 0=0.0%, 4=100.0%, 8=0.0%, 16=0.0%, 32=0.0%, 64=0.0%, &gt;=64=0.1%</span><br><span class="line">     issued rwts: total=84415,0,0,0 short=0,0,0,0 dropped=0,0,0,0</span><br><span class="line">     latency   : target=0, window=0, percentile=100.00%, depth=128</span><br><span class="line"></span><br><span class="line">Run status group 0 (all jobs):</span><br><span class="line">   READ: bw=2729KiB/s (2795kB/s), 2729KiB/s-2729KiB/s (2795kB/s-2795kB/s), io=330MiB (346MB), run=123713-123713msec</span><br><span class="line"></span><br><span class="line">Disk stats (read/write):</span><br><span class="line">    dm-0: ios=84415/17, merge=0/0, ticks=15416332/27284, in_queue=15443616, util=100.00%, aggrios=84414/15, aggrmerge=1/2, aggrticks=15402295/25881, aggrin_queue=15260184, aggrutil=100.00%</span><br><span class="line">  vda: ios=84414/15, merge=1/2, ticks=15402295/25881, in_queue=15260184, util=100.00%</span><br></pre></td></tr></table></figure><h4 id="lmbench"><a href="#lmbench" class="headerlink" title="lmbench"></a>lmbench</h4><p><code>Lmbench</code> 是一款简易可以移植的内存测试工具，其主要功能有，带宽测评（读取缓存文件、拷贝内存、读&#x2F;写内存、管道、TCP），延时测评（上下文切换、网络、文件系统的建立和删除、进程创建、<a href="https://so.csdn.net/so/search?q=%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86&spm=1001.2101.3001.7020">信号处理</a>、上层系统调用、内存读入反应时间）等功能。</p><h4 id="Stream"><a href="#Stream" class="headerlink" title="Stream"></a>Stream</h4><p>Stream内存带宽性能测试基准工具。</p><p>stream通过生成四种不同模式下的内存读写操作，用于测试内存带宽。</p><p>Copy操作最为简单，它先访问一个内存单元读出其中的值，再将值写入到另一个内存单元。</p><p>Scale操作先从内存单元读出其中的值，作一个乘法运算，再将结果写入到另一个内存单元。</p><p>Add操作先从内存单元读出两个值，做加法运算， 再将结果写入到另一个内存单元。</p><p>Triad的中文含义是将三个组合起来，在本测试中表示的意思是将Copy、Scale、Add三种操作组合起来进行测试。具体操作方式是：先从内存数组中读两个值a、b，对其进行乘加混合运算（a+因子* b），将运算结果写入到另一个内存单元。 </p><h4 id="iozone"><a href="#iozone" class="headerlink" title="iozone"></a>iozone</h4><p>IOzone是文件系统性能测试工具。可以测试不同的操作系统中文件系统的读写性能。可以测试 Read, write, re-read,re-write, read backwards, read strided, fread, fwrite, random read, pread, mmap, aio_read, aio_write 等等不同的模式下的硬盘的性能。</p><table><thead><tr><th>Write</th><th>测试向一个新文件写入的性能。当一个新文件被写入时，不仅仅是那些文件中的数据需要被存储，还包括那些用于定位数据存储在存储介质的具体位置的额外信息。这些额外信息被称作 “元数据”。它包括目录信息，所分配的空间和一些与该文件有关但又并非该文件所含数据的其他数据。拜这些额外信息所赐，Write 的性能通常会比 Re-write 的性能低。</th></tr></thead><tbody><tr><td>Re-write</td><td>测试向一个已存在的文件写入的性能。当一个已存在的文件被写入时，所需工作量较少，因为此时元数据已经存在。Re-write 的性能通常比 Write 的性能高。</td></tr><tr><td>Read</td><td>测试读一个已存在的文件的性能。</td></tr><tr><td>Re-Read</td><td>测试读一个最近读过的文件的性能。Re-Read 性能会高些，因为操作系统通常会缓存最近读过的文件数据。这个缓存可以被用于读以提高性能。</td></tr><tr><td>Random Read</td><td>测试读一个文件中的随机偏移量的性能。许多因素可能影响这种情况下的系统性能，例如：操作系统缓存的大小，磁盘数量，寻道延迟和其他。</td></tr><tr><td>Random Write</td><td>测试写一个文件中的随机偏移量的性能。同样，许多因素可能影响这种情况下的系统性能，例如：操作系统缓存的大小，磁盘数量，寻道延迟和其他。</td></tr><tr><td>Random Mix</td><td>测试读写一个文件中的随机偏移量的性能。同样，许多因素可能影响这种情况下的系统性能，例如：操作系统缓存的大小，磁盘数量，寻道延迟和其他。这个测试只有在吞吐量测试模式下才能进行。每个线程 &#x2F; 进程运行读或写测试。这种分布式读 &#x2F; 写测试是基于 round robin 模式的。最好使用多于一个线程 &#x2F; 进程执行此测试。</td></tr><tr><td>Backwards Read</td><td>测试使用倒序读一个文件的性能。这种读文件方法可能看起来很可笑，事实上，有些应用确实这么干。MSC Nastran 是一个使用倒序读文件的应用程序的一个例子。它所读的文件都十分大（大小从 G 级别到 T 级别）。尽管许多操作系统使用一些特殊实现来优化顺序读文件的速度，很少有操作系统注意到并增强倒序读文件的性能。</td></tr><tr><td>Record Rewrite</td><td>测试写与覆盖写一个文件中的特定块的性能。这个块可能会发生一些很有趣的事。如果这个块足够小（比 CPU 数据缓存小），测出来的性能将会非常高。如果比 CPU 数据缓存大而比 TLB 小，测出来的是另一个阶段的性能。如果比此二者都大，但比操作系统缓存小，得到的性能又是一个阶段。若大到超过操作系统缓存，又是另一番结果。</td></tr><tr><td>Strided Read</td><td>测试跳跃读一个文件的性能。举例如下：在 0 偏移量处读 4Kbytes，然后间隔 200Kbytes, 读 4Kbytes，再间隔 200Kbytes，如此反复。此时的模式是读 4Kbytes，间隔 200Kbytes 并重复这个模式。这又是一个典型的应用行为，文件中使用了数据结构并且访问这个数据结构的特定区域的应用程序常常这样做。许多操作系统并没注意到这种行为或者针对这种类型的访问做一些优化。同样，这种访问行为也可能导致一些有趣的性能异常。一个例子是在一个数据片化的文件系统里，应用程序的跳跃导致某一个特定的磁盘成为性能瓶颈。</td></tr><tr><td>Fwrite</td><td>测试调用库函数 fwrite () 来写文件的性能。这是一个执行缓存与阻塞写操作的库例程。缓存在用户空间之内。如果一个应用程序想要写很小的传输块，fwrite () 函数中的缓存与阻塞 I&#x2F;O 功能能通过减少实际操作系统调用并在操作系统调用时增加传输块的大小来增强应用程序的性能。这个测试是写一个新文件，所以元数据的写入也是要的。</td></tr><tr><td>Frewrite</td><td>测试调用库函数 fwrite () 来写文件的性能。这是一个执行缓存与阻塞写操作的库例程。缓存在用户空间之内。如果一个应用程序想要写很小的传输块，fwrite () 函数中的缓存与阻塞 I&#x2F;O 功能能通过减少实际操作系统调用并在操作系统调用时增加传输块的大小来增强应用程序的性能。</td></tr></tbody></table><h4 id="iperf3"><a href="#iperf3" class="headerlink" title="iperf3"></a>iperf3</h4><p>iperf3是基于Client&#x2F;Server的网络性能测试工具，通常用于测试网络上可达到的最大带宽，它能够测试TCP、UDP及SCTP的带宽质量，可以提供网络吞吐量、网络波动、网络丢包率以及最大传输单元大小等信息，能够帮助我们测试网络性能，定位网络瓶颈。</p><h4 id="netperf"><a href="#netperf" class="headerlink" title="netperf"></a>netperf</h4><p>Netperf是一种网络性能的测量工具，可以测试基于TCP或UDP吞吐、响应速率。Netperf包括Clien和Server端，Server端主要用来实现监听工作，Client端进行测试。</p><h4 id="ltp"><a href="#ltp" class="headerlink" title="ltp"></a>ltp</h4><p>LTP测试套件是测试Linux内核和内核相关特性的工具的集合。该工具的目的是通过把测试自动化引入到Linux内核测试，提高Linux的内核质量。通过功能测试、压力测试和回归测试来验证 Linux 系统的可靠性、稳定性和健壮性。整个项目约4000个测试用例。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Tools </category>
          
          <category> Test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Test </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java安装配置</title>
      <link href="/2023/12/15/Java%E7%8E%AF%E5%A2%83%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/"/>
      <url>/2023/12/15/Java%E7%8E%AF%E5%A2%83%E7%9B%B8%E5%85%B3%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="Java-环境安装配置"><a href="#Java-环境安装配置" class="headerlink" title="Java-环境安装配置"></a>Java-环境安装配置</h1><p>Link： <a href="https://www.oracle.com/java/technologies/downloads/">https://www.oracle.com/java/technologies/downloads/</a></p><p>下载tar包，解压到指定的位置</p><p>修改环境变量(Linux)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line">export JAVA_HOME=/opt/java/jdk1.8.0_381</span><br><span class="line">export PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line">export JRE_HOME=$JAVA_HOME/jre</span><br></pre></td></tr></table></figure><h1 id="maven配置"><a href="#maven配置" class="headerlink" title="maven配置"></a>maven配置</h1><p>Link：<a href="https://maven.apache.org/">https://maven.apache.org/</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export MAVEN_HOME=/opt/maven/apache-maven-3.9.4</span><br><span class="line">export PATH=$&#123;PATH&#125;:$&#123;MAVEN_HOME&#125;/bin</span><br></pre></td></tr></table></figure><h1 id="运行jar包"><a href="#运行jar包" class="headerlink" title="运行jar包"></a>运行jar包</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打包jar</span></span><br><span class="line">mvn package ***.jar</span><br><span class="line"><span class="comment"># 直接运行</span></span><br><span class="line">java -jar ***.jar</span><br><span class="line"><span class="comment"># 开启后台运行</span></span><br><span class="line"><span class="built_in">nohup</span> java -jar ***.jar &amp;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git使用</title>
      <link href="/2023/12/15/git%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/12/15/git%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="远程配置"><a href="#远程配置" class="headerlink" title="远程配置"></a>远程配置</h1><p>“待补充···”</p><h1 id="本地配置"><a href="#本地配置" class="headerlink" title="本地配置"></a>本地配置</h1><p>优先级：local &gt; global &gt; system</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git config user.name &lt;name&gt;</span><br><span class="line">git config user.email &lt;email&gt;</span><br><span class="line"><span class="comment"># --local ：local只对仓库有效</span></span><br><span class="line"><span class="comment"># --global ：global对登录用户所有仓库有效</span></span><br><span class="line"><span class="comment"># --system ：system对系统的所有用户有效</span></span><br></pre></td></tr></table></figure><h1 id="本地仓库切换分支"><a href="#本地仓库切换分支" class="headerlink" title="本地仓库切换分支"></a>本地仓库切换分支</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git checkout &lt;old-branch&gt;</span><br><span class="line">git checkout -b &lt;new-branch&gt;</span><br></pre></td></tr></table></figure><h1 id="合并远程分支"><a href="#合并远程分支" class="headerlink" title="合并远程分支"></a>合并远程分支</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin &lt;local-branch&gt;:&lt;cloud-branch&gt;</span><br></pre></td></tr></table></figure><h1 id="删除本地分支"><a href="#删除本地分支" class="headerlink" title="删除本地分支"></a>删除本地分支</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d &lt;local-branch&gt;</span><br></pre></td></tr></table></figure><h1 id="删除远程分支"><a href="#删除远程分支" class="headerlink" title="删除远程分支"></a>删除远程分支</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin -d &lt;cloud-branch&gt;</span><br></pre></td></tr></table></figure><h1 id="拉取远程代码到本地分支"><a href="#拉取远程代码到本地分支" class="headerlink" title="拉取远程代码到本地分支"></a>拉取远程代码到本地分支</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin &lt;local-branch&gt;</span><br></pre></td></tr></table></figure><h1 id="创建远程分支"><a href="#创建远程分支" class="headerlink" title="创建远程分支"></a>创建远程分支</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将本地分支推送到远程分支，若远程分支不存在则会自动新建新远程分支</span></span><br><span class="line">git push origin &lt;local-branch&gt;:&lt;cloud-branch&gt;</span><br><span class="line"><span class="comment"># 将本地空分支推送到远程分支上时，则会删除该远程分支</span></span><br><span class="line">git push origin :&lt;cloud-branch&gt;</span><br></pre></td></tr></table></figure><h1 id="合并commit"><a href="#合并commit" class="headerlink" title="合并commit"></a>合并commit</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 本地通常会有无数次 commit ，可以合并“相同功能”的多个 commit，以保持历史的简洁。</span></span><br><span class="line">git commit --amend </span><br></pre></td></tr></table></figure><h1 id="添加多个远程仓库"><a href="#添加多个远程仓库" class="headerlink" title="添加多个远程仓库"></a>添加多个远程仓库</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#添加远程仓库地址，并将其命名。</span></span><br><span class="line">git remote add &lt;name&gt; &lt;url&gt;</span><br><span class="line"><span class="comment">#提交到远程仓库，origin是默认仓库地址。</span></span><br><span class="line">git push &lt;name&gt; &lt;本地分支&gt;:&lt;远程仓库分支&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Tools </category>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mock编译rpm软件包</title>
      <link href="/2023/12/15/mock%E7%BC%96%E8%AF%91rpm%E8%BD%AF%E4%BB%B6%E5%8C%85/"/>
      <url>/2023/12/15/mock%E7%BC%96%E8%AF%91rpm%E8%BD%AF%E4%BB%B6%E5%8C%85/</url>
      
        <content type="html"><![CDATA[<h1 id="mock-环境编译"><a href="#mock-环境编译" class="headerlink" title="mock 环境编译"></a>mock 环境编译</h1><p>1、yum install mock</p><p>2、新建或修改 &#x2F;etc&#x2F;mock&#x2F;example.cfg</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">config_opts[&#x27;basedir&#x27;] = &#x27;/home/&#x27;</span><br><span class="line">config_opts[&#x27;root&#x27;] = &#x27;example&#x27;</span><br><span class="line">config_opts[&#x27;target_arch&#x27;] = &#x27;x86_64&#x27;</span><br><span class="line">config_opts[&#x27;legal_host_arches&#x27;] = (&#x27;x86_64&#x27;,)</span><br><span class="line">config_opts[&#x27;chroot_setup_cmd&#x27;] = &#x27;install tar gcc-c++   which xz sed make bzip2 gzip gcc coreutils unzip shadow-utils diffutils cpio bash gawk rpm-build info patch util-linux findutils grep vim automake yum wget git&#x27;</span><br><span class="line"></span><br><span class="line">config_opts[&#x27;releasever&#x27;] = &#x27;8&#x27;</span><br><span class="line"></span><br><span class="line">config_opts[&#x27;yum.conf&#x27;] = &quot;&quot;&quot;</span><br><span class="line">[main]</span><br><span class="line">keepcache=1</span><br><span class="line">debuglevel=2</span><br><span class="line">reposdir=/dev/null</span><br><span class="line">logfile=/var/log/yum.log</span><br><span class="line">retries=20</span><br><span class="line">obsoletes=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">assumeyes=1</span><br><span class="line">syslog_ident=mock</span><br><span class="line">syslog_device=</span><br><span class="line">mdpolicy=group:primary</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">repos</span></span><br><span class="line">[base]</span><br><span class="line">name=base</span><br><span class="line">baseurl = url</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">module_hotfixes=true</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3、可使用root直接运行，也可创建mock用户并添加到mockbuild组中在编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mock -r example --rebuild *src.rpm</span><br></pre></td></tr></table></figure><p>4、使用root用户进入mock环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /var/lib/mock/**</span><br><span class="line">$ <span class="built_in">chroot</span> .</span><br></pre></td></tr></table></figure><h1 id="rpm-build编译"><a href="#rpm-build编译" class="headerlink" title="rpm-build编译"></a>rpm-build编译</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#解压src包</span></span><br><span class="line">$ rpm -ivh -D <span class="string">&quot;_topdir `pwd`&quot;</span>  /path/to/*.src.rpm</span><br><span class="line"><span class="comment">#根据spec下载依赖</span></span><br><span class="line">$ yum-builddep /path/to/*.spec</span><br><span class="line"><span class="comment"># -D &quot;_topdir `pwd`&quot; 指定编译目录，否则会在默认目录下编译</span></span><br><span class="line">$ rpmbuild -ba -D <span class="string">&quot;_topdir `pwd`&quot;</span> /path/to/*.spec</span><br></pre></td></tr></table></figure><h1 id="koji提交"><a href="#koji提交" class="headerlink" title="koji提交"></a>koji提交</h1><p>1 .安装koji</p><p>2.修改koji配置文件</p><p>3.提交rpm包</p><h1 id="rpm-module开启"><a href="#rpm-module开启" class="headerlink" title="rpm module开启"></a>rpm module开启</h1><p>在repo的配置文件中添加,即可开启module模块下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">module_hotfixes = <span class="literal">true</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Learning Tools </category>
          
          <category> Linux </category>
          
          <category> Rpm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Rpm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python安装配置</title>
      <link href="/2023/12/15/Python%E7%9B%B8%E5%85%B3%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
      <url>/2023/12/15/Python%E7%9B%B8%E5%85%B3%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="安装Python"><a href="#安装Python" class="headerlink" title="安装Python"></a>安装Python</h1><ol><li>下载python<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://www.python.org/ftp/python/3.8.0/Python-3.8.0.tgz</span><br><span class="line"><span class="comment"># 解压到opt</span></span><br><span class="line">$ tar -zxvf Python-3.8.0.tgz -C /opt</span><br></pre></td></tr></table></figure></li><li>编译安装python3.8.0<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#进入到python-3.8.0文件夹</span></span><br><span class="line">$ <span class="built_in">cd</span> /opt/Python-3.8.0 </span><br><span class="line"><span class="comment">#检查以确保系统满足程序的最低要求</span></span><br><span class="line">$ sudo ./configure </span><br><span class="line"><span class="comment">#执行编译脚本</span></span><br><span class="line">$ sudo make </span><br><span class="line"><span class="comment">#直接安装</span></span><br><span class="line">$ sudo make install</span><br><span class="line"><span class="comment">#替换原版本安装</span></span><br><span class="line">$ sudo make altinstall</span><br></pre></td></tr></table></figure></li><li>修改python默认版本<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查询python3.8位置</span></span><br><span class="line">$ whereis python3.8</span><br><span class="line">python3.9: /usr/local/bin/python3.8 /usr/local/lib/python3.8</span><br><span class="line"><span class="comment">#删除当前软连接</span></span><br><span class="line">$ sudo <span class="built_in">rm</span> /usr/bin/python</span><br><span class="line"><span class="comment">#为新版python创建软链接</span></span><br><span class="line">$ sudo <span class="built_in">ln</span> -s /usr/bin/python3.8 /usr/bin/python</span><br></pre></td></tr></table></figure></li><li>配置环境变量<br>修改用户主目录下名为.bash_profile的文件，配置PATH环境变量并使其生效。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~</span><br><span class="line">$ vim .bash_profile</span><br><span class="line"><span class="comment"># ... 此处省略上面的代码 ...</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/usr/local/python38/bin</span><br><span class="line"><span class="comment"># ... 此处省略下面的代码 ...</span></span><br></pre></td></tr></table></figure></li><li>激活环境变量<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">source</span> .bash_profile</span><br></pre></td></tr></table></figure></li></ol><h1 id="修改Python默认版本"><a href="#修改Python默认版本" class="headerlink" title="修改Python默认版本"></a>修改Python默认版本</h1><ol><li>查询当前版本<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python --version</span><br><span class="line">Python 2.7.16</span><br></pre></td></tr></table></figure></li><li>删除当前软链接<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo <span class="built_in">rm</span> /usr/bin/python</span><br></pre></td></tr></table></figure></li><li>为新版python创建软链接<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo <span class="built_in">ln</span> -s /usr/bin/python3.7 /usr/bin/python</span><br></pre></td></tr></table></figure></li><li>校验结果<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ python --version</span><br><span class="line">Python 3.7.3</span><br></pre></td></tr></table></figure></li></ol><h1 id="pip源配置"><a href="#pip源配置" class="headerlink" title="pip源配置"></a>pip源配置</h1><p>pip配置信息保存路径：~&#x2F;.config&#x2F;pip&#x2F;pip.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#配置清华源</span></span><br><span class="line">$ pip config <span class="built_in">set</span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line"><span class="comment">#删除配置</span></span><br><span class="line">$ pip config <span class="built_in">unset</span> global.index-url</span><br></pre></td></tr></table></figure><h1 id="venv环境配置"><a href="#venv环境配置" class="headerlink" title="venv环境配置"></a>venv环境配置</h1><p>1.创建独立的python运行环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建独立目录</span></span><br><span class="line">$ <span class="built_in">mkdir</span> venv</span><br><span class="line">$ <span class="built_in">cd</span> venv/</span><br><span class="line"><span class="comment">#初始化python运行环境</span></span><br><span class="line">$ python* -m venv .</span><br><span class="line"><span class="comment">#查看当前目录，发现生成lib，include,bin，pyvenv.cfg</span></span><br><span class="line">$ <span class="built_in">ls</span></span><br><span class="line">bin  include  lib  pyvenv.cfg</span><br><span class="line"><span class="comment">#进入bin目录，激活该venv环境</span></span><br><span class="line">$ <span class="built_in">cd</span> bin</span><br><span class="line">$ <span class="built_in">source</span> activate</span><br><span class="line"><span class="comment">#退出当前的proj101env环境</span></span><br><span class="line">$ deactivate</span><br></pre></td></tr></table></figure><h1 id="Ipython编程工具"><a href="#Ipython编程工具" class="headerlink" title="Ipython编程工具"></a>Ipython编程工具</h1><ol><li>安装Ipython<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip install ipython</span><br></pre></td></tr></table></figure></li><li>启动IPython<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ipython</span><br></pre></td></tr></table></figure></li><li>退出ipython<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ctl+D</span><br></pre></td></tr></table></figure>turtle图形绘制工具</li><li>安装依赖<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># For Ubuntu or other distros with Apt:</span></span><br><span class="line">$ sudo apt-get install python3-tk</span><br><span class="line"><span class="comment"># For Fedora:</span></span><br><span class="line">$ sudo dnf install python3-tkinter</span><br></pre></td></tr></table></figure></li><li>绘制图形<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import turtle</span><br><span class="line"></span><br><span class="line">turtle.pensize(4)</span><br><span class="line">turtle.pencolor(&#x27;red&#x27;)</span><br><span class="line"></span><br><span class="line">turtle.forward(100)</span><br><span class="line">turtle.right(90)</span><br><span class="line">turtle.forward(100)</span><br><span class="line">turtle.right(90)</span><br><span class="line">turtle.forward(100)</span><br><span class="line">turtle.right(90)</span><br><span class="line">turtle.forward(100)</span><br><span class="line"></span><br><span class="line">turtle.mainloop()</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql8数据库配置</title>
      <link href="/2023/12/15/%E6%95%B0%E6%8D%AE%E5%BA%93%E9%85%8D%E7%BD%AE/"/>
      <url>/2023/12/15/%E6%95%B0%E6%8D%AE%E5%BA%93%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="mysql8-0"><a href="#mysql8-0" class="headerlink" title="mysql8.0"></a>mysql8.0</h1><h2 id="mysql8-0-设置表名不区分大小写"><a href="#mysql8-0-设置表名不区分大小写" class="headerlink" title="mysql8.0 设置表名不区分大小写"></a>mysql8.0 设置表名不区分大小写</h2><ul><li>安装数据库之后不启动的情况下，修改&#x2F;etc&#x2F;my.cnf,在末行添加如下内容：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">lower_case_table_names=1</span><br></pre></td></tr></table></figure></li></ul><h2 id="mysql8-0-设置密码"><a href="#mysql8-0-设置密码" class="headerlink" title="mysql8.0 设置密码"></a>mysql8.0 设置密码</h2><ul><li>设置密码<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">mysqladmin -uroot -p<span class="string">&#x27;&#x27;</span> password <span class="string">&#x27;new-password&#x27;</span></span></span><br></pre></td></tr></table></figure></li></ul><h2 id="mysql8-0-开启远程连接"><a href="#mysql8-0-开启远程连接" class="headerlink" title="mysql8.0 开启远程连接"></a>mysql8.0 开启远程连接</h2><ul><li><p>选择mysql数据库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; use mysql</span><br></pre></td></tr></table></figure></li><li><p>更新域属性，’%’表示允许外部访问</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; update user set host=&#x27;%&#x27; where user =&#x27;root&#x27;;</span><br></pre></td></tr></table></figure></li><li><p>刷新:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><p>将当前user和privilige表中的用户信息&#x2F;权限设置从mysql库(MySQL数据库的内置库)中提取到内存里。<br>MySQL用户数据和权限有修改后，希望在”不重启MySQL服务”的情况下直接生效，那么就需要执行这个命令。</p></li><li><p>执行授权语句</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; GRANT ALL PRIVILEGES ON *.* TO &#x27;root&#x27;@&#x27;%&#x27;WITH GRANT OPTION;</span><br></pre></td></tr></table></figure></li><li><p>关闭防火墙</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">systemctl <span class="built_in">disable</span> firewalld</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">systemctl stop firewalld</span></span><br></pre></td></tr></table></figure></li><li><p>或者开放3306端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">开放端口</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">firewall-cmd --zone=public --add-port=3306/tcp --permanent</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看端口</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">firewall-cmd --list-ports</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="保存现有数据更新数据库"><a href="#保存现有数据更新数据库" class="headerlink" title="保存现有数据更新数据库"></a>保存现有数据更新数据库</h1><p>保存指定数据库数据到sql文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uroot -pUnion@1234 --databases ustack_test &gt; ustack_test.sql</span><br></pre></td></tr></table></figure><p>查看表结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">desc tablename;</span><br></pre></td></tr></table></figure><p>查询数据库创建时间</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT create_time  FROM information_schema.tables  WHERE table_schema = &#x27;数据库名&#x27;</span><br></pre></td></tr></table></figure><p>导出数据到sql</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uroot -pPASSWORD  database_name &gt; name.sql</span><br></pre></td></tr></table></figure><p>导入现有sql</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lvm磁盘扩容</title>
      <link href="/2023/12/15/%E7%A3%81%E7%9B%98%E6%89%A9%E5%AE%B9%E6%A0%B9%E5%88%86%E5%8C%BA/"/>
      <url>/2023/12/15/%E7%A3%81%E7%9B%98%E6%89%A9%E5%AE%B9%E6%A0%B9%E5%88%86%E5%8C%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="扩容脚本"><a href="#扩容脚本" class="headerlink" title="扩容脚本"></a>扩容脚本</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义新磁盘，若当前磁盘分区不存在可使用fdisk提前划分。</span></span><br><span class="line"></span><br><span class="line">disk=/dev/vda3</span><br><span class="line">vg=***</span><br><span class="line"></span><br><span class="line">pvcreate <span class="variable">$disk</span> </span><br><span class="line">vgextend <span class="string">&quot;<span class="variable">$vg</span>&quot;</span> <span class="variable">$disk</span> </span><br><span class="line">lvextend /dev/<span class="variable">$&#123;vg&#125;</span>/root <span class="variable">$disk</span> <span class="comment"># xfs文件系统时，写入文件系统，使扩容生效 </span></span><br><span class="line">xfs_growfs /dev/mapper/<span class="variable">$&#123;vg&#125;</span>-root <span class="comment"># ext文件系统用resize2fs命令替换xfs_growfs命令</span></span><br></pre></td></tr></table></figure><h1 id="详解"><a href="#详解" class="headerlink" title="详解"></a>详解</h1><ul><li>磁盘，使用fdisk进行硬盘分区，三个主分区(p)，其余都是拓展分区(e)。</li><li>物理卷(PV)，在逻辑卷管理系统最底层，可以是整个物理硬盘或实际物理硬盘上的分区。</li><li>卷组(VG)，建立在物理卷上，一卷组中至少要包括一物理卷，卷组建立后可动态的添加卷到卷组中，一个逻辑卷管理系统工程中可有多个卷组。对于LVM上面的文件系统而言，VG就是一个大磁盘。文件系统时看不到LVM下面的组成部分的，它只管使用，而LVM则负责管理下面的组成储存块。</li><li>逻辑卷(LV)，建立在卷组基础上，卷组中未分配空间可用于建立新的逻辑卷，逻辑卷建立后可以动态扩展和缩小空间。</li><li>物理区域(PE)，是物理卷中可用于分配的最小存储单元，物理区域大小在建立卷组时指定，一旦确定不能更改，同一卷组所有物理卷的物理区域大小需一致，新的pv(物理卷)加入到vg(卷组)后，pe(物理区域)的大小自动更改为vg(卷组)中定义的pe大小。</li><li>逻辑区域（LE），是逻辑卷中可用于分配的最小存储单元，逻辑区域的大小取决于逻辑卷所在卷组中的物理区域的大小。在同一个卷组中，LE的大小和PE是相同的，并且一一对应。</li><li>卷组描述区域：卷组描述区域存在于每个物理卷中，用于描述物理卷本身、物理卷所属卷组、卷组中逻辑卷、逻辑卷中物理区域的分配等所有信息，它是在使用pvcreate建立物理卷时建立的。</li></ul><h1 id="xfs-growfs"><a href="#xfs-growfs" class="headerlink" title="xfs_growfs"></a>xfs_growfs</h1><ul><li>扩展一个现存的XFS文件系统</li></ul><h1 id="依赖工具"><a href="#依赖工具" class="headerlink" title="依赖工具"></a>依赖工具</h1><ul><li>使用pv，vg，lv相关命令请先安装lvm2<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum insall lvm2</span><br></pre></td></tr></table></figure></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://blog.csdn.net/m0_52544877/article/details/127764618#t2">https://blog.csdn.net/m0_52544877/article/details/127764618#t2</a></p>]]></content>
      
      
      <categories>
          
          <category> Learning Tools </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 磁盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建Blog</title>
      <link href="/2023/12/14/%E6%90%AD%E5%BB%BABlog/"/>
      <url>/2023/12/14/%E6%90%AD%E5%BB%BABlog/</url>
      
        <content type="html"><![CDATA[<h1 id="搭建Blog"><a href="#搭建Blog" class="headerlink" title="搭建Blog"></a>搭建Blog</h1><h2 id="安装node-npm-n"><a href="#安装node-npm-n" class="headerlink" title="安装node npm n"></a>安装node npm n</h2><ul><li><p>安装node.js</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nodejs</span><br></pre></td></tr></table></figure></li><li><p>安装npm<br>npm是nodejs的包管理器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install npm</span><br></pre></td></tr></table></figure></li><li><p>安装n</p><p>n 是交互式 node.js 版本管理工具。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install -g n</span><br></pre></td></tr></table></figure><p>可以使用n安装特定版本的nodejs。</p></li></ul><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><p>​Hexo 是<strong>一个快速、简洁且高效的博客框架</strong>。 Hexo 使用Markdown（或其他标记语言）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p><ul><li><p>配置国内源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm <span class="built_in">set</span> registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure></li><li><p>安装hexo-cli</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install hexo-cli -g</span><br></pre></td></tr></table></figure></li><li><p>初始化项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm init blog</span><br></pre></td></tr></table></figure></li><li><p>安装依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure></li><li><p>打包成dist</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure></li><li><p>运行hexo项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure></li><li><p>清楚hexo部署数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#可删除.deploy_git文件夹在执行hexo clean和hexo deploy</span></span><br><span class="line">hexo clean</span><br></pre></td></tr></table></figure></li><li><p>部署到服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#根据_config.yaml配置文件中的仓库地址，部署到服务器。</span></span><br><span class="line">hexo delpoy</span><br></pre></td></tr></table></figure></li><li><p>替换主题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">安装主题和渲染器：</span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/tufu9441/maupassant-hexo.git themes/maupassant  </span><br><span class="line">$ npm install hexo-renderer-pug --save  </span><br><span class="line">$ npm install hexo-renderer-sass --save  </span><br><span class="line">编辑Hexo目录下的 _config.yml，将theme的值改为maupassant。</span><br><span class="line">注：依赖hexo-renderer-sass安装时容易报错，很可能是国内网络问题，请尝试使用代理或者切换至NPM的国内镜像源安装。</span><br></pre></td></tr></table></figure></li><li><p>创建”About页”</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new page about</span><br><span class="line">创建成功后，编辑博客目录下 /source/about/index.md，添加 layout 属性。</span><br></pre></td></tr></table></figure><ul><li>创建”Archive页”</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new page archive</span><br><span class="line">创建成功后，编辑博客目录下 /source/archive/index.md。</span><br></pre></td></tr></table></figure><ul><li>hexo使用参考：<a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Learning Tools </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs </tag>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
